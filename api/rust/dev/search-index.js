var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","approx_n_unique","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_leaf_array","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","gt_eq","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","lt_eq","","","","","","","max","","max_binary","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","num_falses","num_trues","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","serialize","","","","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","","append_values_iter_trusted_len","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","deserialize","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","serialize","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","approx_n_unique","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","deserialize","","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_elementwise","is_first_distinct","is_last_distinct","limit","","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","serialize","","","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","get_row_encoding_dictionary","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","serialize","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","get_strftime_format","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","get_strftime_format","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","can_have_dtype","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","enum_","eq","","","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_or_infer","get_or_infer_with","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_supported_list_arithmetic_input","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","","","new_dimension","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","serialize","","","","","","","","","","","","","","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_fixed_size_list","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_error_source","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","align_chunks_par","append_record_batch","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","serialize","","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_chunked_unchecked","take_columns","take_opt_chunked_unchecked","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_extend","","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_std","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","approx_n_unique","arg_sort","array","as_list","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","deserialize","div","","","","divide","drop","","drop_nulls","","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_scalar","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","serialize","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","struct_","sub","","","","sum_reduce","tail","take","take_chunked_unchecked","take_materialized_series","","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_struct","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","serialize","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","Any","","","","AnyHorizontal","AnyValue","ApproxNUnique","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","Bytes","","C","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkApproxNUnique","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","Deserialized","","Dictionary","Diff","Dimension","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Equiprobable","","Err","EscapeRegex","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","","GtEq","","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","","Hour","IDX_DTYPE","IEJoin","IEJoinOptions","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InequalityOperator","Infer","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Intersect","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","LazySerde","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","","List","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","","LowerBound","Lowercase","Lt","","LtEq","","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","OpaqueColumnUdf","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetAsyncReader","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Partitioned","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","ReshapeDimension","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","Semi","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Specified","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TakeChunkedHorPar","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueCounts","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_csv_read_internal","_finish_anti_semi_join","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_semi_anti_join_from_series","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked_hor_par","_take_opt_chunked_unchecked_hor_par","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_missing_columns","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","and_reduce","anonymous_scan","anti_join","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_projection","apply_to_slice","apply_values","approx_n_unique","","","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_provider","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_downcasting","as_error_source","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","","batched_borrowed","binary","","binary_expr","bitand","","bitand_assign","bitor","bitor_assign","bits","","bitxor","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bound_key","boxed","boxed_metadata","buffer","builder","byte_source","cache","","","","call","","","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_span","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","columns_to_projection","comment_prefix","compare","","compile","complement","compression","","","compute_schema","concat","","concat_arr","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","copy","copy_if_not_exists","count","","","count_matches","count_matches_many","count_ones","count_rows","","count_rows_from_slice","count_zeros","create_enum_dtype","create_left_df_chunked","create_sorting_map","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","current_span","data","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","delete","delete_stream","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_raw","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","","drop_no_validate","drop_nulls","","","drop_span","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","enabled","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","enter","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalentescape_regex","escape_regex_str","eval","event","event_enabled","every","exact","exclude","exclude_dtype","execute","exit","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_uri","","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_opts","get_overlapping_bounds_iter","get_parse_options","get_range","get_ranges","get_reader_bytes","get_schema","get_strftime_format","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","hash_join_semi_anti","head","","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_cross","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_ie","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_positive_idx_uncertain_col","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","","lazy","","le","leading_ones","leading_zeros","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","","","line_terminator","list","","list_with_delimiter","list_with_offset","lit","","","","","","load","load_any","load_bound","load_buffer","load_data","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","","materialize_empty_df","materialize_projection","materialize_unknown_dtypes","max","","","","","","max_level_hint","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","","method","","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_cyclic_in","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_span","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","","offset","","","offsets","on","","","operator1","operator2","optimize","options","or","or_reduce","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","prepare_cloud_plan","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","put","put_multipart","put_multipart_opts","put_opts","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_exact","read_parallel","","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","rechunk_validity","record","record_follows_from","reduce_exprs","register_callsite","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","","rename_fields","rename_if_not_exists","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_encode","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","semi_join","separator","","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","spawn_local_obj","spawn_obj","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","","starts_with_chunked","","statistics","status","status_local","std","","","","","","std_reduce","","store","str","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","trailing_ones","trailing_zeros","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_close","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse","try_parse_dates","try_parse_interval","try_pin","try_pin_in","try_serialize","","","try_set_sorted_flag","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_counts","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_collapse_joins","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parallel","with_parse_options","with_path","","with_paths","with_predicate","","","","with_predicate_pushdown","with_projection","","","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","","","with_row_limit","with_same_dtype","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_all","write_df_to_file","","write_partitioned_dataset","write_to","write_to_parts","write_to_string","write_varint","write_vectored","writeable_cmp_bytes","writeable_length_hint","xor","xor_reduce","year","","","","zip","zip_with","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudLocation","CloudOptions","CloudType","CloudWriter","File","Gcp","Hf","Http","ObjectStorePath","PolarsObjectStore","__clone_box","","borrow","","","","","borrow_mut","","","","","bucket","build_http","build_object_store","clone","","clone_into","","clone_to_uninit","","credential_provider","default","","deref","","","","","deref_mut","","","","","deserialize","download","drop","","","","","","eq","","","equivalent","","","execute","expansion","file_cache_ttl","flush","","fmt","","","from","","","","","from_str","from_untyped_config","from_url","get_range","get_ranges_sort","glob","hash","head","init","","","","","into","","","","","max_retries","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","serialize","sync_update","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_credential_provider","with_max_retries","write","write_all","write_varint","CredentialProviderFunction","Function","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","__clone_box","","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","deserialize","drop","","","eq","","equivalent","","","","","","fmt","","from","","","from_func","hash","","init","","","into","","","serialize","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","file_cache_ttl","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","concat_arr","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","enum_","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","EnumChunkedBuilder","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","EscapeRegex","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","get_row_encoding_dictionary","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","descending","","limit","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","escape_regex","escape_regex_str","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","starts_with","starts_with_chunked","str_escape_regex","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompareEq","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","append","approx_n_unique","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","deserialize","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","first","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","last","len","","limit","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lit","lt","","","lt_eq","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","or_reduce","phys_iter","product","quantile_reduce","rechunk","rechunk_validity","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","serialize","","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","time","to_arrow","to_dummies","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_date","try_datetime","try_decimal","try_duration","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_struct","try_sub_owned","try_time","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","NumericFixedSizeListOp","NumericListOp","Output","__clone_box","","_struct_arithmetic","add","","","add_to","","borrow","","borrow_mut","","checked","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","div","","","divide","","drop","","execute","","floor_div","","from","","init","","into","","mul","","","multiply","","rem","","","remainder","","sub","","","subtract","","to_owned","","try_from","","try_into","","type_id","","vzip","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","from","hash","init","into","serialize","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[870,"polars::chunked_array::arithmetic"],[898,"polars::chunked_array::builder"],[1160,"polars::chunked_array::builder::list"],[1177,"polars::chunked_array::cast"],[1208,"polars::chunked_array::collect"],[1222,"polars::chunked_array::float"],[1224,"polars::chunked_array::from_iterator_par"],[1228,"polars::chunked_array::iterator"],[1283,"polars::chunked_array::iterator::par"],[1285,"polars::chunked_array::metadata"],[1571,"polars::chunked_array::object"],[1648,"polars::chunked_array::object::builder"],[1672,"polars::chunked_array::object::registry"],[1701,"polars::chunked_array::ops"],[1921,"polars::chunked_array::ops::arity"],[1957,"polars::chunked_array::ops::float_sorted_arg_max"],[1959,"polars::chunked_array::ops::gather"],[1962,"polars::chunked_array::ops::row_encode"],[1972,"polars::chunked_array::ops::search_sorted"],[2004,"polars::chunked_array::ops::sort"],[2011,"polars::chunked_array::ops::sort::arg_bottom_k"],[2012,"polars::chunked_array::ops::sort::options"],[2027,"polars::chunked_array::temporal"],[2036,"polars::chunked_array::temporal::conversion"],[2040,"polars::datatypes"],[3603,"polars::datatypes::categorical"],[3620,"polars::datatypes::categorical::revmap"],[3626,"polars::datatypes::categorical::string_cache"],[3645,"polars::datatypes::enum_"],[3663,"polars::docs"],[3665,"polars::error"],[3759,"polars::error::PolarsError"],[3763,"polars::error::constants"],[3766,"polars::frame"],[4059,"polars::frame::column"],[4342,"polars::frame::explode"],[4373,"polars::frame::group_by"],[4611,"polars::frame::group_by::GroupByMethod"],[4612,"polars::frame::group_by::GroupsProxy"],[4614,"polars::frame::group_by::aggregations"],[4627,"polars::frame::group_by::expr"],[4630,"polars::frame::row"],[4740,"polars::functions"],[4742,"polars::prelude"],[10455,"polars::prelude::AggExpr"],[10462,"polars::prelude::BooleanFunction"],[10465,"polars::prelude::DslPlan"],[10516,"polars::prelude::Expr"],[10551,"polars::prelude::FunctionExpr"],[10573,"polars::prelude::GroupByMethod"],[10574,"polars::prelude::GroupsProxy"],[10576,"polars::prelude::LiteralValue"],[10579,"polars::prelude::PolarsError"],[10583,"polars::prelude::StringFunction"],[10597,"polars::prelude::TemporalFunction"],[10599,"polars::prelude::_csv_read_internal"],[10642,"polars::prelude::_internal"],[10664,"polars::prelude::aggregations"],[10677,"polars::prelude::arity"],[10713,"polars::prelude::array"],[10732,"polars::prelude::binary"],[10749,"polars::prelude::buffer"],[10824,"polars::prelude::buffer::Buffer"],[10827,"polars::prelude::byte_source"],[10908,"polars::prelude::cat"],[10909,"polars::prelude::chunkedarray"],[10975,"polars::prelude::chunkedarray::string"],[11015,"polars::prelude::chunkedarray::string::infer"],[11046,"polars::prelude::cloud"],[11176,"polars::prelude::cloud::credential_provider"],[11243,"polars::prelude::cloud::options"],[11253,"polars::prelude::compression"],[11271,"polars::prelude::concat_arr"],[11272,"polars::prelude::datatypes"],[11553,"polars::prelude::datatypes::categorical"],[11570,"polars::prelude::datatypes::categorical::revmap"],[11576,"polars::prelude::datatypes::categorical::string_cache"],[11580,"polars::prelude::datatypes::enum_"],[11581,"polars::prelude::datetime"],[11584,"polars::prelude::default_arrays"],[11590,"polars::prelude::dt"],[11642,"polars::prelude::expr"],[11645,"polars::prelude::fixed_size_list"],[11665,"polars::prelude::float_sorted_arg_max"],[11667,"polars::prelude::function_expr"],[11844,"polars::prelude::function_expr::BooleanFunction"],[11847,"polars::prelude::function_expr::FunctionExpr"],[11869,"polars::prelude::function_expr::StringFunction"],[11883,"polars::prelude::function_expr::TemporalFunction"],[11885,"polars::prelude::function_expr::cat"],[11887,"polars::prelude::function_expr::pow"],[11891,"polars::prelude::function_expr::rolling"],[11924,"polars::prelude::function_expr::rolling_by"],[11957,"polars::prelude::gather"],[11960,"polars::prelude::interpolate"],[11964,"polars::prelude::interpolate_by"],[11965,"polars::prelude::mode"],[11966,"polars::prelude::nan_propagating_aggregate"],[11971,"polars::prelude::null"],[12002,"polars::prelude::row_encode"],[12012,"polars::prelude::schema_inference"],[12039,"polars::prelude::search_sorted"],[12045,"polars::prelude::series"],[12067,"polars::prelude::sort"],[12074,"polars::prelude::sort::arg_bottom_k"],[12075,"polars::prelude::sort::options"],[12090,"polars::prelude::strings"],[12149,"polars::prelude::udf"],[12155,"polars::prelude::utf8"],[12159,"polars::series"],[12642,"polars::series::amortized_iter"],[12666,"polars::series::arithmetic"],[12737,"polars::series::arithmetic::checked"],[12743,"polars::series::ops"],[12772,"dyn_clone::sealed"],[12773,"polars_core::datatypes"],[12774,"polars_core::chunked_array"],[12775,"polars_error"],[12776,"core::result"],[12777,"polars_core::series"],[12778,"core::ops::function"],[12779,"num_traits"],[12780,"num_traits::cast"],[12781,"polars_core::series::arithmetic::borrowed"],[12782,"polars_core::frame::group_by::proxy"],[12783,"polars_core::chunked_array::object"],[12784,"core::option"],[12785,"polars_arrow::array"],[12786,"alloc::boxed"],[12787,"core::iter::traits::iterator"],[12788,"polars_core::chunked_array::list::iterator"],[12789,"polars_utils::pl_str"],[12790,"core::marker"],[12791,"alloc::borrow"],[12792,"polars_core::series::amortized_iter"],[12793,"alloc::string"],[12794,"polars_core::datatypes::dtype"],[12795,"polars_arrow::array::binview::view"],[12796,"polars_core::chunked_array::ops::sort::options"],[12797,"polars_core::frame::column"],[12798,"polars_core::chunked_array::metadata::md_trait"],[12799,"polars_core::chunked_array::cast"],[12800,"polars_core::series::arithmetic::borrowed::checked"],[12801,"core::slice::iter"],[12802,"core::iter::adapters::map"],[12803,"alloc::vec"],[12804,"compact_str"],[12805,"polars_core::chunked_array::metadata"],[12806,"core::iter::traits::double_ended"],[12807,"polars_arrow::offset"],[12808,"core::fmt"],[12809,"core::iter::traits::collect"],[12810,"core::convert"],[12811,"polars_arrow::bitmap::immutable"],[12812,"polars_core::chunked_array::from_iterator"],[12813,"core::borrow"],[12814,"polars_arrow::pushable"],[12815,"rayon::iter"],[12816,"core::iter::traits::exact_size"],[12817,"core::clone"],[12818,"polars_arrow::trusted_len"],[12819,"polars_core::datatypes::any_value"],[12820,"polars_arrow::array::binary"],[12821,"std::sync::rwlock"],[12822,"polars_core::chunked_array::logical"],[12823,"polars_core::datatypes::time_unit"],[12824,"polars_core::series::series_trait"],[12825,"polars_core::chunked_array::iterator"],[12826,"polars_core::scalar"],[12827,"polars_core::chunked_array::metadata::guard"],[12828,"polars_core::chunked_array::metadata::interior_mutable"],[12829,"alloc::sync"],[12830,"core::ops::range"],[12831,"polars_core::datatypes::field"],[12832,"polars_arrow::legacy::kernels::rolling::no_nulls"],[12833,"polars_core::chunked_array::ops::rolling_window"],[12834,"polars_ops::chunked_array::scatter"],[12835,"serde::ser"],[12836,"polars_utils::index"],[12837,"ahash::random_state"],[12838,"polars_utils::hashing"],[12839,"ndarray::data_repr"],[12840,"ndarray::dimension::dim"],[12841,"ndarray"],[12842,"either"],[12843,"core::any"],[12844,"polars_core::frame"],[12845,"polars_core::chunked_array::arithmetic::numeric"],[12846,"polars_core::chunked_array::builder::list::anonymous"],[12847,"polars_core::chunked_array::builder::list::boolean"],[12848,"polars_core::chunked_array::builder::list::primitive"],[12849,"polars_core::chunked_array::builder::list"],[12850,"polars_core::chunked_array::builder"],[12851,"polars_core::chunked_array::builder::list::binary"],[12852,"polars_core::chunked_array::builder::list::null"],[12853,"polars_core::chunked_array::builder::string"],[12854,"polars_arrow::array::binview"],[12855,"polars_core::chunked_array::builder::boolean"],[12856,"polars_core::chunked_array::builder::null"],[12857,"polars_core::chunked_array::builder::primitive"],[12858,"polars_core::series::implementations::null"],[12859,"serde::de"],[12860,"core::hash"],[12861,"polars_core::chunked_array::collect"],[12862,"polars_core::chunked_array::float"],[12863,"polars_core::chunked_array::from_iterator_par"],[12864,"polars_arrow::array::boolean"],[12865,"polars_arrow::array::fixed_size_list"],[12866,"polars_core::chunked_array::metadata::env"],[12867,"polars_core::chunked_array::metadata::collect"],[12868,"bitflags::iter"],[12869,"std::fs"],[12870,"std::sync::mutex"],[12871,"polars_arrow::datatypes"],[12872,"polars_arrow::bitmap::utils::iterator"],[12873,"polars_arrow::bitmap::utils::zip_validity"],[12874,"polars_core::chunked_array::object::builder"],[12875,"polars_core::chunked_array::object::registry"],[12876,"polars_core::chunked_array::ops"],[12877,"polars_arrow::legacy::array::slice"],[12878,"polars_core::chunked_array::ops::arity"],[12879,"polars_arrow::array::static_array"],[12880,"core::error"],[12881,"polars_arrow::array::primitive"],[12882,"polars_row::row"],[12883,"polars_core::chunked_array::ops::search_sorted"],[12884,"polars_core::utils"],[12885,"chrono::naive::datetime"],[12886,"chrono_tz::timezones"],[12887,"chrono::naive::time"],[12888,"polars_core::chunked_array::logical::categorical"],[12889,"polars_core::chunked_array::logical::categorical::builder"],[12890,"polars_arrow::array::static_array_collect"],[12891,"std::path"],[12892,"std::ffi::os_str"],[12893,"bytemuck::zeroable"],[12894,"polars_core::chunked_array::logical::categorical::revmap"],[12895,"polars_core::chunked_array::logical::categorical::merge"],[12896,"polars_arrow::datatypes::reshape"],[12897,"core::cmp"],[12898,"polars_core::datatypes::_serde"],[12899,"polars_arrow::datatypes::physical_type"],[12900,"polars_arrow::types"],[12901,"chrono::time_delta"],[12902,"chrono::naive::date"],[12903,"polars_core::datatypes::into_scalar"],[12904,"polars_plan::dsl::expr"],[12905,"polars_core::chunked_array::logical::categorical::string_cache"],[12906,"polars_core::chunked_array::logical::enum_"],[12907,"polars_error::warning"],[12908,"planus::errors"],[12909,"std::io::error"],[12910,"alloc::collections"],[12911,"polars_parquet::parquet::error"],[12912,"simdutf8::basic"],[12913,"object_store"],[12914,"regex::error"],[12915,"polars_schema::schema"],[12916,"polars_arrow::record_batch"],[12917,"hashbrown::set"],[12918,"polars_core::frame::row"],[12919,"polars_core::frame::group_by"],[12920,"polars_time::group_by::dynamic"],[12921,"polars_lazy::frame"],[12922,"polars_core::series::from"],[12923,"polars_core::chunked_array::ndarray"],[12924,"polars_arrow::array::struct_"],[12925,"polars_time::windows::duration"],[12926,"polars_core::frame::column::scalar"],[12927,"polars_core::frame::column::partitioned"],[12928,"polars_core::frame::explode"],[12929,"polars_utils::idx_vec"],[12930,"rayon::iter::plumbing"],[12931,"polars_plan::plans::aexpr"],[12932,"polars_core::frame::group_by::into_groups"],[12933,"core::iter::adapters::copied"],[12934,"core::iter::adapters::zip"],[12935,"polars_arrow::legacy::kernels::rolling"],[12936,"polars_utils::float"],[12937,"polars_arrow::types::native"],[12938,"polars_core::frame::group_by::aggregations::agg_list"],[12939,"polars_core::frame::group_by::aggregations"],[12940,"polars_core::frame::group_by::expr"],[12941,"polars_core::frame::row::av_buffer"],[12942,"polars_utils::arena"],[12943,"polars_plan::plans::ir"],[12944,"polars_ops::frame::join::hash_join"],[12945,"polars_ops::frame::join::args"],[12946,"polars_plan::dsl::struct_"],[12947,"polars_ops::chunked_array::gather::chunked"],[12948,"polars_ops::frame"],[12949,"polars_io::csv::read::reader"],[12950,"polars_io::predicates"],[12951,"polars_io::mmap"],[12952,"polars_plan::dsl::selector"],[12953,"polars_plan::frame::opt_state"],[12954,"core::alloc"],[12955,"polars_plan::plans::anonymous_scan"],[12956,"polars_lazy::scan::anonymous_scan"],[12957,"polars_plan::dsl::expr_dyn_fn"],[12958,"polars_plan::plans::visitor"],[12959,"polars_plan::dsl::function_expr"],[12960,"polars_ops::series::ops::arg_min_max"],[12961,"polars_plan::dsl::array"],[12962,"polars_plan::dsl::list"],[12963,"polars_plan::dsl::function_expr::schema"],[12964,"polars_io::ipc::ipc_stream"],[12965,"std::io"],[12966,"icu_provider::any"],[12967,"polars_ops::chunked_array::binary"],[12968,"polars_time::chunkedarray::string"],[12969,"std::os::fd::owned"],[12970,"polars_ops::chunked_array::list"],[12971,"std::os::fd::raw"],[12972,"polars_ops::series::ops"],[12973,"polars_ops::chunked_array::strings"],[12974,"core::mem::maybe_uninit"],[12975,"polars_ops::chunked_array::strings::namespace"],[12976,"polars_io::csv::read::read_impl::batched"],[12977,"polars_io::csv::write::writer"],[12978,"polars_io::ipc::write"],[12979,"polars_io::parquet::read::reader"],[12980,"polars_io::parquet::read::read_impl"],[12981,"polars_io::parquet::write::writer"],[12982,"polars_io::parquet::write::batched_writer"],[12983,"polars_plan::dsl::binary"],[12984,"icu_provider::key"],[12985,"icu_provider::marker"],[12986,"icu_provider::data_provider"],[12987,"http::request"],[12988,"hyper::service::service"],[12989,"polars_plan::dsl::udf"],[12990,"polars_lazy::frame::exitable"],[12991,"hashbrown::map"],[12992,"polars_plan::dsl::cat"],[12993,"polars_ops::series::ops::round"],[12994,"polars_time::series"],[12995,"polars_lazy::scan::csv"],[12996,"polars_lazy::scan::ipc"],[12997,"polars_lazy::scan::ndjson"],[12998,"polars_lazy::scan::parquet"],[12999,"polars_time::chunkedarray::rolling_window"],[13000,"polars_time::windows::bounds"],[13001,"polars_time::windows::group_by"],[13002,"polars_time::windows::window"],[13003,"polars_ops::frame::join::asof"],[13004,"polars_ops::frame::join::iejoin"],[13005,"polars_ops::series::ops::interpolation::interpolate"],[13006,"polars_ops::series::ops::is_between"],[13007,"polars_ops::series::ops::rank"],[13008,"polars_io::csv::read::options"],[13009,"polars_io::csv::write::options"],[13010,"polars_plan::dsl::arity"],[13011,"polars_io::ipc::ipc_file"],[13012,"polars_io::ipc::ipc_reader_async"],[13013,"polars_io::json"],[13014,"polars_io::parquet::read::options"],[13015,"polars_parquet::arrow::write"],[13016,"polars_io::parquet::write::options"],[13017,"polars_parquet::parquet::metadata::file_metadata"],[13018,"polars_plan::dsl::function_expr::boolean"],[13019,"polars_plan::dsl::function_expr::cat"],[13020,"polars_plan::dsl::function_expr::datetime"],[13021,"polars_plan::dsl::function_expr::pow"],[13022,"polars_plan::dsl::function_expr::strings"],[13023,"polars_plan::dsl::function_expr::struct_"],[13024,"polars_plan::dsl::functions::temporal"],[13025,"polars_plan::dsl::options"],[13026,"polars_plan::plans::lit"],[13027,"polars_plan::plans::options"],[13028,"polars_plan::plans"],[13029,"polars_arrow::legacy::kernels::time"],[13030,"tracing_core::span"],[13031,"tracing_core::subscriber"],[13032,"polars_lazy::scan::file_list_reader"],[13033,"polars_io::cloud::options"],[13034,"polars_parquet::parquet::metadata::column_order"],[13035,"polars_ops::chunked_array::binary::namespace"],[13036,"object_store::path"],[13037,"core::future::future"],[13038,"core::pin"],[13039,"polars_io::ndjson::core"],[13040,"polars_arrow::io::ipc::read::file"],[13041,"polars_parquet::parquet::metadata::row_metadata"],[13042,"polars_ops::frame::join::cross_join"],[13043,"polars_lazy::dsl::eval"],[13044,"polars_time::chunkedarray::date"],[13045,"polars_time::chunkedarray::datetime"],[13046,"polars_time::chunkedarray::duration"],[13047,"core::ffi::c_str"],[13048,"core::default"],[13049,"futures_core::stream"],[13050,"polars_parquet::parquet::metadata::column_chunk_metadata"],[13051,"polars_core::series::ops"],[13052,"polars_plan::dsl::dt"],[13053,"tracing_core::metadata"],[13054,"polars_ops::series::ops::various"],[13055,"polars_arrow::scalar"],[13056,"polars_lazy::dsl::list"],[13057,"tracing_core::event"],[13058,"crossterm::command"],[13059,"polars_io::shared"],[13060,"polars_plan::plans::apply"],[13061,"polars_parquet::arrow::read::statistics"],[13062,"polars_plan::dsl::function_expr::range"],[13063,"polars_plan::dsl::function_expr::array"],[13064,"polars_plan::dsl::function_expr::binary"],[13065,"polars_plan::dsl::function_expr::list"],[13066,"alloc::ffi::c_str"],[13067,"polars_arrow::array::growable::structure"],[13068,"polars_core::schema"],[13069,"polars_arrow::legacy::array::default_arrays"],[13070,"polars_arrow::buffer::immutable"],[13071,"polars_arrow::array::list"],[13072,"polars_core::named_from"],[13073,"polars_ops::frame::join"],[13074,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[13075,"polars_time::chunkedarray::time"],[13076,"core::num::nonzero"],[13077,"polars_arrow::array::struct_::iterator"],[13078,"polars_ops::frame::join::asof::groups"],[13079,"polars_ops::chunked_array::list::namespace"],[13080,"polars_plan::dsl::name"],[13081,"polars_parquet_format::parquet_format"],[13082,"icu_provider::request"],[13083,"icu_provider::response"],[13084,"icu_provider::error"],[13085,"icu_provider::buf"],[13086,"polars_core::utils::supertype"],[13087,"polars_io::options"],[13088,"polars_core::chunked_array::ops::aggregate"],[13089,"polars_core::chunked_array::ops::aggregate::quantile"],[13090,"polars_arrow::legacy::index"],[13091,"polars_plan::plans::ir::scan_sources"],[13092,"polars_ops::chunked_array::strings::split"],[13093,"object_store::payload"],[13094,"core::io::borrowed_buf"],[13095,"polars_parquet_format::thrift::varint::decode"],[13096,"polars_time::chunkedarray::rolling_window::dispatch"],[13097,"polars_time::round"],[13098,"polars_parquet::parquet::metadata::schema_descriptor"],[13099,"futures_task::future_obj"],[13100,"futures_task::spawn"],[13101,"polars_core::chunked_array::ops::aggregate::var"],[13102,"polars_plan::dsl::string"],[13103,"polars_ops::series::ops::to_dummies"],[13104,"polars_time::truncate"],[13105,"polars_io::csv::read::schema_inference"],[13106,"polars_time::upsample"],[13107,"polars_core::hashing::vector_hasher"],[13108,"alloc::collections::btree::map"],[13109,"writeable"],[13110,"polars_io::csv::read::parser"],[13111,"polars_utils::mmap::private"],[13112,"polars_parquet::arrow::read::deserialize::utils::filter"],[13113,"polars_ops::chunked_array::array::namespace"],[13114,"polars_ops::chunked_array::array"],[13115,"polars_io::csv::read::buffer"],[13116,"polars_io::utils::byte_source"],[13117,"polars_time::chunkedarray::string::patterns"],[13118,"polars_time::chunkedarray::string::infer"],[13119,"polars_io::cloud::glob"],[13120,"polars_io::cloud::polars_object_store"],[13121,"tokio::fs::file"],[13122,"polars_io::cloud::adaptors"],[13123,"url"],[13124,"bytes::bytes"],[13125,"polars_io::cloud::credential_provider"],[13126,"polars_io::utils::compression"],[13127,"polars_arrow::legacy::array::fixed_size_list"],[13128,"polars_plan::dsl::function_expr::rolling"],[13129,"polars_plan::dsl::function_expr::rolling_by"],[13130,"polars_arrow::legacy::array::null"],[13131,"polars_arrow::bitmap::mutable"],[13132,"polars_arrow::array::utf8"],[13133,"polars_core::series::iterator"],[13134,"alloc::rc"],[13135,"polars_core::series::arithmetic::list"],[13136,"polars_core::series::arithmetic::fixed_size_list"],[13137,"polars_core"],[13138,"polars_core::chunked_array::struct_"],[13139,"polars_core::chunked_array::iterator::par"],[13140,"polars_core::chunked_array::object::extension"],[13141,"polars_core::chunked_array::ops::float_sorted_arg_max"],[13142,"polars_core::chunked_array::ops::gather"],[13143,"polars_core::chunked_array::ops::row_encode"],[13144,"polars_core::chunked_array::ops::sort"],[13145,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[13146,"polars_core::chunked_array::temporal"],[13147,"polars_core::chunked_array::temporal::conversion"],[13148,"polars_core::chunked_array::temporal::time"],[13149,"polars_core::chunked_array::logical::date"],[13150,"polars_core::chunked_array::logical::datetime"],[13151,"polars_core::chunked_array::logical::decimal"],[13152,"polars_core::chunked_array::logical::duration"],[13153,"polars_core::datatypes::aliases"],[13154,"polars_utils::aliases"],[13155,"polars_core::chunked_array::logical::time"],[13156,"polars_error::constants"],[13157,"polars_core::functions"],[13158,"polars_core::frame::horizontal"],[13159,"polars_arrow::datatypes::schema"],[13160,"polars_io::utils::other"],[13161,"polars_io::parquet::metadata"],[13162,"polars_arrow::legacy::prelude"],[13163,"polars_arrow::legacy::array"],[13164,"polars_io::path_utils"],[13165,"polars_ops::series::ops::rolling"],[13166,"polars_parquet::parquet::write"],[13167,"polars_io::utils"],[13168,"polars_ops::frame::join::general"],[13169,"polars_io::csv::read"],[13170,"polars_io::parquet::read"],[13171,"polars_ops::series::ops::abs"],[13172,"polars_plan::dsl::functions::selectors"],[13173,"polars_plan::dsl::functions::horizontal"],[13174,"polars_plan::dsl::functions::arity"],[13175,"polars_plan::dsl"],[13176,"polars_plan::dsl::functions::range"],[13177,"polars_plan::dsl::functions::index"],[13178,"polars_ops::chunked_array"],[13179,"polars_plan::dsl::functions::coerce"],[13180,"polars_plan::dsl::functions::syntactic_sugar"],[13181,"polars_time::base_utc_offset"],[13182,"polars_time"],[13183,"polars_ops::series::ops::clip"],[13184,"polars_io"],[13185,"polars_ops::series::ops::horizontal"],[13186,"polars_lazy::dsl::functions"],[13187,"polars_plan::dsl::functions::concat"],[13188,"polars_ops::series::ops::index"],[13189,"polars_ops::series::ops::bitwise"],[13190,"polars_ops::series::ops::cum_agg"],[13191,"polars_ops::series::ops::diff"],[13192,"polars_time::dst_offset"],[13193,"polars_ops::chunked_array::strings::escape_regex"],[13194,"polars_ops::series::ops::floor_divide"],[13195,"polars_ops::chunked_array::strings::concat"],[13196,"polars_ops::series::ops::duration"],[13197,"polars_ops::chunked_array::datetime::replace_time_zone"],[13198,"polars_time::date_range"],[13199,"polars_ops::series::ops::interpolation"],[13200,"polars_ops::series::ops::interpolation::interpolate_by"],[13201,"polars_ops::series::ops::is_first_distinct"],[13202,"polars_ops::series::ops::is_in"],[13203,"polars_ops::series::ops::is_last_distinct"],[13204,"polars_io::parquet::read::utils"],[13205,"polars_ops::series::ops::negate"],[13206,"polars_ops::series::ops::not"],[13207,"polars_ops::series::ops::int_range"],[13208,"polars_plan::client"],[13209,"polars_plan::dsl::functions::repeat"],[13210,"polars_ops::chunked_array::repeat_by"],[13211,"polars_ops::series::ops::replace"],[13212,"polars_ops::chunked_array::strings::strip"],[13213,"polars_ops::series::ops::unique"],[13214,"polars_io::partition"],[13215,"polars_io::csv::read::read_impl"],[13216,"polars_io::parquet::read::predicates"],[13217,"polars_io::parquet::read::mmap"],[13218,"polars_time::chunkedarray"],[13219,"polars_io::cloud::object_store_setup"],[13220,"polars_io::cloud"],[13221,"polars_ops::series::ops::concat_arr"],[13222,"polars_ops::chunked_array::mode"],[13223,"polars_ops::chunked_array::nan_propagating_aggregate"],[13224,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`00000000000010000000000000000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001000000000000000000000000000000`0000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABl00000000000000000000000000````````````````AD`ADdADfADhABn0AC`ACbACdACfACh54ACjACl5ACn5<;:98845<3487216055213<;921558721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADl000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Gb00000000000000000000000000000``AEbAEd1000101000`AEf``AEhAEj````AEnAFbAFd21021021021021021021021021210210`210210210210210``AGbKhHb0Jn`3Ml22````````42110Mn4AFf43434343434344334343215604321560431150431504315043AFh545426543326715432671544541G`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653655657757777775776565653372656543782654378265334378265653437826513````AGf00000K`1111`111111110011111111111111111111``111111101111111110Cf2222222222`AHb0000000000000000000000````AHd00AHf00000001```00`0`10000AIh`````````````````````````````0AHl``AIjAJh33333EF`4``0``4FdFl6AHh6AHn077AI`AIb0AId`65;65;AIf0076<76<76<7676<76<7676<76<76<::777666AIl0`AInAJ``:9?::99?`AJbAJd`AJf0??=<AIh>=0>=00AJjAJlFdFlAJh021AHh0AJn1143?43AK`AIj065?2AKb0AKdAKf`AKh0`:9=0AKjAKlAKn0`AIb0AL`<ALbALdALfFdFlAIh210210210AId7321323232232232`ALh`AMbALnALj```````````````````````````````````````````````AMj00`0`0000000000000000000`000000`````>>````8787878787>>`````````````B@h`JlEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``Dd04341```11`51431``431```AOn`3EFbEFd````BA```9``875``875``875``875``5`666555B@d986``4``6BAbLd1010Al<;9`<;`<``:3:```````````BB```35`>=<`=`=<:=`=<::````:0`=<:``=<:``=<:``=<:``:<:`::ALl0<0:L`6:ANdB@fJlB@hEnB@jOj;NhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lB@nBA`AGhBAbANdJl01L`1C`LhNhNjFfNnO`OdKlLbEjEhBhAnBlAhANfANd110ANh0ANj0EnJlL`0Dd0003OjAO`ALl3433:BCb5EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbDdANfBCbL`EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbEnAOn`JlB@b13L`0100000ANd`LhNhNjFfNnO`OdKlLbEjEhDd=B@dAOn>B@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lB@nBA`AGhBAbDdL`B@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lB@nBA`AGhBAbDdL`B@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lB@nBA`AGhBAbDd4OjBAf00026En500`L`4BAhB@dAOnJlB@h6;99ANfBCb77EFfDjjC`LhCd<;:ANdB@f;:EnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbDdANfBCbL`0EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbDdB@dJlB@hEnOjLd;:987L`C`LhNhNjFfNnO`OdKlLbEjEhAhANfDd1BCbL`EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbB@bL`0000ANdJlOj0Dd0`0B@d3B@hEn0B@j5Ld>=<;7888888555777333222111666000>>>===<<<;;;9AOnB@`ANfBAh9983B@f<<8776;55B@nBA`0AGhBAb>>>>>6BCbL`00EFfDjjC`LhCd=B@dAOnANd?Jl00000B@hEn0000B@jOj00Ld0NhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGh00BAbEnANd0L`01Dd00000001111110002ALl00030AOn9833333B@b544444051DnjC`LhCdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhAOnBA`0ANdEnJlBBnALl444444Dd3B@h5OjLd9AGhBAb8L`09:6ANfBCb2EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbEn2DdANfBCbL`EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbL`ANdBCbBC`333332JlDdEn00200055020AOn3111013193131319111311111319ALl702173777777``2B@h338`BAh::49:::C`LhNhNjFfNnO`OdKlLbEjEhAhANd0Oj0L`0EFbEFdANf33333333BAh5B@nBA`06B@jBCb:::::::188DdJlLd6;=;8C`LhNhNjFfNnO`OdKlLbEjEhAhL`0AOn111Dd2B@dANdJlB@hEnOjLd:B@nBA`AGhBAb5====BCb::9>>>9>C`LhNhNjFfNnO`OdKlLbEjEhAhL`00ANdEnOjLd203AGh440Dd6B@dAOn7B@fJlB@h9B@j98NhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lB@nBA`AGhBAbEn2L`Dd1111Jl3Ld7133ANh0ANj0BAf00045ANfBCb8EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@n0BA`AGhBAbDdANfBCbL`EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbJlEnDd21Ld61ANfBCbL`EFfDjjC`LhCdBAhB@dAOnANdB@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAb1ANd0ALl10En1DdANfBCbL`EFfDjjC`LhCdBAhB@dAOn?B@fJlB@hEnB@jOjLdNhNjFfNnO`OdKlLbEjEhKnLnBhAnFhBlLjLfLlB@lAhB@nBA`AGhBAbEFbEFdALlDd00Jl`````AOn`B@d10``B@``````2121``BCn0000`00`0000000`0`BD`0000000000000000``BDdn000EFh`112101```111111121BDb302302`223002302302`3002230022222222`302302`0``````02302302023023022EFjEFl10```BEn`0BEl11``0``01AB`000000000000000000BGbBGd34210342222342342342`222421034210342421034222222222242224442`22222223422103422222222222222222`222242222222222222103422103421022222222222222222222222102222222222222222`22222222222242222222210222222222222222222234222222221034222221034221034222222222210342222222``Fj0`0BHf11111111111111111111111111101111011111111111110101010101110101011111010111111101010111111111111111010111101111111110111111110101BEj122211222222221122221222222222221212122222222222222221222122212222222222212222222222122222122122222222222222212222221222222222221222222212221222222`BHl00000000000000000000000000000`BIb0``0``````BIjCb`2`22222222210`222BHn1BFd40`1023BJdBIfBId453762104537453745374537345621004537621045373162104453745444555`643445377`621044455377445335BIn4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648EFnEG`0``````````BJlBJn0`BK`0BKbBKd``1011110101010101010`10011010101010BFb211210210210210210`02102102100000022110`2102102121021```210210210210210``BNhBMbBCd`C@h1CJlCGl01`CHj`CBl5```CF`4AMjB@hBEn7`;``;;`CLfJlEnDn``?``````````7```?```CIjCG``CFfAIhBNhCKdCK```9CLj9AGh``BCd5`;``<``15<2;1`````CEfCFn``CJb`EGbCIlBH`BMh000CM`8;`=JlEn``````1`CKbBNh?`````````````````````````````````````0``0CEn`=`n>CIj`CK```24CKd0031C@hBIb2CF````````888884`````<CEhCEj`DGl7>CLj>AGh0``1`9JlEn``;`1`;13022``CG`EGbCIl5BNh`CM`CBl22`CJ`BCdn`CK`;=:<`````BMhDEhCKd>=>77EGdA@`EFh38`BMb9CLd```=>AGh66688````;CKf0`````BNh``0=CM`9C@hBIbBEn66`CLjB@h8Jl2En:``130:``8CBlBH`CFfAIh<CEj```CF`AHlBCd``0BNhCKb`CJn`AOn``CM``BIb``````CLdCFh?0?CJb`44DnEFbEFdCKd0EGdA@`CK``CF```n=DGlBIjCb`````C@hBIb`BCd```BA```8`CLjB@h``Jl2EnAGh``2410``2410``2410``BNh0`BMb2```````>``````````CJl0`000`0CK`1Dn222001AIjAJhCLdCM``````CEn``DOjCKf``1```2BCdCIb`>`>``>C@hBIbBEnDEh``````EGfCEfCEhCF`CFnAMj`;CKd0B@d`CFlEGdA@`JlEnAGh````BNh````````BCd`AOn`CBl0`CGh984<CFh202CJb0CFb08CM`CG`C@hAIhBIb1<210<20CK`BAbLdEGdA@`443287656BNh?50?CEj6CGjCKfCBlBMh`=;CJ`CGl``==<;:AlCFfCFl<;CHj;`0`n``1CEfEF`CFnCIjBEnCJl>>BCd`DEhJlCLjEnAGhCMfBNh`````53`5`EFhAIhCFb0```CBlCG`CK`:ABlnBM`CLb``Dn`BMh0````````FjB@d3```````:```````````BB``?`CIjCKf`C@hBIbBJf```>`8DEhCMfCG`BNh0CLj1```BCd`922CKd33CK`4``14EGfCEfCEhCF`CFnAMjCLb`;;```````BMb8<<``CIjBMh0n01CEj`FjABlCM``````44```?BAb1`BCd=````CLj5``````BNh8000CGj53CKdBIjCb8``CJbEF`8:8```BA`555`CKb`6``C@hBIbB@h<Jl=En`n``>```2`<<<<<<`21AGh``?1``3`BMbBCdCKf98BNhCEjBMhCKd``3``5`2CK`;CLj;99``1```922`2511111111ABlBB`CBl`47?3><``?3><``?3><``?3><````CJb=CM``::`En?```;8`CGhAGh0=ALl0C@hBIbBJf``CEj>>`BCd`01``CKfCK`=0CIbAIhDn:?`CCnBGfBMfBN`CDjCDlCDnCE`CEbBFfBGjCEdBHdCEfCEhCEjCElABbA@jBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMf`BGfBKn`00``BLb1?AHhBLdBLf0BLh6BLj`BCdBM`1BMbBHd0BMd1BMf5`5`5BMh`N`CE`BMlCL`BMn00CKh<BLdBGf0>`>ACfACh1010AHl<BCd`0AHn011``22AI`27`BHbBNjBNlBNn62106AIb7<`0AId8=`BO`CL``:ANh880ANj099`BObBMnBLdBOf=1=N`MjBOjBOl000333C@d44C@h5AO`C@j9ALlC@l`699`BCdCA`0`CGnBLjCAdCAjCAnCBbCBd5`8`BMbBMh00000100CDbBNlAMlBMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`0CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCDbBNlAMlBMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfBGfN`>BLd`ACd`3CDlCE`CKnCCd66CCj`BOfCCl2CCn`9;AIfBCdB@b>2201`1=1CDd2A@bCDfBHbCDhBLd10CGd`11`8`8`8:BGfBMfBN`CDjCDlCDnCE`CEbBFfBGjCEdBHdCEfCEhCEjCElABbA@jBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfBLdCCnBGfBMfBN`CDjCDlCDnCE`CEbBFfBGjCEdBHdCEfCEhCEjCElABbA@jBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfN`CCnBGfBMfBN`CDjCDlCDnCE`CEbBFfBGjCEdBHdCEfCEhCEjCElABbA@jBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCEbBFfBGj`CMlCDjCDnCDlCE`BHdN``BMlCEnBL```BGf`BAf000AEbAEd100033`CJj0CGdBLh`CGf<;CGlBMh`CI`CInCM``CA````CMlCDj````BNlCNf4BNn9155``N`0BGfCO`BCd99``COb```BKn`CJj5COh0`4``4`4`4``4COj84CIn`CHh```0`````COnD@`CDfCKhD@bBHdCKj1CKlCMbCGfN`0BGfBN`CDlCE`BFfBGjCEjD@dBL`CEnCFbCFdCFfCFhCFjCFnCGbCGdCGfCGhCGnCHhCHjBCdCHnCI`CIbCIdCIhCIjCInCJbBNd00N`000CKhCKjCKnCL`CLbCLdCLhBMhA@bBH`BBdCLlMjCLnCM`A@```N`0CDbBNlAMl0BMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNd0CJfCJhCJjCJlCJnCK`CKbN`0CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCDbBNlAMl0BMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCGbFdFl8BGf0009N``CEbBFfBGjBHdCEfCEhCEjBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnC@hCHhCHjBCdCHlCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNd0000CJfCJhCJlCJnCK`CKbN`CKdCKfBNhCKlCKnCL`CLbCLdCLfCLhBMbA@bBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfBFd`7`BNnBCdBMh9D@nCIhBM`4BMd5N`000CDbBNlAMlBMlCBhCAbCCn0BGf0BMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`0CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfBGfBCd110BLdN```2B@b2BHb?=OjBBd``CGd`CIhBMh777CGfCNf0```DAl:2CEbBFfBGjBHdCEfCEhCEjABbBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnC@hCHhCHjBCd0CHlCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNd0CJfCJhCJlCJnCK`CKbN`00CKdCKfBNhCKlCKnCL`CLbCLdCLfCLhBMbA@bBHb0BH`CLjBBdCLlMjCLnA@`BJfCMbCMdCMfBCdAIj0BFf00BGj00BHd00CEf00CEh00CEj00ABb00BL`00CEn00CF`00CFb00CFd00CFf00CFh00CFj00CFl00CFn00CGd00CGf00CGh00CGj00CGl00CGn00CHh00CHj00BCd00CI`00CIb00CId00CIf00CIh00CIj00CIn00CJ`00CBl00CJb00CJd00CJf00CJh00CJl00CJn00CK`00CKb00N`00CKd00CKf00CKl00CKn00CL`00CLb00CLd00CLf00CLh00BMb00BH`00BBd00CLl00CLn00A@`00CMf00``DBbN`0BFf?BCd022```BGfBNl1AIl30`BMh4CA`A@j111ACfCCn701BLdBLb00BHbCGd;<`;<<AInAJ`5=>999AChDBjDBlB@`BMlCMlCDjCDnBLjCAdDBnBObDC`CAjDCbDCdCO`CAnCBbCBdACf?>=:CB``BGfBNnBCdBLd`1CHh0`BNdCDd44`N`0BOfCClCCdCEbBFfBGjCEdBHd0CEfCEhCEjABbA@jBMnDCfBL`CEnCF`0CFb0CFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCHhCHjBCd0CHlCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBl0CJbCJdBNdCJfCJhCJjCJl0CJn0CK`0CKb0N`00CKd0CKf0BNh0CKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMh0000A@bBHbBH`CLjBBdCLlMjCLnA@`BJfCMbCMdCMf`7CEb=`BMlCL`CKn`BCdCDbBNlAMl6CBhCAbCCnBGf00BMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABb0A@jCO`DKhCB`CAnCBbBL`0CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGj0CGlCGnCH`CHbCHdCHfC@hCHhCHjBCd0000000000000CHlCHnCI`CIbCIdD@n0CIfCIhCIjCIlCInCJ`CBl0CJbCJdBNd0000000000CJfCJhCJjCJlCJnCK`CKbN`00000000000000000CKdCKfBNh0000CKhCKjCKlCKnCL`CLb0CLdCLfCLhBMb0000CCjBMhDEhA@bBHb0BH`CLj0BBdCLlMj000000000000CLnCM`A@`BJfCMbCMdCMfDDlBMh000DDnDEbDEdAMl0N`5EGh00ADl13310732?CO`3311DEh55BNdCObCBbDEjALl0`AJb1CIhBGfDElAJd5BHbCCj`BCd`00N`BLdBNlBNn<43AJfB@b10CDb<CLjDnCEl00D@fBNbDDl?BO``CAnCBb>??>>?6CGdN`0`DCf`BBnALlBLdCMlCDjCE`BGfDFj11``BInAJhBCd<10=8BFfBGjBHdCEfCEhCEjBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnC@hCHhCHjBCdCHlCI`CIbCIdCIfCIhCIjCInCJ`CBlCJbCJdCJfCJhCJlCJnCK`CKbN`CKdCKfBNhCKlCKnCL`CLbCLdCLfCLhBMbBH`CLjBBdCLlCLnA@`CMfDFn00BMfBNnBCdN`CA`0CDlCE``DG`D@`CDfCKhD@bCKjBMlBL`ABbCGd```>`CAdCGnBFf>=21N`0CLhBHl`3BGj``DCdCO`BN`:CDbBNlAMlBMlCBhCAbCCnBGfBMf9CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfABbACfBGfDElA@jCCjBMh````BCd``011CDbBNlAMlBMlCBhCAbCCn<BMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfBEjN`9>AMl1DKfDFfBCdBMhBHb=DGdBNn88CGdBC`BGh;MjBGn;8CBlCF``;`1BHd1CIh<BLdCB`?`AJjBCd456`00`AJl1COnD@`CDf4=4`74`7A@j5>ABbBBd``N`CLjBGhDAl35CFb4BHd;:9?ALlBMhBHbDDl2DGlBNlBGfBNnDElDGn3DH`0BMlBL`1BLbDHbCJj0BFf`:9ALlBCdBLdDHf>N```CFdBGf?<ABl00`5BNn7BHb37FdFlCHh;888`DHhBHdDHjCLjMj=====BCd0<BMfCDnCO`CE`CGdCIf6DH`00000000000000000000AJh8N`19CGnCI`CIdCInFdFl``6BGfDHbBCd`0BO`0BNd020302`22`1?1111CIlCLj``DDl`BNl8BNnAHh8N`DJhBLdCJjD@nCIh`BGf87?4`908AJnBCd6DJj7DBn`CObBBdCGbCMdCKhD@bCKjCDf21`BNl=BNnAHh=0CEbCKlA@bDJhBLdD@nCIhDG`D@`<?>=CGf`BCdCOn3?CKhBHd0BM`14BMdFdFl=CMlCDjCDnBN`CDlCE`DKhCGdCAd1BNlBNnAIdBCdBLd01:CCjOjBBd44`DG`D@`CDfD@bBHdCKjN`CFb3<``3DJl==BO`EFbDBjDBlEFdDJnAMlBMlCDjCDnBLj:CAdBHdDBnCElBObDC`D@dCAjDCbDCdCO`CB`CAnBL`CBdBNdN`CKhCKjBMbCCjBHbBBdMj772AK`BLdCGj:`05CDjCDn2<<<<<10<<<<DKfDFfBMnCBhCAbCB`BCd0`0BMhAIj0``ABbA@jCHh?BGf6D@nCIhCGfFdFlCAnCBbCJjBFfBGjCElAIlBMlCLhBHlCFj0BGfCCjBCdBLdCOnD@`CDf0CHbCHfDKh77`CE`CIfCLnBHd9DG`9CGd22N`1BFfBGjBCd33````0:DHb0``CMdDJh3BGf8BHb888888`1AJn6DJjBLdCOnD@`CDf>CGfCHh0CGdDLb?N`00CAnCBb2222CMl;CDjCDnCDlCE`9CLnBLd99`9AKb0BM`BCdBMdBMh`5BGf?BLbN```5`CA`60BO`11``7`7`CCjAKd<BNl7BNn;CFdBMlDFj;>AKf?BLdBCdDLn10101011101010101010101010101DM`CDd3CEl0140`CInCJjCMlCDjCDnBN`CDlCE`CGdCL`0DH`BNdBCd0BMnBGf00000DMbAKh0DBnBOb5CB`CAnCBbCJjBN`CE`DKhCGdCIf5`BMh2>`DG`D@`CDfCKhD@bCKjN`BGf00CGfCHhCEbBFfBGjBHdCEfCEhCEjBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnC@hCHhCHjBCdCHlCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNd0000CJfCJhCJlCJnCK`CKbN`CKdCKfBNhCKlCKnCL`CLbCLdCLfCLhBMbA@bBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCGn`AKhBMhBGfCAn0CBdDBnBObDCd4CBbDBjBCdBHbAKjBLdBNl<BNn5AKl>6BL`7ACh58BGf00000CNfBN`CGdCLl1:48=<<6AKn=0=====`AIb;6:??60<N`CMlCDjCDn33CA`BLdBHb022`2`2BCdBFf>4>4CIn99BNlBGfBNnAL`68DNd9A@j8;;`;;;;;CFdCDfCKn;``>`>`>`>`>N`<BM`=BMbBMh0BMdBMlDHbBL`01`BNlBGfBNnAHhBCdDJhBLdBNdCBl=N`8BMf86ALb5DNh066ALd7BHb`CH`CHdCHh`CKhCKj1CDfBGfCM`1CLjBNnDDl;ALf5DNlBLhBCdCA`BNl1DHbABbCCn=BMfBN`CDjCDlCDnCE`CEbBFfBGjCEdBHdCEfCEhCEjCElABbA@jBL`CEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfBCdBO`CDfBHdCF`CFb5CBlCJlCJnCK`CKbN`CKdCKfBNhDDlCLnCA`0DHbCI`CInBMhCFd0BGfBHb000``ABl00DNnBHd0CEl10CGf21ANh660ANj077N`BAf000AEbAEd1000CDbBNlAMlBMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`0CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCJjDDlCDbBNlAMlBMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCGdBO`0BCd11DJlCJdCJfCJhN`BHb11111BHdCGf133BOfCCdBNb`4CF`CFb=CBlCJlCJnCK`CKb=CKdCKfBNhN`CDbBNlAMlBMlCBhCAbCCnBGfBMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfCf`BMhAIdBNlBGfBNnBCdBLd`13432133N`0MjCGd4DOf0CAnCBbCE`CIf`BMlBL`BHb0ALl:DAl>CLhBHl3434BNlBGfBNnAL`BCdBLdDNd187DOh0CJjN`CDb:AMlBMlCBhCAbCCn>BMfBN`CDjCDlCDnCE`BLjDKfDFfBO`CEbCAdBFfBGjCEdBHdBNnCEfDHbCEhDBnCObCEjBLbCElBObDC`D@dCAjDOjDCbDCdABbA@jCO`DKhCB`CAnCBbBL`CEnCBdCF`CFbCFdCFfCFhCFjDHjCFlCFnCG`CGbCGdCGfCGhCGjCGlCGnCH`CHbCHdCHfC@hCHhCHjBCdCHlCHnCI`CIbCIdD@nCIfCIhCIjCIlCInCJ`CBlCJbCJdBNdCJfCJhCJjCJlCJnCK`CKbN`CKdCKfBNhCKhCKjCKlCKnCL`CLbCLdCLfCLhBMbCCjBMhDEhA@bBHbBH`CLjBBdCLlMjCLnCM`A@`BJfCMbCMdCMfN`COnD@`CDf10CEjBHdCKj1A@b`CHbCHfCEbCKl4BMlCKhCAnCBbCDnCAdDCdCDjEFbEFd2CO`CGd47BGfBL`111DBnBOb=4DKh49CGfDC`CAj1D@d1CBd90CAd0CKhCKjCDj8BO`1?19196BLb55322CGd>CAnCBb76765CDnDCdCO`5DBn5493936DCb3=:7BBd=<<=<;CGf>CMl==774BOb6;6;?CAd?3BGfCAj>9>49=<CHn294;:>=?02CDj4740CGd71><04CBd8522??<7=CAnCBb355BO`5CDnDCdCO`782107CKhCKj:>CGf>;:;:87>CMl<6:BL`CAd55>3>3BGfBHb0ALl1782ABl00000000000000000N`0CI`CIn`2222222BCdBLdCOnD@`CDfCKh`ALhEGjEGlEGn2102EH`EHbEHdEHf0EHhEHjEHlEHnEI`EIbEIdEIf55EIhEIjEIl14;3EIn:EJ`49EJbEJd0>EJfEHf240;4:029513622><??>;EJhEJjEJl0EJnEK`4EKbEKdEKfEKh3EKj528EKl1EKn11098432323570;5EL`ELbELd0ELfELhELjELlELn01EM`1EMbEMdEMfEMhEMjEMl697EFnEG`0EMn00EFjEFl10EN`ENbENd21ENfENhENjENl03421ENn0CNd00``0E@j101`11100101010`10101010``1010101`01E@l00`00`000`0000`0`0000``````````BJlBJn0`AMbALnALj``````````````````````````````````EAb000000000000000EAd`CBj000000000000000EAf`0`00`0000000000000`00EO`EObEOd32103210321032103321032103`21033210321032103`2103EOf00`EAj``0`EAh0`0EAnEAl321032222310321032103221033332EB`21402140214214321433321432143214342143````````BOl0000CEbCOnD@`D@b3DG`213232114021320213230232DLn0000000000000132`433543`EBd0000``007777EBb8111111111111111`11111111`EBl``EBf000000000`0000EBh11111211111ECf0````0000``CMnEC`ECdEBn3421034203`323232`03103421034232110342034333103110321034243022`32103421034231021``01031321034210342103421034233111`EDb`EOh``1EDd1201202020201201202120202220002012022012012022012012012012077``777766EDf`00000000000`0000`B@h`JlEnDn```````21AGh`2``3`0320```32````3`````3200``32`3`3200``0`320``3230```00`40320``320```AOn`2EFbEFd````BA```8``764``764``764``764``4`555444B@d875``4``5BAbLd1010Al;:8`;:`;``939```````````BB```35`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALl0;0ANh0ANj0AO`3`B@b0`BAf000`1Oj`B@`7777733DnBBn9BC`::```4EFbEFd;;::7777<<<10<`````AOn`B@d10``7`````1010````````````DDnDEbDEd`DAh00000000000000000000000000000000000000000000000000`BK`0`EDh000000000000000000``BNhCJl000111111CKdCK`33`03`CKb4144142221244444111114441224222CKf055355`51CJn443665555553555531446646633363631365636`13666166466364666366366664444246`4444446`1646`3344463333333336664633133````EH`EHbEHdEL`ELbELd0ELfELhELjELlELn01EM`1EMbEMdEMfEMhEMjEMl697EN`ENbENd21ENfENhENjENl03421ENn0`CJnCKb0`0EDj000`0000000000000000000000000000EDl000`0000000000000000000000000000````CFl0`````````EDn00000000000000000000000000000```````````DOd000000000`0000``000000000AMj00`````EEbCDf000000000000000000`````AKn0````FdFl1010101022```C@lCA`0000000``000000000`0000000`0`00000`00000`0`0`0`0`00000`CCj0000``EOjEOlMb``0``AIjBHj2````02AbBLd111111`0101100`110010011101111111111111111EEh352035211222212212112252152522222203522035252222203521125242224222225552222221211522203522222222222222222222222222222222222222222222222222222222222222122111122222215222222`2035203522220BGh32333322033332232333333333332232232333323223333333333333333333333333333333333333333333333333333332315333533332`233222333233326233363322331233223223333333332332332223333363333333333333331463333333333146333333333333333146333332322214633323``Ef000000000000000000000`````BM`EElEEn`210BMdBn3232`3232323232432103232323232324321043210432103232323232``CDhGd10DAd0`00000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{An}}}}{f{{Bb{B`}}}}}}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{Bh}}}}{f{Bj}}}}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}}{{{l{Bl}}{l{Bl}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{C`}}}}{f{Cb}}}Ab}{{{f{{l{{Cd{c}}}}}}{f{Cb}}}AbCf}{{{f{{l{Bl}}}}{f{Cb}}}Ab}{{{f{{l{c}}}}{f{Cb}}}AbAl}{{{f{{l{Ah}}}}{f{Cb}}}Ab}{{{f{{l{Bh}}}}{f{Cb}}}Ab}{{{f{{l{An}}}}{f{Cb}}}Ab}{{{f{{l{j}}}}{f{Cb}}}Ab}{{{f{{l{Bl}}}}}d}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{C`}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{C`}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dn{}{{Dh{Dj}}{Dl{Dj}}}}}}{{{f{{l{c}}}}e}{{l{c}}}Al{{E`{Ch}{{Ad{Ch}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{E`{{Ch{{f{{Bb{B`}}}}}}}{{Ad{{Ch{{Ed{{Bb{B`}}}}}}}}}}Eb}}{{{f{{l{Bl}}}}c}{{l{Bl}}}{{E`{{Ch{d}}}{{Ad{{Ch{d}}}}}}Eb}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{E`{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}Eb}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{E`{{Ch{{f{Bj}}}}}{{Ad{{Ch{{Ed{Bj}}}}}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Eb}Dn}{{{f{{l{C`}}}}e}{{l{g}}}{}{{Af{{Ch{Ef}}}{{Ad{{Ch{c}}}}}}Eb}Dn}{{{f{{l{C`}}}}c}{{l{C`}}}{{Af{Ef}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ej}}}}c}Ab{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{E`{}{{Ad{}}}}Eb}}{{{f{{l{c}}}}e}{{l{Bh}}}Dn{{Af{{f{DfEl}}}}}}{{{f{{l{An}}}}{f{E`}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{E`}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{E`}}}{{l{c}}}Al}{{{f{{l{Bl}}}}{f{E`}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{E`}}}{{l{c}}}Dn}{{{f{{l{Bh}}}}{f{E`}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{E`}}}{{l{e}}}AlDn}{{{f{{l{Bl}}}}{f{E`}}}{{l{c}}}Dn}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{{f{Bj}}}{{Ad{{f{Bj}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{E`{}{{Ad{}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{{Bb{B`}}}}}{{Ad{{f{{Bb{B`}}}}}}}}}}{{{f{{l{c}}}}Eng}{{l{i}}}Dn{}{{Af{}{{Ad{e}}}}}Dn}{{{f{{l{C`}}}}{f{E`}}}{{A`{{l{C`}}n}}}}{{{f{{l{Ah}}}}{f{E`}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Bh}}}}e{f{Df{Bb{c}}}}}b{}{{E`{{Ch{{f{Bj}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bl}}}}e{f{Df{Bb{c}}}}}b{}{{E`{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{{Cd{c}}}}}}g{f{Df{Bb{e}}}}}bCf{}{{E`{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Df{Bb{c}}}}}b{}{{E`{{Ch{{f{{Bb{B`}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bb{c}}}}}b{}{{E`{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Df{Bb{e}}}}}bAl{}{{E`{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bl}}}}c}{{l{Bl}}}{{E`{d}{{Ad{d}}}}Eb}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{E`{{f{Bj}}}{{Ad{{Ed{Bj}}}}}}Eb}}{{{f{{l{{Cd{c}}}}}}e}{{l{{Cd{c}}}}}Cf{{E`{{f{c}}}{{Ad{c}}}}Eb}}{{{f{{l{An}}}}c}{{l{An}}}{{E`{{f{{Bb{B`}}}}}{{Ad{{Ed{{Bb{B`}}}}}}}}Eb}}{{{f{{l{c}}}}e}{{l{c}}}Al{{E`{}{{Ad{}}}}Eb}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{E`{Ab}{{Ad{Ab}}}}Eb}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{F`{f{Bj}}}{{Ad{F`}}}}Eb}}{{{f{{l{c}}}}}FbDn}{{{f{{l{c}}}}Fd}{{l{Ff}}}Al}{{{f{{l{Bh}}}}Fd}{{l{Ff}}}}{{{f{{l{Bl}}}}Fd}{{l{Ff}}}}{{{f{{l{j}}}}Fd}{{l{Ff}}}}{{{f{{l{An}}}}Fd}{{l{Ff}}}}{{{f{{l{Fh}}}}Fd}{{l{Ff}}}}{{{f{{l{Bh}}}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}Al}{{{f{{l{Fh}}}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bl}}}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{An}}}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{{l{{Cd{c}}}}}}}{{A`{{l{Ff}}n}}}Cf}{{{f{{l{An}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Ff}}n}}}Al}{{{f{{l{Bh}}}}}{{A`{{l{Ff}}n}}}}{{{f{{l{Bl}}}}}{{A`{{l{Ff}}n}}}}`{{{f{{l{C`}}}}}{{f{{l{C`}}}}}}{{{f{{l{An}}}}}{{f{{l{An}}}}}}{{{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DnDn{{Af{{Ch{Ef}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{l{Bl}}{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fn}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}}210201{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{G`}}}Dn}``{{{f{{l{j}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{E`{}{{Ad{}}}}Eb}Al}{{{f{{l{An}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}}{{A`{Abn}}}Al}{{{f{{l{Fh}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{En}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{j}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{En}}Gb}{{A`{Abn}}}Al}{{{f{{l{Ah}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Fh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Gd}{{{f{{l{c}}}}e}{{A`{Abn}}}GdBf}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gf}}}}}}}Dn}{{{f{{l{c}}}}}{{Gl{{Gh{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gf}}}}}}}Dn}{{{f{{l{c}}}}}{{f{{Gn{{Cn{Cl}}}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{Gn{{Cn{Cl}}}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}Dn}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DnAl}}`{fH`}{{{f{{l{c}}}}}{{A`{{f{Bb}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Hb}bDn}{{{f{Df{l{c}}}}{f{{l{e}}}}Hb}bDnDn}{{{f{{l{c}}}}}{{`{Hd}}}Al}{{}{{l{c}}}Dn}{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0{{{f{{l{c}}}}e}{}Al{BdBf}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{Gfb}{{{f{Df{l{c}}}}}bDn}1{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{c}}}}}{{f{En}}}Dn}{{{f{{l{c}}}}e}{{l{Bl}}}AlBf}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bl}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Bl}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}5089241367{{{f{{l{C`}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bj}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gn{Ab}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Bl}}}}d}{{A`{{l{Bl}}n}}}}{{{f{{l{Bh}}}}{f{{l{Bl}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{c}}}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}{{Dn{}{{Hl{Dj}}{Dl{Dj}}}}}}{{{f{{l{{Cd{c}}}}}}{f{{l{Bl}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{An}}}}{f{{l{Bl}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gf}}}Dn}`{{{f{{l{Bh}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{C`}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{An}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Ah}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{Bl}}}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{l{c}}}}{f{DfHn}}}{{A`{bI`}}}Al}{{{f{{l{{Cd{c}}}}}}{f{DfHn}}}{{A`{bI`}}}Cf}{{{f{{l{c}}}}e}bDn{{Af{Ch}}}}{{{f{{l{C`}}}}c}b{{Af{{Ch{Ef}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ef}}}}}}{cc{}}{c{{l{e}}}Cl{{Dn{}{{Ib{c}}}}}}1{{Ddc}{{l{e}}}Id{{Dn{}{{Ib{}}}}Dn}}{{{f{{l{c}}}}e}{{l{c}}}{{Dn{}{{Ib{}}}}Dn}Id}{{Dd{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{Dd{Gn{{Cn{Cl}}}}En}{{l{c}}}Dn}{{DdGf{f{{Bb{Fj}}}}}{{A`{{l{j}}n}}}}{e{{l{Bh}}}{{If{Bj}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{c{{l{Bl}}}{{Id{}{{Cj{d}}}}}}{c{{l{Bl}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Id{}{{Cj{{Hj{Gn{Ch{Ih}}}}}}}}}Al}{c{{l{e}}}{{Id{}{{Cj{Ch}}}}}Al}{e{{l{Bh}}}{{Ij{Bj}}}{{Id{}{{Cj{c}}}}}}{e{{l{An}}}{{If{{Bb{B`}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{e{{l{An}}}{{Ij{{Bb{B`}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{{Cd{c}}}}}Cf{{Id{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Fj}}}}}}}}{c{{l{Ah}}}{{Id{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Ah}}}{{Il{Ab}}}{{Id{}{{Cj{c}}}}}}{{Dde}{{l{Bh}}}{{If{Bj}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{An}}}{{If{{Bb{B`}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{Bl}}}{{D`{}{{Cj{{Ch{d}}}}}}}}8:6>?;{e{{l{Bh}}}{{If{Bj}}}{{Id{}{{Cj{{Ch{c}}}}}}}}=6:{e{{l{Fh}}}{{Ij{{Bb{B`}}}}}{{Id{}{{Cj{c}}}}}}{e{{l{Fh}}}{{If{{Bb{B`}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{Bl}}}{{D`{}{{Cj{d}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{An}}}{{If{{Bb{B`}}}}}{{D`{}{{Cj{c}}}}}}{{Dde}{{l{Bh}}}{{If{Bj}}}{{D`{}{{Cj{c}}}}}}`{e{{l{Bh}}}{{Ij{Bj}}InJ`Jb}{{Jd{}{{Cj{c}}}}}}{c{{l{e}}}{{Jd{}{{Cj{Ch}}}}}Al}{c{{l{Ah}}}{{Jd{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{An}}}{{If{{Bb{B`}}}}InJ`}{{Jd{}{{Cj{{Ch{c}}}}}}}}{e{{l{Bh}}}{{If{Bj}}InJ`}{{Jd{}{{Cj{{Ch{c}}}}}}}}{e{{l{An}}}{{Ij{{Bb{B`}}}}InJ`Jb}{{Jd{}{{Cj{c}}}}}}{c{{l{Bl}}}{{Jd{}{{Cj{{Ch{d}}}}}}}}{c{{l{Bl}}}{{Jd{}{{Cj{d}}}}}}{{cDdEn}{{l{Ah}}}{{Jd{}{{Cj{{Ch{Ab}}}}}}}}{{DdGfc}{{A`{{l{j}}n}}}{{Jf{}{{Cj{{f{Ab}}}}}}Jh}}{{Dd{f{{Bb{d}}}}}{{l{Bl}}}}{{Dd{f{Bb}}}{{l{c}}}Al}{{Dd{f{{Bb{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bb{c}}}}}{{l{An}}}{{If{{Bb{B`}}}}}}{{Dd{f{{Bb{c}}}}}{{l{Bh}}}{{If{Bj}}}}{{Dd{f{{Bb{{Ch{c}}}}}}}{{l{Bh}}}{{If{Bj}}}}{{Dd{f{{Bb{{Ch{d}}}}}}}{{l{Bl}}}}{{Dd{f{{Bb{{Ch{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bb{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bb{{Ch{c}}}}}}}{{l{An}}}{{If{{Bb{B`}}}}}}{c{{l{e}}}{{Jj{}{{Cj{Ch}}}}}Al}{c{{l{Bl}}}{{Jj{}{{Cj{{Ch{d}}}}}}}}{{DdGn}{{l{c}}}Al}{{DdGn{Ch{Ih}}}{{l{c}}}Al}{{DdcGf}{{l{{Cd{c}}}}}Cf}{{Dd{f{{Bb{B`}}}}Gf}{{l{Fh}}}}{{Dd{f{Ab}}Gf}{{l{C`}}}}{{DdGf}{{l{c}}}Al}{{DddGf}{{l{Bl}}}}{{Dd{f{Bj}}Gf}{{l{Bh}}}}{{Dd{f{Ab}}Gf}{{l{Ah}}}}{{Dd{f{{Bb{B`}}}}Gf}{{l{An}}}}4{{DdGf}{{l{Ah}}}}{{DdGf}{{l{Bh}}}}{{DdGf}{{l{Bl}}}}{{DdGf}{{l{Fh}}}}{{DdGf}{{l{{Cd{c}}}}}Cf}{{DdGf}{{l{j}}}}{{DdGf}{{l{C`}}}}{{DdGf}{{l{An}}}}{{{f{{l{c}}}}Gf}{{l{c}}}Dn}{{DdGf{f{En}}Gf}{{l{C`}}}}{{DdGf{f{En}}}{{l{Ah}}}}{{{f{{l{c}}}}Gf}ChDn}{{{f{{l{j}}}}Gf}{{A`{Jln}}}}{{{f{{l{Bl}}}}Gf}{{A`{Jln}}}}{{{f{{l{c}}}}Gf}{{A`{Jln}}}Al}{{{f{{l{{Cd{c}}}}}}Gf}{{A`{Jln}}}Cf}{{{f{{l{C`}}}}Gf}{{A`{Jln}}}}{{{f{{l{Bh}}}}Gf}{{A`{Jln}}}}{{{f{{l{An}}}}Gf}{{A`{Jln}}}}{{{f{{l{Fh}}}}Gf}{{A`{Jln}}}}{{{f{{l{Ah}}}}Gf}{{A`{Jln}}}}{{{f{{l{{Cd{c}}}}}}Gf}JlCf}{{{f{{l{Ah}}}}Gf}Jl}{{{f{{l{C`}}}}Gf}Jl}{{{f{{l{Fh}}}}Gf}Jl}{{{f{{l{An}}}}Gf}Jl}{{{f{{l{Bh}}}}Gf}Jl}{{{f{{l{Bl}}}}Gf}Jl}{{{f{{l{c}}}}Gf}JlAl}{{{f{{l{j}}}}Gf}Jl}{{{f{{l{Ah}}}}Gf}{{Ch{Ab}}}}{{{f{{l{C`}}}}Gf}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Fb}}}Dn}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}JnDn}{{{f{{l{Ah}}}}}Ab}{{{f{{l{C`}}}}}Ab}0{{{f{{l{c}}}}}ChDn}0{{{f{{l{{Cd{c}}}}}}Gf}{{Ch{{f{K`}}}}}Cf}0{{{f{{l{j}}}}Fd}{{A`{{l{Fh}}n}}}}{{{f{{l{j}}}}Fd}{{A`{{Kb{Hf}}n}}}}{{{f{{l{c}}}}Gf}ChDn}{{{f{{l{Fh}}}}}Gf}{{{f{{l{Bh}}}}}Gf}{{{f{{l{Ah}}}}}Gf}{{{f{{l{C`}}}}}Gf}{{{f{{l{An}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bl}}}}dd}{{A`{Cbn}}}}{{{f{{l{Bh}}}}dd}{{A`{Cbn}}}}{{{f{{l{Ah}}}}dd}{{A`{Cbn}}}}{{{f{{l{{Cd{c}}}}}}dd}{{A`{Cbn}}}Cf}{{{f{{l{C`}}}}dd}{{A`{Cbn}}}}{{{f{{l{Fh}}}}dd}{{A`{Cbn}}}}{{{f{{l{c}}}}dd}{{A`{Cbn}}}Al}{{{f{{l{c}}}}GfdGf}CbFn}{{{f{{l{c}}}}e}{{l{Bl}}}AlBf}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bl}}}}4502613{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}{Ch{Gf}}}{{l{c}}}Dn}{{}Gf}0{{GfKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{En}}}}{{{f{{l{C`}}}}}{{f{En}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dn}{{}c{}}0{{}Fj}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gf}}Gf}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gf}}Gf}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{Ah}}}}}}{{{f{{l{C`}}}}}}{{{f{{l{Fh}}}}}}{{{f{{l{{Cd{c}}}}}}}{}Cf}{{{f{{l{An}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{Bl}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}}{{`{InJ`JfHdJj}}}Al}{{{l{c}}}AbDn}{{{l{Lh}}}Ab}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDn}{{{f{{l{c}}}}}{{l{Bl}}}M`}000{{{f{{l{c}}}}}{{l{Bl}}}Dn}02{{{f{{l{c}}}}}MbDn}{{{f{{l{c}}}}}{{`{Md}}}Dn}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dn}{{{f{{l{c}}}}}{{Gl{{Gh{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Ih}}}}}}}}}}}Dn}`{{fc}H`{{If{Bj}}}}{{{f{{l{c}}}}}ChDn}{{{f{{l{c}}}}}{{Ch{Gf}}}Dn}{{{f{{l{c}}}}}{{Mf{c}}}Dn}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{c}}}}}GfDn}0{{{f{{l{c}}}}e}{{l{c}}}Al{BdMh}}00{{{f{{l{c}}}}Gf}{{l{c}}}Dn}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlBf}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}2613504{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{{f{{Bb{B`}}}}}}}}{{{f{{l{Bl}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Bl}}}}}{{Ch{Aj}}}}{{{f{{l{Ej}}}}}{{Ch{Kd}}}}{{{f{{l{Eh}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fn}{{{f{{l{Eh}}}}}Mj}{{{f{{l{Ej}}}}}Mj}{{{f{{l{c}}}}}MjFn}{{{f{Df{l{c}}}}{Kh{c}}}bDn}`{{{f{{l{c}}}}}{{Ml{c}}}Dn}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{Ch{{Nb{G`}}}}}Dn}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dn}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dn}{{{f{{l{Bl}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}{{Ch{{f{{Bb{B`}}}}}}}}{{{f{{l{c}}}}}{{Ch{Hj}}}Al}{{{f{{l{Bl}}}}}Mj}{{{f{{l{An}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{Dd{f{{Bb{B`}}}}GfGf}{{l{Bl}}}}{{Dd{f{Bb}}}{{l{c}}}Al}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GfDn}{{{f{{l{An}}}}}{{A`{Gfn}}}}{{{f{{l{Bh}}}}}{{A`{Gfn}}}}{{{f{{l{c}}}}}{{A`{Gfn}}}Al}{{{f{{l{c}}}}}{{f{Dd}}}Dn}{{Ddc}{{l{Lb}}}{{If{{Bb{Hf}}}}}}{{Dd{Nf{Nd}}}{{l{Kl}}}}{{Ddc}{{l{Bh}}}{{If{{Bb{El}}}}}}{{Ddc}{{l{An}}}{{If{{Bb{{Gn{B`}}}}}}}}{{Ddc}{{l{Bl}}}{{If{{Bb{d}}}}}}{{Ddc}{{l{An}}}{{If{{Bb{{Ch{{f{{Bb{B`}}}}}}}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bb{B`}}}}}}{{Ddc}{{l{An}}}{{If{{Bb{{f{{Bb{B`}}}}}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bb{Nl}}}}}}{{Ddc}{{l{Ff}}}{{If{{Bb{Fb}}}}}}{{Ddc}{{l{Nn}}}{{If{{Bb{Kf}}}}}}{{Ddc}{{l{An}}}{{If{{Bb{{Ed{{Bb{B`}}}}}}}}}}{{Ddc}{{l{O`}}}{{If{{Bb{Ob}}}}}}{{Ddc}{{l{An}}}{{If{{Bb{{Ch{{Ed{{Bb{B`}}}}}}}}}}}}{{Ddc}{{l{Od}}}{{If{{Bb{Of}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bb{Nd}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bb{{Ch{{Ed{Bj}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bb{{Ed{Bj}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bb{Oh}}}}}}{{Ddc}{{l{Ej}}}{{If{{Bb{Kd}}}}}}{{Dd{f{{Bb{c}}}}}{{l{{Cd{c}}}}}Cf}{{Dd{Nf{Hf}}}{{l{Lb}}}}{{Ddc}{{l{Bh}}}{{If{{Bb{{Ch{{f{Bj}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bb{{Ch{El}}}}}}}}{{Dde}{{l{{Cd{c}}}}}Cf{{If{{Bb{{Ch{c}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bb{{Ch{{Gn{B`}}}}}}}}}}{{Ddc}{{l{Bl}}}{{If{{Bb{{Ch{d}}}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bb{{Ch{B`}}}}}}}}{{Ddc}{{l{Nj}}}{{If{{Bb{{Ch{Nl}}}}}}}}{{Ddc}{{l{Ff}}}{{If{{Bb{{Ch{Fb}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bb{{Ch{Aj}}}}}}}}{{Ddc}{{l{Nn}}}{{If{{Bb{{Ch{Kf}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bb{{f{Bj}}}}}}}}{{Dd{Nf{Fb}}}{{l{Ff}}}}{{Ddc}{{l{O`}}}{{If{{Bb{{Ch{Ob}}}}}}}}{{Ddc}{{l{Od}}}{{If{{Bb{{Ch{Of}}}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bb{{Ch{Nd}}}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bb{{Ch{Hf}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bb{{Ch{Oh}}}}}}}}{{Dd{Nf{Kf}}}{{l{Nn}}}}{{Ddc}{{l{Ej}}}{{If{{Bb{{Ch{Kd}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bb{Aj}}}}}}{Dd{{l{{Cd{c}}}}}Cf}{{{f{{l{Fh}}}}GfGf}{{l{Fh}}}}{{{f{{l{An}}}}GfGf}{{l{An}}}}{{{f{{l{Bh}}}}GfGf}{{l{Bh}}}}{{{f{{l{Bl}}}}GfGf}{{l{Bl}}}}{{{f{{l{c}}}}GfGf}{{l{c}}}Al}{{{f{{l{Ah}}}}GfGf}{{l{Ah}}}}{{{f{{l{{Cd{c}}}}}}GfGf}{{l{{Cd{c}}}}}Cf}{{{f{{l{j}}}}GfGf}{{l{j}}}}{{{f{{l{C`}}}}GfGf}{{l{C`}}}}{{Dd{Gn{c}}}{{l{{Cd{c}}}}}Cf}{{Dd{Gn{c}}Ih}{{l{{Cd{c}}}}}Cf}{{DdGn}{{l{c}}}Al}{{{N`{Oj}}{Gn{{Cn{Cl}}}}FbFb}{{l{c}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bl}}}}}}{{{l{Bl}}}}{{{f{{l{Bh}}}}{f{Bj}}}{{l{Bl}}}}{{{f{{l{c}}}}e}{{l{Bl}}}AlBf}{{{f{{l{Bl}}}}{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Bl}}}}{{{f{{l{An}}}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bl}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bl}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bl}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bl}}}Al}948360{{{f{{l{C`}}}}{f{{l{C`}}}}}}823{{{f{{l{c}}}}}GfDn}{{{f{{l{Bl}}}}}Gf}0`{{{f{{l{Ah}}}}}{{A`{{Hh{Hf}}n}}}}{{{f{{l{C`}}}}}{{A`{{Hh{Hf}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{Bh}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bj}}}}}}}}}}}}{{{f{{l{Bh}}}}}{{`{On}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fn}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Ej}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fn}{{{f{{l{Ej}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{DdGfAj}{{A`{{l{Bl}}n}}}}{{DdGfAjAj}{{A`{{l{c}}n}}}Al}{{DdGf}{{l{c}}}Al}{{DdGfAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dn}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{c}}}}}{{Ch{Ih}}}Dn}{{{f{{l{c}}}}}{{f{Oj}}}Dn}{{{f{{l{O`}}}}}Ab}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Od}}}}}Ab}{{{f{{l{Ff}}}}}Ab}{{{f{{l{Nj}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Ej}}}}}Ab}{{{f{{l{Nn}}}}}Ab}09124365:87{{{f{{l{c}}}}e}{}Al{BdBf}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDn}{{{f{{l{Fh}}}}}{{l{Fh}}}}{{{f{{l{C`}}}}}{{l{C`}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Bl}}}}}{{l{Bl}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{{Cd{c}}}}}}}{{l{{Cd{c}}}}}Cf}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{E`}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gfe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}Gfdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{Bl}}}}{f{{Bb{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{d}}}}}}}}{{{f{Df{l{c}}}}{f{{Bb{Fb}}}}e}{{A`{Abn}}}A@d{{Id{}{{Cj{Ch}}}}}}{{{f{{l{Bh}}}}{f{{Bb{Fb}}}}c}{{A`{Abn}}}{{Id{}{{Cj{{Ch{{f{Bj}}}}}}}}}}{{{f{{l{Bl}}}}c{Ch{d}}}{{A`{{l{Bl}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{An}}}}c{Ch{{f{{Bb{B`}}}}}}}{{A`{{l{An}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bh}}}}c{Ch{{f{Bj}}}}}{{A`{{l{Bh}}n}}}{{Id{}{{Cj{Fb}}}}}}{{{f{{l{Bh}}}}ce}{{A`{{l{Bh}}n}}}{{Id{}{{Cj{Fb}}}}}{{E`{{Ch{{f{Bj}}}}}{{Ad{{Ch{El}}}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Id{}{{Cj{Fb}}}}}{{E`{{Ch{{f{{Bb{B`}}}}}}}{{Ad{{Ch{{Gn{B`}}}}}}}}}}{{{f{{l{Bl}}}}ce}{{A`{{l{Bl}}n}}}{{Id{}{{Cj{Fb}}}}}{{E`{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Id{}{{Cj{Fb}}}}}{{E`{Ch}{{Ad{Ch}}}}}}{{{f{{l{An}}}}c}A`A@f}{{{f{{l{j}}}}c}A`A@f}{{{f{{l{Bh}}}}c}A`A@f}{{{f{{l{c}}}}e}A`AlA@f}{{{f{{l{C`}}}}c}A`A@f}{{{f{{l{Bl}}}}c}A`A@f}{{{f{{l{Ah}}}}c}A`A@f}{{{f{{l{An}}}}{f{{l{Bl}}}}{Ch{{f{{Bb{B`}}}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}{f{{l{Bl}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{Bh}}}}{f{{l{Bl}}}}{Ch{{f{Bj}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bl}}}}{f{{l{Bl}}}}{Ch{d}}}{{A`{{l{Bl}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDn}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{c}}}}Fb}bDn}{{{f{Df{l{c}}}}Mb}bDn}{{{f{{l{c}}}}Hf}{{l{c}}}Al}{{{f{{l{C`}}}}Hf}{{l{C`}}}}{{{f{{l{Bl}}}}Hf}{{l{Bl}}}}{{{f{{l{Fh}}}}Hf}{{l{Fh}}}}{{{f{{l{j}}}}Hf}{{l{j}}}}{{{f{{l{Bh}}}}Hf}{{l{Bh}}}}{{{f{{l{Ah}}}}Hf}{{l{Ah}}}}{{{f{{l{An}}}}Hf}{{l{An}}}}{{{f{{l{{Cd{c}}}}}}Hf}{{l{{Cd{c}}}}}Cf}{{{f{{l{Bh}}}}Hf{Ch{{f{Bj}}}}}{{l{Bh}}}}{{{f{{l{c}}}}HfCh}{{l{c}}}Al}{{{f{{l{Bl}}}}Hf{Ch{d}}}{{l{Bl}}}}{{{f{{l{An}}}}Hf{Ch{{f{{Bb{B`}}}}}}}{{l{An}}}}{{{f{{l{Fh}}}}Hf{Ch{{f{{Bb{B`}}}}}}}{{l{Fh}}}}{{{f{{l{Ah}}}}Hf{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{C`}}}}Hf{Ch{{f{Ab}}}}}{{l{C`}}}}{{{f{{l{{Cd{c}}}}}}Hf{Ch{{Cd{c}}}}}{{l{{Cd{c}}}}}Cf}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}HfGf}{{l{c}}}Dn}0{{{f{{l{Bl}}}}d}{{l{Bl}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Fh}}}}d}{{l{Fh}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bh}}}}d}{{l{Bh}}}}{{{f{{l{An}}}}Fd}{{l{An}}}}{{{f{{l{j}}}}Fd}{{l{j}}}}{{{f{{l{Fh}}}}Fd}{{l{Fh}}}}{{{f{{l{c}}}}Fd}{{l{c}}}Al}{{{f{{l{Bl}}}}Fd}{{l{Bl}}}}{{{f{{l{Bh}}}}Fd}{{l{Bh}}}}{{{f{{l{c}}}}Hf}{{Hj{{l{c}}{l{c}}}}}Dn}0{{{f{{l{c}}}}B`}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}B`}Mj}{{{f{{l{Ej}}}}B`}Mj}{{{f{{l{c}}}}B`}MjFn}{{{f{{l{j}}}}}{{f{{Bb{Oj}}}}}}{{{f{{l{c}}}}e}{}Al{BdBf}}{{{l{c}}e}{}Al{BdBf}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{Bl}}}}}{{Ch{Fb}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{An}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bl}}}}}Mj}{{{f{{l{c}}}}{Ch{Gf}}}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{A`{{l{c}}n}}}Dn}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dn{{If{{Bb{Fb}}}}A@h}}{{{f{{l{c}}}}{f{{Bb{A@j}}}}Mb}{{l{c}}}Dn}{{{f{{l{c}}}}{f{{Bb{A@j}}}}}{{l{c}}}Dn}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bb{Fb}}}}A@h}}{{{f{{l{Ah}}}}{f{c}}}{{l{Ah}}}{{If{{Bb{Fb}}}}A@h}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{If{{Bb{Fb}}}}A@h}}{{{f{{l{C`}}}}{f{{l{Ff}}}}}{{l{C`}}}}{{{f{{l{j}}}}{f{{l{Ff}}}}}{{l{j}}}}{{{f{{l{Bh}}}}{f{c}}}{{l{Bh}}}{{If{{Bb{Fb}}}}A@h}}{{{f{{l{C`}}}}{f{c}}}{{l{C`}}}{{If{{Bb{Fb}}}}A@h}}{{{f{{l{Ah}}}}{f{{l{Ff}}}}}{{l{Ah}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}{{If{{Bb{Fb}}}}A@h}}{{{f{{l{c}}}}{f{{l{Ff}}}}}{{l{c}}}{{Dn{}{{Hl{Dj}}{A@l{Dj}}{Dh{Dj}}}}Dn}}{{{f{{l{An}}}}{f{{l{Ff}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Ff}}}}}{{l{Bh}}}}`{{{f{{l{c}}}}dA@n}{{Gn{{Gn{AA`}}}}}Dn}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{Bh}}}}Gf}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}En}b}{{{f{Df{l{C`}}}}En}b}{{{f{{l{Ah}}}}}{{A`{{AAh{AAb{AAf{{AAd{Gf}}}}}}n}}}}{{{f{{l{c}}}}}{{A`{{AAh{{AAj{f}}{AAf{{AAd{Gf}}}}}}n}}}Al}{fc{}}{{{f{{l{An}}}}}{{l{Bh}}}}{{{f{{l{c}}}}}{{Gn{Ch}}}Al}{{{f{{l{c}}}}}{{AAl{Gn{Gn{Ch}}}}}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}01{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Eb}Dn}{{{f{{l{C`}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ef}}}{{Ad{{A`{{Ch{c}}n}}}}}}Eb}Dn}{{{f{{l{C`}}}}c}{{A`{{l{C`}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ef}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{Bh}}e}}}Dn{}{{Af{{f{DfEl}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Id{}{{Cj{{A`{ce}}}}}}}{{Dn{}{{Ib{c}}}}Dn}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAn}0{{{f{{l{{Cd{c}}}}}}}{{A`{{l{{Cd{c}}}}n}}}Cf}{{{f{{l{Bl}}}}}{{A`{{l{Bl}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bh}}}}}{{A`{{l{Bh}}n}}}}{{{l{j}}}AB`}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{Df{l{c}}}}}bDn}{{{f{{l{c}}}}Gf}{}Dn}{{{f{{l{c}}}}B`}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}B`}Mj}{{{f{{l{c}}}}B`}MjFn}{{{f{{l{Ej}}}}B`}Mj}{{{f{{l{Eh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bl}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Lb}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fh}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ff}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bl}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cd{c}}}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}Cf}{{{f{{l{Ej}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nj}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Od}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{O`}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{C`}}}}}Gf}{{Ddc}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dn{}{{Ib{c}}}}Dn}}{{{f{{l{c}}}}{Gn{{Cn{Cl}}}}}{{l{c}}}Dn}{{{l{c}}Dd}{{l{c}}}Dn}{{{f{{Bb{ABb}}}}e}c{}{{ABd{{f{{l{Ff}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Ih}}}{{l{j}}}}{{{l{j}}{l{Bl}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dn}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}32102332012323103232012332102323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{C`}}}}{f{{l{c}}}}e}{{l{C`}}}Dn{{Af{{Ch{Ef}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dn{}{{A@l{Dj}}}}}}{{{f{{l{j}}}}{f{{l{Bl}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}````{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABn}}{f{Cl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}}b}{{{f{DfACb}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jj}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jj}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}54{{{f{DfACj}}}b}{{{f{DfACl}}}b}{{{f{DfACb}}}b}{{{f{DfACn}}}b}{{{f{Df{ACd{c}}}}}bAl}{{{f{Df{AD`{c}}}}}b{ADbA@h}}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfABn}}{Ch{{f{Cl}}}}}b}{{{f{DfABn}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{Ch{{f{Bb}}}}}bAl}{{{f{Df{AD`{c}}}}{Ch{e}}}b{ADbA@h}{{If{c}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACn}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACd{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACd{c}}}}{f{Bb}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{Bj}}}}}}}}Jj}}{{{f{DfACl}}c}b{{D`{}{{Cj{{Ch{{f{{Bb{B`}}}}}}}}}}Jj}}{{{f{DfACh}}c}b{}}{{{f{Df{AD`{c}}}}e}b{ADbA@h}{{If{c}}}}{{{f{DfADd}}d}b}{{{f{Df{ADh{c}}}}}bAl}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{Bj}}}}}}}}{{{f{DfACl}}c}b{{D`{}{{Cj{{f{{Bb{B`}}}}}}}}}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{}}}}}}{{{f{Df{ACd{c}}}}e}bAl{{D`{}{{Cj{}}}}Jj}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{AD`{c}}}}}{{AD`{c}}}{ADbA@h}}{{{f{ADd}}}ADd}{{{f{ADf}}}ADf}{{{f{{ADh{c}}}}}{{ADh{c}}}{JhAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABn}{{}AC`}{Gf{{f{c}}}{}}0000000000{Gf{{f{Dfc}}}{}}0000000000{Gfb}0000000000{{{f{ACj}}}d}{{{f{ACl}}}d}{{{f{ACb}}}d}{{{f{{ACd{c}}}}}dAl}{{{f{ACf}}}d}{{{f{ACj}}}{{f{Oj}}}}{{{f{ACl}}}{{f{Oj}}}}{{{f{ACb}}}{{f{Oj}}}}{{{f{{ACd{c}}}}}{{f{Oj}}}Al}{{{f{ACf}}}{{f{Oj}}}}{ACh{{l{c}}}Dn}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfAC`}}}{{l{Ah}}}}{{{f{DfACn}}}{{l{Ah}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{AD`{Bj}}}{{l{Bh}}}}{{{AD`{{Bb{B`}}}}}{{l{An}}}}{ADd{{l{Bl}}}}{ADfADj}{{{ADh{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bb{c}}}}}ADl{}}{{Dd{f{{Bb{{Ch{c}}}}}}}ADl{}}{{{f{En}}GfGfDd}{{Cn{ACf}}}}{{}Gf}0000000000{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfACl}}}{{Cn{Cl}}}}{{{f{DfACb}}}{{Cn{Cl}}}}{{{f{Df{ACd{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACf}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGf{Ch{En}}}ABn}{{DdGf{Ch{En}}}AC`}{{DdGfGf}ACj}{{DdGfGf}ACl}{{DdGfGf}ACb}{{DdGf}ACn}{{DdGfGfEn}{{ACd{c}}}Al}{{DdGf}{{AD`{c}}}{ADbA@h}}{{DdGf}ADd}{{DdGf}ADf}{{DdGf}{{ADh{c}}}Al}{{DdGfGfEnEn}{{ACd{c}}}Al}{{{f{DfACh}}}b}{{{f{DfADd}}}b}{{{f{DfADf}}}b}{{{f{Df{ADh{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAn}0000000000{{}c{}}0000000000````````{{{f{DfACf}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACf}}}d}{{{f{ACf}}}{{f{Oj}}}}{{{f{DfACf}}}{{l{Ah}}}}{{{f{En}}GfGfDd}{{Cn{ACf}}}}{{{f{DfACf}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Gb}}}Gb}{{f{f{Dfc}}}b{}}{fb}{{}Gb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{c{{A`{Gb}}}ADn}{Gfb}{{{f{Gb}}{f{Gb}}}d}{{f{f{c}}}d{}}00{{{f{Gb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Gb}}{f{Dfc}}}bAE`}{{}Gf}{{}c{}}{{{f{Gb}}c}A`A@f}{{{f{Gb}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0`{AEfAEf}``{{AEhDdEn}e{}{{AEj{c}}}}{{eDdEn}AEj{}{{Jd{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00{Gfb}00{cc{}}00{{}Gf}00{{}c{}}00000{{{f{AEl}}}AEn}{{{f{AF`}}En}AFb}{{{f{DfAEn}}}Ch}{{{f{DfAFb}}}Ch}{{{f{Df{AFd{c}}}}}ChD`}21{{{f{Df{AFd{c}}}}}ChHd}`{{{f{AEn}}}{{Hj{Gf{Ch{Gf}}}}}}{{{f{AFb}}}{{Hj{Gf{Ch{Gf}}}}}}{{{f{{AFd{c}}}}}{{Hj{Gf{Ch{Gf}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00<<<`````````````````````````{{fh}b}0000{{}Hb}{{}Jn}{{HbHb}Hb}{{JnJn}Jn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}3210{{{f{Hb}}}Fb}0{{{f{Jn}}}B`}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{G`}}}Dn}{{{f{{Mn{c}}}}}{{Mn{c}}}Dn}{{{f{{Kh{c}}}}}{{Kh{c}}}Dn}{{{f{AFf}}}AFf}{{{f{Hb}}}Hb}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFh}}}b}{HbHb}{JnJn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dn}{{}{{Kh{c}}}Dn}{{}Hb}{{}Jn}{{{f{{Ml{c}}}}}fDn}{Gf{{f{c}}}{}}000000{Gf{{f{Dfc}}}{}}000000{c{{A`{Jn}}}ADn}{{HbHb}Hb}{{JnJn}Jn}{{}d}{{{f{G`}}}{{Ch{Fb}}}}{{{Kh{c}}Fb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{Kh{c}}{Ch{Fb}}}{{Kh{c}}}Dn}{Gfb}000000=<5{{{f{Hb}}{f{Hb}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfHb}}c}b{{Id{}{{Cj{Hb}}}}}}{{{f{DfJn}}c}b{{Id{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}Hb}{{Kh{e}}}DnDn}{{{Kh{c}}Jn}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{f{DfHn}}}{{A`{bI`}}}Dn}{{{f{AFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Hb}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{Jn}}{f{DfHn}}}{{A`{bI`}}}}0000{cc{}}000000{Fb{{Ch{Hb}}}}{B`{{Ch{Jn}}}}{FbHb}0{B`Jn}010{cHb{{Id{}{{Cj{Hb}}}}}}{cJn{{Id{}{{Cj{Jn}}}}}}{{{f{Bj}}}{{Ch{Hb}}}}{{{f{Bj}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Fb}}}Dn}{{{f{{Kh{c}}}}}dDn}{{{f{Jn}}}d}{{{f{G`}}}Jn}{{{f{{Kh{c}}}}}JnDn}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dn}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dn}{{{f{Jn}}}Mb}{{}Gf}000000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{HbHb}Hb}{{JnJn}Jn}{{{f{Hb}}Hb}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Hb}{Jn}{{{f{Hb}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDn}21{{{f{{Kh{c}}}}}MbDn}111{{{f{Hb}}}{{AFj{Hb}}}}{{{f{Jn}}}{{AFj{Jn}}}}{{{f{Hb}}}{{AFl{Hb}}}}{{{f{Jn}}}{{AFl{Jn}}}}{{}d}{{}{{f{{AG`{AFn}}}}}}{{{f{G`}}}{{Ch{Mj}}}}{{{Kh{c}}}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dn}{{{Kh{c}}Ch}{{Kh{c}}}Dn}{{{f{{Kh{c}}}}{Kh{c}}}{{AGb{c}}}Dn}4321{{{Kh{c}}}{{Mn{c}}}Dn}{HbHb}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dn}{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{{{f{Jn}}c}A`A@f}{{{f{DfHb}}Hbd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Fb}}}bDn}{{{f{Df{Kh{c}}}}d}bDn}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDn}{{{f{Df{Kh{c}}}}Ch}bDn}033{{{f{Df{Kh{c}}}}Mb}bDn}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dn}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dn}{{HbHb}Hb}{{JnJn}Jn}?>10{{{Mn{c}}}{{Kh{c}}}Dn}{fc{}}0000{{{f{DfHb}}Hb}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dn}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dn}{fAAn}000000:9{{{f{{Mn{c}}}}}{{f{{AGd{G`}}}}}Dn}{{}c{}}000000{AFhAFh}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dn}````{{fh}b}{{{f{{AGf{c}}}}Gf}{{Hj{{AGf{c}}{AGf{c}}}}}Cf}{e{{AGf{c}}}Cf{{Id{}{{Cj{{f{c}}}}}}}}{e{{AGf{c}}}Cf{{Id{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGhe}g{}{{Id{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGj}}}}{{{f{{AGf{c}}}}}{{f{AGj}}}Cf}{{{f{Df{AGf{c}}}}}{{f{DfAGj}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGf{c}}}}Gf}dCf}{{{f{{AGf{c}}}}}{{AGf{c}}}{JhCf}}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{{AGf{c}}}}}{{f{AGh}}}Cf}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGf{c}}}}{f{DfHn}}}{{A`{bI`}}}{AGlCf}}{cc{}}{{{Gn{c}}}{{AGf{c}}}Cf}{{GfAGh}{{AGf{c}}}Cf}{{{f{{AGf{c}}}}Gf}{{Ch{{f{c}}}}}Cf}{{}AGh}{{{f{Ih}}{f{{AGf{c}}}}{f{{AGf{c}}}}}{{AGf{c}}}Cf}{{AGh{f{Ih}}}{{AGf{c}}}Cf}{{{f{Ih}}{f{{AGf{c}}}}}{{AGf{c}}}Cf}0{{}Gf}{{}c{}}{{{f{{AGf{c}}}}}{}Cf}{{{f{{AGf{c}}}}Gf}dCf}{{fGf}d}1{{{f{{AGf{c}}}}}{{AH`{AGn}}}Cf}{{{f{{AGf{c}}}}}{{AH`{{f{c}}{Gh{c}}AGn}}}Cf}{{{f{{AGf{c}}}}}GfCf}0`{db}{{{f{Df{AGf{c}}}}{Ch{Ih}}}bCf}{{{f{Df{AGf{c}}}}GfGf}bCf}{{fGfGf}c{}}01{{{f{{AGf{c}}}}Gf}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}Cf}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGf{c}}}}}{{Cn{Cl}}}Cf}{fc{}}{g{{A`{{AGf{c}}e}}}Cf{}{{Id{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGf{c}}e}}}Cf{}{{Id{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGhg}{{A`{ie}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{K`}}}{{f{Bj}}}}{{}{{f{Bj}}}}{{{f{{AGf{c}}}}}{{Ch{{f{Ih}}}}}Cf}{{{f{{AGf{c}}}}Gf}{{f{c}}}Cf}0{{{f{{AGf{c}}}}Gf}{}Cf}{{{f{{AGf{c}}}}}{}Cf}{{{f{{AGf{c}}}}}{{Gh{c}}}Cf}{{}c{}}{{{AGf{c}}{Ch{Ih}}}{{AGf{c}}}Cf}{{{f{{AGf{c}}}}{Ch{Ih}}}{{Cn{Cl}}}Cf}1`{{{f{Df{AHb{c}}}}}bCf}0{{{f{Df{AHb{c}}}}{Ch{c}}}bCf}{{{f{Df{AHb{c}}}}c}bCf}{{{f{Df{AHb{c}}}}{f{AGj}}}bCf}{{{f{Df{AHb{c}}}}{f{AGj}}}{{A`{bn}}}Cf}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AHb{c}}}Cf}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{AHb{c}}}{{l{{Cd{c}}}}}Cf}{cc{}}{{{f{{AHb{c}}}}DdGfGf}{{Cn{ACf}}}Cf}{{}Gf}{{}c{}}{{DdGf}{{AHb{c}}}Cf}{{{f{Df{AHb{c}}}}}AbCf}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{{f{DfAHd}}}b}{{{f{DfAHd}}{Ch{{f{AGj}}}}}b}{{{f{DfAHd}}{f{AGj}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{AHf}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AHd}}DdGfGf}{{Cn{ACf}}}}{{DdGf}{{Cn{AHd}}}}{{}{{N`{E`}}}}{{}AGh}{{}Gf}{{}c{}}{{}d}`{{{Cn{E`}}{N`{E`}}AGh}b}{{{f{DfAHd}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`````````````````````````````````````````````````{{fh}b}00{{{f{AHh}}}Aj}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{c}}}}}}Eb}}{{{f{AHn}}{f{E`}}}AHn}{{{f{AHn}}{f{E`}}}{{l{c}}}Dn}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bb{g}}}}}b{}{}{}{{E`{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{e}{{Ad{c}}}}Eb}}{{{f{AI`}}}Fb}{{{f{AIb}}Fd}{{l{Ff}}}}{{{f{AIb}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AId}}}{{A`{{l{Ff}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AIf}}{f{En}}}{{A`{Abn}}}}0{{{f{AIf}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Fd}}}Fd}{{{f{Fl}}}Fl}{{{f{AIh}}}AIh}{{f{f{Dfc}}}b{}}00{fb}00{{}Fd}{{}Fl}{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00``{c{{A`{Fd}}}ADn}{c{{A`{Fl}}}ADn}{c{{A`{AIh}}}ADn}{Gfb}00{{{f{Fd}}{f{Fd}}}d}{{{f{Fl}}{f{Fl}}}d}{{{f{AIh}}{f{AIh}}}d}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIl}}}{{A`{Abn}}}}{{{f{AIl}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{AIn}}c}{{A`{AInn}}}{}}{{{f{AJ`}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}Dn}`{{{f{Fd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AIh}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{Fl}}}Fd}1{{{f{Fd}}}Fl}2`{{DdcGf}AJb{}}{{DdGf}AJd}`{{{f{AJf}}Gf}{{A`{Jln}}}}{{{f{AJf}}Gf}Jl}{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}0{{{f{Fd}}{f{Dfc}}}bAE`}{{{f{Fl}}{f{Dfc}}}bAE`}{{{f{AIh}}{f{Dfc}}}bAE`}{{}Gf}00{{}c{}}00{{{f{AIh}}}d}{{{f{AJj}}}{{A`{{l{Bl}}n}}}}{{{f{AJl}}}{{A`{{l{Bl}}n}}}}``88``{{{f{AHh}}}{{Ch{c}}}{}}{{{f{AHh}}}{{Ch{Aj}}}}{{{f{AJn}}}{{Ch{c}}}{}}2{{{f{AHh}}}{{Ch{{Hj{cc}}}}}{}}``{{{f{AId}}}{{A`{Gfn}}}}{{}Fd}{{}Fl}{{{f{AK`}}GfGf}{{l{c}}}Dn}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AIl}}}{{A`{{Hh{Hf}}n}}}}{{{f{AJn}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AKb}}}Ab}0{{{f{AKd}}}AKd}{{{f{AKf}}{f{E`}}A@b}{{A`{Abn}}}}`{{{f{AKh}}c{Ch{e}}}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKh}}ci}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{Fd}}c}A`A@f}{{{f{Fl}}c}A`A@f}{{{f{AIh}}c}A`A@f}{{{f{AKh}}{f{{l{Bl}}}}{Ch{c}}}{{A`{AKhn}}}{}}{{{f{AKj}}Hf}{{l{c}}}Dn}{{{f{AKl}}Hfc}{{l{e}}}{}Dn}{{{f{AKn}}GfGf}AKn}0`{{{f{AIb}}d}{{l{c}}}Dn}{{{f{AIb}}Fd}{{l{c}}}Dn}{{{f{AL`}}B`}{{Ch{Aj}}}}{{{f{AHh}}}{{Ch{c}}}{}}{{{f{ALb}}{f{c}}}{{A`{ALbn}}}A@h}{{{f{ALd}}{f{c}}}ALdA@h}{{{f{ALf}}}{{Gn{{f{{Bb{B`}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00{{{f{AId}}}{{A`{AIdn}}}}9{{}c{}}00{{Fdd}Fd}{{Fld}Fl}1010{{Flc}Fl{{Id{}{{Cj{d}}}}}}210{FdFd}{FlFl}`{{{f{ALh}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{E`{ff}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALj{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bh}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALl}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALn{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnAM`{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALl}AM`{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AMb{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAMbDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALl}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0{{{f{{l{c}}}}}GfAl}0{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AMd{Fb}}}}Fb}{{A`{bn}}}}{{{f{{Bb{Fj}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{AMfn}}}}{{{f{{Bb{Fj}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bb{Fj}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bb{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bb{Ab}}}}}{{A`{AMfn}}}}{{{f{{Bb{Ab}}}}}{{A`{{l{Fh}}n}}}}00{{{f{En}}}{{Ch{AMh}}}}````{{fh}b}{{{f{{l{c}}}}eAMjd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{AMj}}}AMj}{{f{f{Dfc}}}b{}}{fb}{{}AMj}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{c{{A`{AMj}}}ADn}{Gfb}{{{f{AMj}}{f{AMj}}}d}{{f{f{c}}}d{}}00{{{f{AMj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{AMj}}{f{Dfc}}}bAE`}{{}Gf}{{}c{}}{{{f{{Bb{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{E`{fGff}{{Ad{d}}}}}}{{{f{AMj}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6`{{Gf{f{Df{Gn{d}}}}}b}```{{{f{AKn}}GfGf}AKn}0{{Gf{f{{Bb{Fj}}}}{f{DfFl}}}{{A`{{AMl{{l{Ff}}}}n}}}}`````````````11`{AMnHf}00{{{f{Bj}}{f{En}}}{{A`{Eln}}}}{{{f{Bj}}}{{A`{Ddn}}}}{{{f{Bj}}}{{A`{AN`n}}}}{{{f{ANb}}}Hf}{{{f{Bj}}}{{A`{bn}}}}5554```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000{{{f{ANd}}}d}{{{f{Jl}}}{{`{{D`{}{{Cj{Jl}}}}}}}}{{{f{Jl}}{f{Df{Gn{Jl}}}}}b}{{ANdd}ANd}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jl}}{f{Jl}}}Jl}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfANf}}{Ch{{f{Bj}}}}}b}{{{f{DfANd}}{f{ANd}}}{{A`{bn}}}}{{{f{DfANf}}}b}{{{f{DfANf}}{f{Bj}}}b}{{{f{ANd}}Fd}{{l{Ff}}}}{eANh{}{{Id{}{{Cj{c}}}}}}0{{AGhe}ANj{}{{Id{}{{Cj{c}}}}}}0{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{Jl}}}Jl}{{{f{{L`{KnKl}}}}}{{`{Jj}}}}{{{f{{L`{LfLb}}}}}{{`{Jj}}}}{{{f{Dd}}}{{f{ANl}}}}{{{f{Dd}}}{{f{Bj}}}}{{{f{Dd}}}{{f{ANn}}}}{{{f{Dd}}}{{f{{Bb{B`}}}}}}{{{f{En}}}{{f{En}}}}{{{f{Oj}}}{{f{En}}}}{{{f{AO`}}}{{f{En}}}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{Ch{{f{{Bb{c}}}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}6{{{f{{L`{LnLb}}}}}{{`{Jj}}}}7{f{{f{c}}}{}}000000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}000000000000000000000000000000000000000000000{En{{Cn{En}}}}{{{AOl{Bj}}}AOn}{{{f{ANd}}{f{ANd}}c}{{A`{ANdn}}}B@`}{{{f{Jl}}{f{En}}}d}{{{f{B@b}}{f{En}}}{{A`{Abn}}}}{{{f{Jl}}{f{En}}}Jl}{{{f{En}}En}En}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{B@b}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{En}}Gb}{{A`{Abn}}}}{{{f{ANd}}{f{En}}Gb}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Ej}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DnDn}{{{f{B@d}}}B@d}{{{f{AOn}}}AOn}{{{f{ANd}}}ANd}{{{f{B@f}}}B@f}{{{f{Jl}}}Jl}{{{f{B@h}}}B@h}{{{f{En}}}En}{{{f{B@j}}}B@j}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Nh}}}Nh}{{{f{Nj}}}Nj}{{{f{Ff}}}Ff}{{{f{Nn}}}Nn}{{{f{O`}}}O`}{{{f{Od}}}Od}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Ej}}}Ej}{{{f{Eh}}}Eh}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{Bh}}}Bh}{{{f{An}}}An}{{{f{Fh}}}Fh}{{{f{Bl}}}Bl}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@l}}}B@l}{{{f{B@n}}}B@n}{{{f{BA`}}}BA`}{{{f{AGh}}}AGh}{{{f{BAb}}}BAb}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000{fb}00000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}BAd}{{{f{B@n}}{f{B@n}}}BAd}{{{f{DfOj}}En}b}{BAfe{}{{ANh{c}}ALl}}0{{BAfAGh}e{}{{ANj{c}}ALl}}0{{f{f{c}}}BAd{}}0{{{f{En}}}d}{{{f{AGh}}}d}11{{{AOl{Bj}}}En}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}BAh}{{}B@d}{{}AOn}{{}Jl}{{}B@h}{{}En}{{}AGh}{{{f{Dd}}}f}{Gf{{f{c}}}{}}00{{{f{{L`{ce}}}}}fDnDn}1111111111111111111111111111111111111111111{Gf{{f{Dfc}}}{}}000{{{f{Df{L`{ce}}}}}{{f{Df}}}DnDn}111111111111111111111111111111111111111111{c{{A`{Dd}}}ADn}{c{{A`{B@d}}}ADn}{c{{A`{Jl}}}ADn}{c{{A`{B@h}}}ADn}{c{{A`{En}}}ADn}{c{{A`{Oj}}}ADn}{c{{A`{Ld}}}ADn}{c{{A`{Ah}}}ADn}{c{{A`{B@n}}}ADn}{c{{A`{BA`}}}ADn}{c{{A`{AGh}}}ADn}{c{{A`{BAb}}}ADn}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{ANfc}ANd{{Id{}{{Cj{{Ch{{f{Bj}}}}}}}}}}{Gfb}000000000000000000000000000000000000000000000{{{f{B@b}}}{{f{En}}}}{{{f{{L`{LjLh}}}}}{{f{En}}}}{{{f{{L`{LlLb}}}}}{{f{En}}}}{{{f{{L`{LnLb}}}}}{{f{En}}}}{{{f{{L`{KnKl}}}}}{{f{En}}}}{{{f{{L`{LfLb}}}}}{{f{En}}}}{{{f{ANd}}}{{f{En}}}}{{{f{Jl}}}En}{{{f{Oj}}}{{f{En}}}}`{fc{{BAl{BAj}}}}0`{{{f{Dd}}{f{c}}}d{{If{Bj}}A@h}}{{{f{B@d}}{f{B@d}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{B@h}}{f{B@h}}}d}{{{f{En}}{f{AGh}}}d}{{{f{En}}{f{En}}}d}{{{f{B@j}}{f{B@j}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{B@n}}{f{B@n}}}d}{{{f{BA`}}{f{BA`}}}d}{{{f{AGh}}{f{AGh}}}d}{{{f{BAb}}{f{BAb}}}d}{{{f{Jl}}{f{Jl}}d}d}{{{f{ANd}}{f{ANd}}}}{{{f{ANd}}{f{{l{Bh}}}}}}{{{f{ANd}}{f{Bj}}}}102{{f{f{c}}}d{}}00000000000000000000000000000000{{{f{{L`{ce}}}}}OjDnDn}{{{f{AOn}}{f{Bj}}}{{Ch{Fb}}}}{{B@`{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{ANfANd}{BAh{{N`{AOn}}}}{{{f{Dd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@d}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AOn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{B@f}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Jl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@h}}{f{DfHn}}}{{A`{bI`}}}}{{{f{En}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@j}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Oj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ld}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{B@n}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BA`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{AGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BAb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Bj}}}Dd}{ElDd}{H`Dd}{cc{}}{{{f{El}}}Dd}111{{{l{Lb}}}{{L`{LnLb}}}}{{{l{Kl}}}{{L`{KnKl}}}}33333333333{{{f{Bj}}}Jl}{{{f{{Bb{B`}}}}}Jl}5{{{Ch{c}}}Jl{{BAn{Jl}}}}{cJlBB`}{dJl}8{BBbEn}9{{{f{AGh}}}En}{{{f{Jl}}}En}{JlEn}<{{{f{Jl}}}Oj}={{{f{BBd}}}Oj}{{{f{BAb}}}Ld}????????????????????????{BBfAGh}{BBhAGh}{cc{}}0{{{f{AGh}}d}En}{{{l{Ff}}En}ANd}{{{l{Ff}}{N`{AOn}}dB@d}ANd}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{BBj}}}}}}{{DdcLd}{{L`{LlLb}}}{{Id{}{{Cj{{Ch{BBj}}}}}}}}{{{l{Ff}}B@d}ANd}{cDd{{Id{}{{Cj{{Cn{Bj}}}}}}}}{cDd{{Id{}{{Cj{Dd}}}}}}{cDd{{Id{}{{Cj{{f{Dd}}}}}}}}{cDd{{Id{}{{Cj{BAj}}}}}}{cDd{{Id{}{{Cj{{f{BAj}}}}}}}}{cDd{{Id{}{{Cj{{f{Bj}}}}}}}}{cDd{{Id{}{{Cj{El}}}}}}{cDd{{Id{}{{Cj{{Ed{Bj}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{BBl}}}}}}{{Ddc}{{L`{KnKl}}}{{Id{}{{Cj{{Ch{BBl}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{AMn}}}}}}{{DdcLd}{{L`{LfLb}}}{{Id{}{{Cj{{Ch{AMn}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{ANb}}}}}}{{Ddc}{{L`{LnLb}}}{{Id{}{{Cj{{Ch{ANb}}}}}}}}{{{f{Bj}}}Dd}0{ElDd}{{{f{{l{Bh}}}}{f{{AOl{Bj}}}}B@d}{{A`{ANdn}}}}{{{Gn{c}}AGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{Gn{c}}AGh}{{ALl{}{{AOb{e}}{AOd{c}}{AOf{g}}}}}{AOh{AOj{e}}}Jh{{Hd{}{{Cj{e}}}}JjInJ`}}{{GfcAGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{GfAGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{DddGfB@d}ANd}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{AOn}}Fb}{{f{Bj}}}}{B@nKf}{BA`{{Ch{Kf}}}}{{{f{{L`{LjLh}}}}Gf}{{A`{Jln}}}}{{{f{{L`{LnLb}}}}Gf}{{A`{Jln}}}}{{{f{{L`{LfLb}}}}Gf}{{A`{Jln}}}}{{{f{{L`{KnKl}}}}Gf}{{A`{Jln}}}}{{{f{{L`{LlLb}}}}Gf}{{A`{Jln}}}}{{{f{B@b}}Gf}{{A`{Jln}}}}{{{f{ANd}}Gf}{{A`{Jln}}}}{{{f{{L`{LfLb}}}}Gf}Jl}{{{f{{L`{KnKl}}}}Gf}Jl}{{{f{{L`{LnLb}}}}Gf}Jl}{{{f{{L`{LjLh}}}}Gf}Jl}{{{f{{L`{LlLb}}}}Gf}Jl}{{{f{B@b}}Gf}Jl}{{{f{ANd}}Gf}Jl}{{{f{AOn}}}{{f{{AOl{Bj}}}}}}{{}En}0000000000000000000000000{{{f{AOn}}Fb}{{Ch{{f{Bj}}}}}}{{BA`Kf}Kf}{{BA`c}Kf{{E`{}{{Ad{Kf}}}}}}{{{f{ANd}}}{{f{{N`{AOn}}}}}}{{{f{En}}}{{Ch{{Gn{Gf}}}}}}{{{f{Jl}}}{{Ch{{f{Bj}}}}}}{{{f{BBn}}Gf}Jl}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANd}}{f{{l{Bh}}}}}}{{{f{ANd}}{f{Bj}}}}{{{f{ANd}}{f{ANd}}}}102{{{f{Dd}}{f{Dfc}}}bAE`}{{{f{Jl}}{f{Dfc}}}bAE`}{{{f{B@h}}{f{Dfc}}}bAE`}{{{f{En}}{f{Dfc}}}bAE`}{{{f{Oj}}{f{Dfc}}}bAE`}{{{f{Ld}}{f{Dfc}}}bAE`}{{{f{BA`}}{f{Dfc}}}bAE`}{{{f{AGh}}{f{Dfc}}}bAE`}{{{f{BAb}}{f{Dfc}}}bAE`}{{{f{Jl}}{f{Dfc}}d}bAE`}{{{f{{L`{LnLb}}}}}{{l{O`}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jl}}}Fb}{EnEn}{{}Gf}000000000000000000000000000000000000000000000{{{f{En}}}{{Ch{{f{En}}}}}}{{{f{AGh}}}{{Ch{{f{AGh}}}}}}{{}c{}}000000000000000000000000000000000000000000000{{}Fj}01{{BC`En}{{A`{Mjn}}}}{{{L`{LnLb}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}{ANdAb}{JlJl}{DdEl}{{{f{En}}}d}00{{{f{Jl}}}d}111{{{f{ANd}}}d}0212{{{f{AOn}}}d}23330323{{{f{AGh}}}d}3434340444344444340{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{AH`{cgAGn}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANd}}}BCb}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{En}}}{{f{En}}}}{{{f{AOn}}}Gf}{{{f{ANd}}}Gf}{DdBCd}{{{f{ANd}}{f{ANd}}}}{{{f{ANd}}{f{{l{Bh}}}}}}{{{f{ANd}}{f{Bj}}}}021{{{f{ANd}}{f{ANd}}}{{A`{{Hj{ANdANd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{dn}}}}{{{f{B@h}}}{{Ch{En}}}}{{{f{En}}}{{A`{Enn}}}}{{{f{En}}}{{A`{Mjn}}}}{{{f{ANd}}}Mj}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{DfBAh}}{f{{N`{AOn}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}043{{{f{{L`{LnLb}}}}}{{l{O`}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{ANd}}}{{A`{Gfn}}}}{{{f{ANd}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGfB@d}ANf}{{Ddc}{{L`{LlLb}}}{{If{{Bb{{Ch{BBj}}}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bb{BBl}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bb{{Ch{BBl}}}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bb{AMn}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bb{{Ch{AMn}}}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bb{BBj}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bb{ANb}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bb{{Ch{ANb}}}}}}}}{{{N`{AOn}}}BAh}{{DdEn}Oj}{KfB@n}{HfBA`}{KfBA`}{{{l{c}}}{{L`{ec}}}DnDn}{{}B@j}{{{f{DfBCb}}}Ch}{{{f{ANd}}{f{Bj}}}}{{{f{ANd}}{f{{l{Bh}}}}}}{{{f{ANd}}{f{ANd}}}}201{{{f{ANd}}}Gf}5{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{L`{LnLb}}}}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{L`{KnKl}}}}{{{f{Dd}}{f{Dd}}}{{Ch{BAd}}}}{{{f{Jl}}{f{Jl}}}{{Ch{BAd}}}}{{{f{Ld}}{f{Ld}}}{{Ch{BAd}}}}{{{f{B@n}}{f{B@n}}}{{Ch{BAd}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DnDn}{{{f{ANd}}}{{f{{l{Ff}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gf}}}}{{{f{DfANf}}{f{Bj}}}{{Hj{Fbd}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bh}}}}{Ch{{f{AN`}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{f{{l{Bh}}}}{Ch{{f{AN`}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{AOn}}{f{AOn}}}d}{{{f{{L`{LjLh}}}}}Gf}{{{f{{L`{LnLb}}}}}{{l{O`}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Dd}}c}A`A@f}{{{f{{L`{ce}}}}g}A`DnAlA@f}{{{f{B@d}}c}A`A@f}{{{f{ANd}}c}A`A@f}{{{f{Jl}}c}A`A@f}{{{f{B@h}}c}A`A@f}{{{f{En}}c}A`A@f}{{{f{Oj}}c}A`A@f}{{{f{Ld}}c}A`A@f}{{{f{Ah}}c}A`A@f}{{{f{B@n}}c}A`A@f}{{{f{BA`}}c}A`A@f}{{{f{AGh}}c}A`A@f}{{{f{BAb}}c}A`A@f}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BCb}}}{{Hj{Gf{Ch{Gf}}}}}}{{{f{ANd}}d}ANd}{{{f{ANd}}Fd}ANd}{{{f{Jl}}}{{Ed{Bj}}}}{{{f{{L`{KnKl}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{{L`{LfLb}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{{L`{LnLb}}}}{f{Bj}}}{{l{Bh}}}}{{{f{Jl}}{f{En}}}{{Ch{Jl}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{ANd}}B@jd}{{Cn{Cl}}}}{{{f{En}}B@j}AGh}{{{f{Oj}}B@j}BBd}{LdBAb}{{{f{En}}DdB@j}BBd}{Ld{{f{Bj}}}}{{{f{ANd}}{f{{AOl{Bj}}}}BCf}ANd}{{AGhGfd}AGh}{{{f{ANd}}}{{A`{ANdn}}}}{{{f{ANd}}}ANd}{{{f{AGh}}}{{f{AGh}}}}{fc{}}00000000000000000000000000000000000{{{f{En}}}En}{{{f{AGh}}}BCh}{{{f{{L`{LjLh}}}}Gf}{{A`{{Ed{{L`{LjLh}}}}n}}}}{fEl}{{{f{{L`{LlLb}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{{L`{KnKl}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{{L`{LfLb}}}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{{f{{L`{LnLb}}}}{f{Bj}}}{{l{Bh}}}}4444{{{f{Jl}}{f{Jl}}}d}{{{f{{L`{LfLb}}}}{Ch{{f{AN`}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{Ch{{f{AN`}}}}{f{{l{Bh}}}}}{{A`{{L`{KnKl}}n}}}}{g{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANje}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BAf{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{BAfAGh}{{A`{eg}}}{}{{ANj{c}}ALl}{}}0{{{f{Jl}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000{Hf{{A`{B@n}}}}111{{}{{A`{c}}}{}}000000000000000000000000000000000000000000000{{{f{Jl}}{f{En}}}{{A`{Jln}}}}{{{f{En}}B@j}{{A`{AGhn}}}}{f{{A`{H`BCj}}}}0000{fAAn}000000000000000000000000000000000000000000000{{{f{AGh}}}AGh}{{{f{ANd}}}{{A`{ANdn}}}}{{{f{ANd}}}d}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}cJh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANd}}}{{A`{AB`n}}}}1{{{f{En}}Jl}d}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}gJh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{}c{}}000000000000000000000000000000000000000000000{Gfc{}}0{{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}{Ch{Ih}}}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{DfDd}}BAj}{{A`{bI`}}}}{{{f{DfDd}}BCl}{{A`{bI`}}}}{{{f{DfDd}}{f{Bj}}}{{A`{bI`}}}}{{{f{En}}}Jl}```````````{{{f{ANd}}{f{ANd}}c}{{A`{ANdn}}}B@`}{{B@`{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{f{ANd}}{f{ANd}}}{{A`{{Hj{ANdANd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BCn}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{{}b}{{{f{DfBCn}}}b}{Gfb}2{cc{}}6{{}Gf}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{}d}4`{{{f{DfBD`}}Fb{f{AOn}}}{{A`{{f{DfBD`}}n}}}}{{{f{DfBD`}}}{{f{DfBD`}}}}{{{f{DfBD`}}{f{Bj}}}{{A`{{f{DfBD`}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}>{BD`ANd}>=<{{DdGf{N`{AOn}}B@dd}BD`}<;:=``````````````````````````{f{{f{AM`}}}}{{{f{BDb}}}{{f{Bj}}}}777666`{{nBDb}n}{nn}7{{{f{BDb}}}f}88777{Gfb}00`{{{f{BDd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BDb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{n}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{cBDb{{BAn{{Ed{Bj}}}}}}1{BDfn}{BDhn}{BDjn}{BDln}{BDnn}6{BE`n}{BEbn}{{}{{Gj{{f{Bj}}BDd}{{Ad{b}}}}}}{{}Gf}00{{}c{}}00{cnAM`}{{{f{Bj}}}BDb}````{{{Gj{{f{Bj}}BDd}{{Ad{b}}}}}b}{cnBEd}{fEl}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{H`BCj}}}}0{fAAn}00999{{{f{n}}c}n{{ABd{{f{Bj}}}{{Ad{El}}}}}}``````````````````{{fh}b}00{{{f{DfAB`}}{Gn{Fj}}{f{{BEf{En}}}}}{{A`{bn}}}}{{{f{DfAB`}}{Gn{Ab}}{f{{BEf{En}}}}}{{A`{bn}}}}{{{f{AB`}}{f{E`}}}{{Gn{Fj}}}}0{{{f{AB`}}{f{{l{Bl}}}}}{{A`{AB`n}}}}{{Gf{Gn{Fj}}}AB`}{{{f{AB`}}{f{{Bb{Dd}}}}}{{A`{AB`n}}}}0{{{f{AB`}}{f{{Bb{Dd}}}}{f{{BEf{En}}}}d}{{A`{AB`n}}}}{{{f{AB`}}HfGf}AB`}{{{f{AB`}}}AB`}{{{f{DfAB`}}}{{f{DfAB`}}}}0{{{f{DfAB`}}{BEh{{Cn{Cl}}}}}{{A`{bn}}}}{{{f{DfAB`}}{f{Bj}}e}{{A`{{f{DfAB`}}n}}}BEj{{ABd{{f{Fj}}}{{Ad{c}}}}}}{{{f{DfAB`}}Gfe}{{A`{{f{DfAB`}}n}}}BEj{{ABd{{f{Fj}}}{{Ad{c}}}}}}33{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AB`}}}{{`{{D`{}{{Cj{Gf}}}}}}}}7{{{f{DfAB`}}}b}{{{f{BEl}}}BEl}{{{f{BEn}}}BEn}:{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AB`}}{f{Bj}}}{{A`{{f{Fj}}n}}}}{{{f{DfAB`}}c}b{{D`{}{{Cj{Fj}}}}}}{{{f{AB`}}e}{{A`{{Gn{{f{Fj}}}}n}}}{{If{Bj}}}{{Id{}{{Cj{c}}}}}}{{}BEn}{{}AB`}{Gf{{f{c}}}{}}0000{Gf{{f{Dfc}}}{}}0000{c{{A`{BEn}}}ADn}{c{{A`{AB`}}}ADn}{Gfb}000{{{f{AB`}}{f{Bj}}}{{A`{AB`n}}}}1{{{f{DfAB`}}{f{Bj}}}{{A`{Fjn}}}}{{{f{AB`}}e}AB`{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{f{{BF`{DdA@n}}}}}AB`}{{{f{AB`}}{Ch{{f{{Bb{c}}}}}}}{{A`{AB`n}}}{}}{{{f{AB`}}}{{Gn{En}}}};{{{f{{BEf{BBd}}}}}AB`}{{{f{{BEf{En}}}}}AB`}{{{f{BEn}}{f{BEn}}}d}{{{f{AB`}}{f{AB`}}}d}00{{f{f{c}}}d{}}00{{{f{AB`}}}Gf}`{{{f{AB`}}e}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{Gn{Fj}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}}{{Gn{Oj}}}}{{{f{AB`}}AIh}{{A`{AB`n}}}}{{{f{AB`}}{f{{l{Bl}}}}}{{A`{AB`n}}}}6{{{f{BEl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BEn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{AB`}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}0000{cAB`{{Id{}{{Cj{Fj}}}}}}{cAB`{{Id{}{{Cj{Ab}}}}}}{{{f{{Bb{BFb}}}}}{{A`{AB`n}}}}{{{f{{Bb{BFb}}}}{f{{BEf{En}}}}}{{A`{AB`n}}}}{{c{f{{BEf{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{f{BFb}}}}}}}}{{{f{AB`}}Gf}{{Ch{{Gn{Jl}}}}}}{{{f{AB`}}{f{Bj}}}{{Ch{Gf}}}}{{{f{AB`}}}{{Gn{{f{Dd}}}}}}{{{f{AB`}}}{{Gn{Dd}}}}{{{f{AB`}}}{{Gn{{f{Bj}}}}}}{{{f{AB`}}}{{f{{Bb{Fj}}}}}}{{{f{DfAB`}}}{{f{Df{Gn{Fj}}}}}}{{{f{AB`}}Gf}{{A`{BFbn}}}}{{{f{AB`}}Gf{f{DfBFb}}}{{A`{bn}}}}{{{f{AB`}}Gf{f{DfBFb}}}b}{{{f{AB`}}}{{Ch{{A`{Enn}}}}}}`{{{f{AB`}}e}{{A`{BFdn}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}{Gn{Fj}}{f{BFf}}}{{A`{{Hj{Fj{Gn{Fj}}Cb}}n}}}}1{{{f{AB`}}{Gn{Fj}}dd}{{A`{BFdn}}}}{{{f{BEn}}{f{Dfc}}}bAE`}{{{f{AB`}}{Ch{Gf}}}AB`}{{{f{AB`}}}Gf}{{{f{AB`}}{f{{Bb{Fj}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{{Bb{Fj}}}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{{Bb{Fj}}}}}{{f{DfAB`}}}}{{{f{AB`}}{BFh{Gf}}}f}{{{f{AB`}}Gf}f}{{{f{AB`}}{Nf{Gf}}}f}{{{f{AB`}}{f{Bj}}}f}{{{f{AB`}}{BFj{Gf}}}f}{{{f{AB`}}BFl}f}{{{f{AB`}}{BFn{Gf}}}f}{{{f{AB`}}{BG`{Gf}}}f}{{}Gf}0000{{{f{DfAB`}}Gfc}{{A`{{f{DfAB`}}n}}}BEj}{{}c{}}000000{{AB`Dd}{{l{j}}}}{{{f{AB`}}}{{A`{{l{Bl}}n}}}}{{{f{AB`}}}d}1{{{f{AB`}}}{{`{Jf}}}}{{{f{AB`}}B@jd}BGb}{{{f{AB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{{f{AB`}}}BGd}{AB`BGf}{{{f{AB`}}}Gf}5{{{f{AB`}}}{{A`{{Ch{Fj}}n}}}}1{{{f{AB`}}BEl}{{A`{{Ch{Ab}}n}}}}12{{{Gn{Fj}}}{{A`{AB`n}}}}{{Gf{Gn{Fj}}}AB`}{{{Gn{Fj}}}AB`}22{{{Gn{Fj}}Gf}{{A`{AB`n}}}}0{{{f{DfBGb}}}Ch}{{{f{DfBGd}}}Ch}{{{f{AB`}}}AB`}{{{f{AB`}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AB`}}ed}{{A`{{Gn{AB`}}n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}0{{AB`e}{{A`{cn}}}{}{{E`{AB`}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}e}{{A`{cn}}}{}{{E`{{f{DfAB`}}}{{Ad{{A`{cn}}}}}}}}{{AB`gc}{{A`{en}}}{}{}{{E`{AB`c}{{Ad{{A`{en}}}}}}}}{{{f{DfAB`}}}{{Ch{Fj}}}}{{{f{DfAB`}}}b}{{AB`B@j}{{BEh{{Cn{Cl}}}}}}{{{f{DfAB`}}{f{Bj}}Dd}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{Bj}}c}{{A`{{f{DfAB`}}n}}}BGh}{{{f{DfAB`}}Gfc}{{A`{{f{DfAB`}}n}}}BEj}{{{f{DfAB`}}Ddc}{{A`{{f{DfAB`}}n}}}BGh}<{{{f{AB`}}{Gn{Fj}}{f{BGj}}}{{A`{{Hj{Fj{Gn{Fj}}Cb}}n}}}}`{{{f{AB`}}{f{Ab}}dd{Ch{Kf}}}{{A`{AB`n}}}}0{{{f{AB`}}Gfdd{Ch{Kf}}}{{A`{AB`n}}}}{{{f{AB`}}}{{BEf{En}}}}{{{f{AB`}}{f{AB`}}}{{A`{bn}}}}{{{f{AB`}}e}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}Gf}{{Ch{{f{Fj}}}}}}{{{f{AB`}}c}{{A`{AB`n}}}{{BGl{Gf}}}}{{{f{AB`}}c}{{A`{{Gn{Fj}}n}}}{{BGn{Dd}}}}3{{{f{AB`}}e{f{{N`{{BEf{En}}}}}}}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{AB`}}e{f{{BEf{En}}}}}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BEn}}c}A`A@f}{{{f{AB`}}c}A`A@f}{{{f{DfAB`}}e}{{A`{bn}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{DfAB`}}Gf}b}{{{f{AB`}}}{{Hj{GfGf}}}}{{{f{AB`}}Hf}AB`}{{{f{AB`}}}d}{{{f{DfAB`}}}b}{{{f{AB`}}}Gf}{{{f{BGb}}}{{Hj{Gf{Ch{Gf}}}}}}{{{f{BGd}}}{{Hj{Gf{Ch{Gf}}}}}}{{{f{AB`}}HfGf}AB`}00{{{f{AB`}}cFl}{{A`{AB`n}}}{{BGn{Dd}}}}{{{f{DfAB`}}cFl}{{A`{{f{DfAB`}}n}}}{{BGn{Dd}}}}{{{f{AB`}}Hf}{{Hj{AB`AB`}}}}0{{{f{DfAB`}}}{{`{{D`{}{{Cj{AB`}}}}}}}}{{AB`Gfd}{{Gn{AB`}}}}{{{f{AB`}}BEl}{{A`{{Ch{Ab}}n}}}}{{{f{AB`}}{Ch{Gf}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}}{{A`{AB`n}}}}{{{f{AB`}}{f{{Bb{A@j}}}}Mb}AB`}{AB`{{Gn{Fj}}}}{{{f{AB`}}{f{{Bb{A@j}}}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}}AB`}{{{f{AB`}}{f{{l{Ff}}}}d}AB`}{{{f{AB`}}}{{f{AB`}}}}{{{f{AB`}}BH`}{{A`{{AAh{AAb{AAf{{AAd{Gf}}}}}}n}}}}{fc{}}00{fEl}{{{f{DfAB`}}{Ch{{f{Bj}}}}{Ch{{AAl{El{Gn{El}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{Ch{{f{Bj}}}}{Ch{{AAl{Dd{Gn{Dd}}}}}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{Bj}}e}{{A`{{f{DfAB`}}n}}}BEj{{ABd{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}Gfe}{{A`{{f{DfAB`}}n}}}BEj{{ABd{{f{Fj}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAB`}}c}{{A`{bn}}}{{Id{}{{Cj{{A`{{BEh{{Cn{Cl}}}}n}}}}}}}}{{{f{DfAB`}}c}{{A`{bn}}}{{Id{}{{Cj{{BEh{{Cn{Cl}}}}}}}}}}{c{{A`{e}}}{}{}}0000{{{Hj{{BEh{{Cn{Cl}}}}{f{{BEf{BBd}}}}}}}{{A`{AB`n}}}}{BHb{{A`{AB`n}}}}{{c{f{{BEf{En}}}}}{{A`{AB`n}}}{{D`{}{{Cj{{A`{{f{BFb}}n}}}}}}}}{{{f{AB`}}{f{Bj}}}{{A`{Gfn}}}}{{}{{A`{c}}}{}}0000{f{{A`{H`BCj}}}}{fAAn}0000{{{f{AB`}}{Ch{{f{{Bb{El}}}}}}BEn{Ch{{Hj{HfGf}}}}}{{A`{AB`n}}}}{{{f{AB`}}d{Ch{{Gn{Dd}}}}BEn{Ch{{Hj{HfGf}}}}}{{A`{AB`n}}}}1{{{f{AB`}}c}{{A`{AB`n}}}{{BGn{Dd}}}}{{{f{AB`}}c{f{Bj}}BHd}{{A`{AB`n}}}{{BGn{Dd}}}}0{{{f{AB`}}{f{AB`}}}{{A`{AB`n}}}}{{{f{DfAB`}}{f{AB`}}}{{A`{{f{DfAB`}}n}}}}{{{f{DfAB`}}{f{AB`}}}b}{{}c{}}0000{{{f{AB`}}}Gf}{{{f{DfAB`}}c}{{A`{{f{DfAB`}}n}}}BEj}{{{f{DfAB`}}c{f{{BEf{En}}}}}{{A`{{f{DfAB`}}n}}}BEj}{{{f{DfAB`}}Fj}{{f{DfAB`}}}}{{{f{AB`}}Dd{Ch{Fb}}}{{A`{AB`n}}}}{{{f{DfAB`}}Dd{Ch{Fb}}}{{f{DfAB`}}}}``````{{fh}b}0{{FjFj}}{{{f{Fj}}c}{}{BdMh}}{{Fjc}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}{f{Cb}}}Fj}0000000{{{f{Fj}}{f{Cb}}AjA@`}Fj}{{{f{Fj}}{f{Cb}}B`}Fj}220{{{f{Fj}}}{{A`{Mjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}{f{Fj}}ceg}Fj{{E`{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}{{E`{{f{Mj}}{f{Ab}}}{{Ad{Ab}}}}}{{E`{{f{Ab}}{f{Mj}}}{{Ad{Ab}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{E`{{f{Ab}}{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}c}Fj{{E`{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{Fj}}}{{A`{Fbn}}}}{{{f{Fj}}Fd}{{l{Ff}}}}{{{f{Fj}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Fj}}}{{l{Ah}}}}{{{f{BHf}}}{{f{Ab}}}}{{{f{Fj}}}{{f{Ab}}}}{{{f{Fj}}}{{Ch{{f{BHh}}}}}}{{{f{Fj}}}{{Ch{{f{BHf}}}}}}{{{f{Fj}}}{{Ch{{f{Ab}}}}}}{{{f{BHf}}}Ab}{{{f{Fj}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Fj}}}{{Ch{BHj}}}}{{FjFj}}{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}120201{{{f{Fj}}}{{A`{{f{{l{Bl}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{BHf}}{f{En}}}{{A`{BHfn}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}10{{{f{BHf}}{f{En}}Gb}{{A`{BHfn}}}}{{{f{Fj}}{f{En}}Gb}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{ANd}}n}}}}{{{f{Fj}}}Fj}{{{f{BHf}}}BHf}1{{f{f{Dfc}}}b{}}0{fb}0{{{f{Fj}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Fj}{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0{c{{A`{Fj}}}ADn}{{FjFj}}{{{f{Fj}}c}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{BdMh}}{{{f{Fj}}{f{Fj}}}{{A`{Fjn}}}}{Gfb}0?{{{f{Fj}}}Fj}{{{f{BHf}}}{{f{En}}}}{{{f{Fj}}}{{f{En}}}}{{{f{Fj}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Fj}}{f{Fj}}}d}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bl}}n}}}}011{{{f{Fj}}}{{A`{Fjn}}}}{{{f{DfFj}}{f{Fj}}}{{A`{{f{DfFj}}n}}}}{{{f{Fj}}JlGf}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Fj}}}{{Ed{Oj}}}}{{{f{Fj}}AIh}{{A`{Fjn}}}}{{{f{Fj}}{f{{l{Bl}}}}}{{A`{Fjn}}}}{{{f{BHf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Fj}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{AbFj}1{BHfFj}{BHhFj}{{AbGf}BHf}{{DdGf{f{En}}}Fj}{{{f{Fj}}GfGf}Fj}{{{f{Fj}}Gf}{{A`{Jln}}}}{{{f{Fj}}}Jn}{{{f{Fj}}}{{Ch{{Cn{G`}}}}}}{{{f{Fj}}Gf}{{Ch{{f{K`}}}}}}{{{f{Fj}}Gf}Jl}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bl}}n}}}}0{{{f{BHf}}}d}{{{f{Fj}}}d}{{{f{Fj}}{Ch{Gf}}}Fj}{{{f{Fj}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{l{Ah}}n}}}}{{}Gf}0{{}c{}}0{BEjFj}{BHfFj}{FjFj}{FjAB`}{{{f{DfFj}}}{{f{DfAb}}}}{BHfBHf}{{{f{BHf}}}d}{{{f{Fj}}}d}{{{f{Fj}}}{{A`{{l{Bl}}n}}}}000{{{f{Fj}}}{{l{Bl}}}}0{{{f{Fj}}}Mb}{{{f{BHf}}}{{Ch{{f{Ab}}}}}}{{{f{BHf}}}Gf}{{{f{Fj}}}Gf}{{{f{Fj}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Fj}}{f{Fj}}}{{A`{{l{Bl}}n}}}}0{{{f{DfBHf}}c}b{{E`{Mj}{{Ad{Mj}}}}}}{{{f{Fj}}c}{{l{Bl}}}{{E`{{f{Ab}}}{{Ad{{l{Bl}}}}}}}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}Mj}11{{FjFj}}{{{f{Fj}}{f{Fj}}}}{{Fjc}{}{BdMh}}{{{f{Fj}}c}{}{BdMh}}:{{{f{Fj}}}{{A`{Gfn}}}}{{{f{BHf}}}{{f{Dd}}}}{{{f{Fj}}}{{f{Dd}}}}{{DdMjGf}BHf}{{Ddc}Fj{}}{{DdEn}BHf}{{Dd{f{En}}}Fj}{{{f{Fj}}GfGf}Fj}{{DdMjGf}Fj}0{{{f{Fj}}{f{Fj}}}{{A`{{l{Bl}}n}}}}0{{{f{Fj}}}Gf}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}}{{Cn{Jf}}}}1{{{f{Fj}}AjA@`}{{A`{Mjn}}}}{{{f{Fj}}}Fj}?{{Fjc}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{FjFj}}{{{f{DfBHf}}Dd}{{f{DfBHf}}}}{{{f{DfFj}}Dd}b}{{{f{Fj}}{f{{Bb{BA`}}}}}{{A`{Fjn}}}}0{{{f{BHf}}Gf}BHf}7{{{f{Fj}}Ajdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{Fj}}Gfdd{Ch{Kf}}}{{A`{Fjn}}}}{{{f{BHf}}}{{f{Mj}}}}{{{f{Fj}}c}A`A@f}{{{f{DfFj}}Mb}b}{{{f{Fj}}Hf}Fj}{{{f{DfFj}}}b}{{{f{Fj}}{Ch{Kf}}}Fj}{{{f{Fj}}HfGf}Fj}{{{f{Fj}}Fd}{{A`{Fjn}}}}0{{{f{Fj}}Hf}{{Hj{FjFj}}}}{{{f{Fj}}B`}{{A`{Mjn}}}}{{{f{Fj}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{BHf}}{f{En}}}{{A`{BHfn}}}}{{{f{Fj}}{f{En}}}{{A`{Fjn}}}}{{{f{Fj}}}{{A`{{f{{l{j}}}}n}}}}{{{f{Fj}}c}{}{BdMh}}{{FjFj}}{{Fjc}{}{BdMh}}{{{f{Fj}}{f{Fj}}}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{Ch{Gf}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bb{A@j}}}}Mb}Fj}{BHfAb}{FjAb}{{{f{Fj}}{f{{Bb{A@j}}}}}Fj}{{{f{Fj}}{f{{Bb{Fb}}}}}{{A`{Fjn}}}}{{{f{Fj}}{f{{Bb{Fb}}}}}Fj}{{{f{Fj}}{f{{l{Ff}}}}}Fj}{fc{}}0{{{f{Fj}}}Fj}{{{f{BHf}}}Ab}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}{f{Fj}}ceg}{{A`{Fjn}}}{{E`{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{E`{{f{Mj}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}{{E`{{f{Ab}}{f{Mj}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}{f{Fj}}c}{{A`{Fjn}}}{{E`{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}c}{{A`{Fjn}}}{{E`{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{C`}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Bl}}}}}}}}{{{f{Fj}}}{{Ch{{f{ANd}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ej}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Eh}}}}}}}}{c{{A`{e}}}{}{}}0{{{f{Fj}}}{{Ch{{f{{l{Od}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}0{{{f{Fj}}}{{Ch{{f{{l{Ah}}}}}}}}{{{f{Fj}}c}{{A`{{l{Bl}}n}}}{{E`{{f{Ab}}}{{Ad{{A`{{l{Bl}}n}}}}}}}}{{FjFj}{{A`{Fjn}}}}{{{f{Fj}}}{{Ch{{f{{l{Bh}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{j}}}}}}}}2{{{f{Fj}}}{{Ch{{f{{l{Nj}}}}}}}}7{{{f{Fj}}}{{Ch{{f{{l{Nn}}}}}}}}{{{f{Fj}}}{{Ch{{f{{l{Nh}}}}}}}}{fAAn}0{{{f{Fj}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Fj}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Fj}}}{{A`{Fjn}}}}0{AbBHf}{{{f{Fj}}B`}{{A`{Mjn}}}}{{{f{Fj}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{Fj}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FjDd}Fj}{{{f{Fj}}c}Fj{BdMh}}{{{f{Fj}}}{{A`{Mjn}}}}{{{f{Fj}}{f{{l{Bl}}}}{f{Fj}}}{{A`{Fjn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BHl}}}BHl}{{f{f{Dfc}}}b{}}{fb}{{}BHl}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{c{{A`{BHl}}}ADn}{Gfb}{{{f{BHl}}{f{BHl}}}d}{{f{f{c}}}d{}}00{{{f{BHl}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{BHl}}{f{Dfc}}}bAE`}`{{}Gf}{{}c{}}`{{{f{BHl}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}``5````````````````````````````````{{fh}b}000{{{f{BFd}}}{{A`{AB`n}}}}`{{{f{BHn}}}{{f{{Bb{{BI`{Fb}}}}}}}}{{{f{BFd}}c}{{A`{AB`n}}}{{Af{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{{f{Cb}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BHn}}}BHn}{{{f{Cb}}}Cb}{{{f{BFd}}}BFd}{{{f{BIb}}}BIb}{{f{f{Dfc}}}b{}}000{fb}000;{{}BHn}{{}Cb}{Gf{{f{c}}}{}}00{{{f{BId}}}f}11111{Gf{{f{Dfc}}}{}}0000000`{{BIfc}{}BIh}{Gfb}0000{{{f{DfBHn}}}b}111{{{f{BHn}}{f{BHn}}}d}{{{f{Cb}}{f{Cb}}}d}{{f{f{c}}}d{}}00000`{{{f{BIj}}}Fb}{{{f{BHn}}}{{f{{Bb{Fb}}}}}}{{{f{BFd}}}{{A`{AB`n}}}}{{{f{DfBHn}}}{{f{Df{Gn{Fb}}}}}}{{{f{BHn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Cb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BIb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Bj}}BIb}Dd}{cc{}}000{{{Gn{{Gn{{Hj{Fb{BI`{Fb}}}}}}}}}BHn}{{{Gn{{Hj{Fb{BI`{Fb}}}}}}}BHn}2{BHnCb}333{BIlBIb}{cBHn{{Id{}{{Cj{{Hj{Fb{BI`{Fb}}}}}}}}}}{cBHn{{Jd{}{{Cj{{Hj{Fb{BI`{Fb}}}}}}}}}}{{{f{Cb}}Gf}BIj}{{{f{BFd}}}{{f{Cb}}}}{{{f{DfBFd}}}{{f{DfCb}}}}{{{f{Cb}}}{{l{Ff}}}}{{{f{BIn}}dd}{{A`{Cbn}}}}{{{f{BFd}}}{{A`{AB`n}}}}{{{f{DfCb}}}{{f{DfBHn}}}}{{}Gf}0000000{{}c{}}0000000{CbBHn}1{{{f{BHn}}}}{BHn}310{{{f{BIj}}}d}{{{f{Cb}}}d}{{{f{BHn}}}d}{{{f{BHn}}}{{BJb{{BJ`{{Gh{Fb}}}}{Gh{{BI`{Fb}}}}}}}}{{{f{Cb}}}BJd}{{{f{BFd}}}{{Gn{Fj}}}}{{{f{BFd}}{Ch{{Hj{HfGf}}}}}{{Gn{Fj}}}}={{{f{BIj}}}Gf}{{{f{Cb}}}Gf}?????{{{Gn{Fb}}{Gn{{BI`{Fb}}}}d}BHn}{{{f{AB`}}{Gn{Fj}}Cb{Ch{{Gn{Dd}}}}}BFd}{{{f{DfBJd}}}Ch}{{{f{DfBJd}}Gf}Ch}{{{f{BFd}}c}{{A`{AB`n}}}{{E`{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{f}{{{f{Cb}}}BIf}{{{f{BFd}}AjA@`}{{A`{AB`n}}}}{{BFde}BFd{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{Cb}}HfGf}BId}{{{f{DfBHn}}}b}{{{f{DfCb}}}b}{{{f{BFd}}B`}{{A`{AB`n}}}}{{{f{BFd}}}{{A`{AB`n}}}}{Cb{{Gn{Fb}}}}0{BFdCb}{{{f{DfBFd}}}Cb}{fc{}}000{fEl}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{H`BCj}}}}{fAAn}0000000{CbCb}{{{f{Cb}}}{{f{BHn}}}}{{{f{Cb}}}{{f{{Gn{{AAd{Fb}}}}}}}}={{}c{}}0000000`````{{{f{BHn}}c}Ab{{E`{{Hj{Fb{f{{BI`{Fb}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BHn}}c}Ab{{E`{{Hj{Fb{f{{BI`{Fb}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bb{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bb{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{}}}}InJ`}}{{{f{{Bb{c}}}}e{Ch{BJf}}}{{AMd{c}}}{BJhBJj}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bb{c}}}}{f{Ih}}e{Ch{BJf}}}{{AMd{c}}}{BJhBJj}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAd{Fb}}}}}}{f{{Bb{{Cn{Cl}}}}}}}d}{{{f{BJl}}{f{Cb}}}Ab}{{BJnBJn}BJn}0`{{{f{BK`}}{f{AB`}}{f{Cb}}}{{A`{Abn}}}}{{{f{BK`}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBKb}}Jl}{{Ch{b}}}}{{{f{DfBKd}}{f{Jl}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BKb}}}BKb}{{{f{BKd}}}BKd}{{{f{BFb}}}BFb}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bb{c}}}}}En{{Il{En}}}}{{}BFb}{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00{Gfb}00{{{f{BFb}}{f{BFb}}}d}{{f{f{c}}}d{}}00{{{f{BFb}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{Hj{{f{En}}Gf}}}BKb}{{{Hj{{f{En}}Gf}}}BKd}22{{gGf}{{BEf{En}}}{{BAn{Dd}}}{{BAn{En}}}{{D`{}{{Cj{{Gn{{Hj{ce}}}}}}}}}}{{}Gf}00{{}c{}}00{BKbAb}{BKdAb}{{{f{En}}Gf}BKb}{{{f{En}}Gf}BKd}{{{Gn{Jl}}}BFb}{{{f{DfBKb}}Gf}Ab}{{{f{DfBKd}}Gf}Ab}{{{f{{Bb{BFb}}}}{Ch{Gf}}}{{A`{{BEf{En}}n}}}}0{{{f{{Bb{BFb}}}}{Ch{Gf}}}{{A`{{Gn{En}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00==={{{f{{Bb{AB`}}}}}{{A`{AB`n}}}}{{{f{{Bb{AB`}}}}d}{{A`{AB`n}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AB`{f{{Bb{Dd}}}}{f{{Bb{Dd}}}}{Ch{Dd}}{f{AB`}}}AB`}{{BGfc}{{A`{AB`n}}}{{E`{BKf{f{Df{BKj{BKh}}}}{f{Df{BKj{BKl}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BKn}}{f{{Bb{Fb}}}}ddd}AB`}`{{{f{BKn}}{f{{Bb{Fb}}}}{Ch{{Hj{HfGf}}}}}AB`}{{{f{BKn}}{f{AB`}}{f{Ab}}{f{Ab}}BL`}{{A`{AB`n}}}}`{{{f{Bj}}{f{Bj}}}Dd}{{BLb{N`{{Bb{Dd}}}}}BCd}{{{f{BKn}}{f{Ab}}{f{Ab}}{Ch{{Hj{HfGf}}}}dd}{{A`{AB`n}}}}{{{f{BHb}}Gf}{{Hj{BHbBHb}}}}{{{f{AHh}}}Aj}{{{f{BLd}}}Aj}{{{f{BLf}}{f{{Bb{A@j}}}}Mb}AB`}{{{f{BLf}}{f{{Bb{A@j}}}}}AB`}{{{f{BLh}}{Ch{{Gn{{f{Bj}}}}}}{Ch{{f{Bj}}}}d}{{A`{AB`n}}}}{{BGfd}BGf}{{{BLj{c}}{Ch{{N`{BLl}}}}}{{BLj{c}}}BLn}{{{f{Ab}}}{{A`{Abn}}}}{BCdBCd}{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCdBCd}}{{BMbBMb}}{{{f{BHd}}Hf{Ch{{f{AN`}}}}}{{A`{Hfn}}}}0{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}1{{BMfc}BGf{{If{{Bb{BCd}}}}}}6`{{BCdc}BCd{{BAn{Dd}}}}{{}BCd}{{BCdd}BCd}{{}BMh}{c{{A`{BCdn}}}{{If{{Bb{BCd}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@hBMj}`{{BMld}BMl}`{{{f{BMn}}}d}00`{{BCdc}BCd{{BAn{BCd}}}}{{{f{BLd}}}{{A`{Mjn}}}}{{{N`{BMn}}BN`}{{A`{BGfn}}}}{{BGfBGfcc}BGf{{BAn{BCd}}}}97{{BCdcd}BCd{{BAn{BCd}}}}{{{f{DfACf}}}b}{{{f{DfACh}}}b}{{{f{DfACf}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACh}}{Ch{c}}}b{}}{{{f{DfACf}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}c}b{}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{c}}}}}}Eb}}{{BMfc{N`{{BEf{En}}}}}BGf{{E`{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{BCdc{BNd{{N`{BNb}}}}}BCd{{E`{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCdBCdc{BNd{{N`{BNb}}}}}BCd{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{{f{BCd}}{f{Dfc}}f}{{A`{BNfn}}}{{Af{{f{BCd}}f}{{Ad{{A`{BNfn}}}}}}}}{{{f{AHn}}{f{E`}}}AHn}{{{f{AHn}}{f{E`}}}{{l{c}}}Dn}{{BCdc{f{{Bb{BCd}}}}{BNd{{N`{BNb}}}}}BCd{{E`{{f{Df{Bb{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCdBNh{f{{Bb{BCd}}}}dd}BCd}{{ce{BNd{{N`{BNb}}}}d}BCd{{E`{{f{Df{Bb{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bb{BCd}}}}}}{{{f{{BEf{BBd}}}}{f{{Bb{Gf}}}}}{{BEf{BBd}}}}{{{f{{AHl{}{{AHj{c}}}}}}i{f{Df{Bb{g}}}}}b{}{}{}{{E`{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHl{}{{AHj{c}}}}}}g}{{AHl{}{{AHj{c}}}}}{}{}{{E`{e}{{Ad{c}}}}Eb}}{{{f{AI`}}}Fb}{BCdBCd}{{{f{BLd}}}{{A`{Fbn}}}}{{BCdBCdHfEn}BCd}{BHb{{N`{Cl}}}}{{{f{BNj}}}{{Ch{Gf}}}}{BNlBCd}{BNnBCd}62106{{{f{AIb}}Fd}{{l{Ff}}}}{{BCdFd}BCd}{{{f{BLd}}Fd}{{l{Ff}}}}{{cFl}BCd{{If{{Bb{BCd}}}}}}{{{f{AIb}}{f{{Bb{Fj}}}}{f{Fl}}}{{A`{{l{Ff}}n}}}}{{{f{AId}}}{{A`{{l{Ff}}n}}}}<{{{f{BLd}}}{{A`{{l{Ff}}n}}}}{cBCd{{BAn{BCd}}}}{{{f{BO`}}}{{f{{Bb{Oj}}}}}}``{BCdBNl}{eANh{}{{Id{}{{Cj{c}}}}}}{cBHb{{Id{}{{Cj{{Ch{b}}}}}}}}{cBHb{{Id{}{{Cj{b}}}}}}2{{AGhe}ANj{}{{Id{}{{Cj{c}}}}}}0{{AGhc}BHb{{Id{}{{Cj{b}}}}}}{{AGhc}BHb{{Id{}{{Cj{{Ch{b}}}}}}}}`{{{f{Df{BOb{c}}}}}{{A`{{BEf{BBd}}n}}}BOd}{{{f{BMn}}}{{f{AGj}}}}{{{f{BLd}}}{{f{AGj}}}}{{{f{BOf}}}{{f{AGj}}}}{{{f{BHb}}}{{f{AGj}}}}{{{f{DfBLd}}}{{f{DfAGj}}}}{{{f{DfBHb}}}{{f{DfAGj}}}}{f{{BOh{c}}}{}}{{{f{Mj}}}Jl}{{{f{BOj}}}{{f{{l{An}}}}}}{{{f{BOl}}{Ch{{f{Bj}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{f{{BOn{c}}}{}}{f{{f{AM`}}}}{{{f{{N`{c}}}}}C@`{C@bA@h}}{{{f{C@d}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@hBMj}{{{f{{N`{c}}}}}NdC@f}{{{f{C@h}}}{{f{BCd}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@hBMj}{{{f{AO`}}}{{f{En}}}}{{{f{C@j}}}{{f{Ab}}}}{{{f{DfBLd}}}{{A`{Gfn}}}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{Ch{{f{{Bb{c}}}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{C@l}}}{{f{{l{Bh}}}}}}{{{Gn{BCd}}}BCd}{{{f{BOl}}{Ch{{f{Bj}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{C@n{c}}e}}}{{N`{ce}}}{}BMj}{{{N`{{Bb{{C@n{c}}}}e}}}{{N`{{Bb{c}}e}}}{}BMj}{{{f{Bj}}}BCd}{{BCd{Ch{Fb}}}BCd}{{{f{CA`}}}{{A`{{l{Bh}}n}}}}{{{f{CA`}}}{{l{Bh}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AN`}}}{{L`{LlLb}}}}`{{{BLj{{Cn{BLn}}}}{Ch{{N`{{BEf{En}}}}}}}{{A`{CAbn}}}}{{{CAd{c}}{f{{BEf{En}}}}}{{A`{{CAf{c}}n}}}CAh}{{{CAj{c}}{f{{BEf{En}}}}}{{A`{{CAl{c}}n}}}CAh}{{{CAn{c}}Gf}{{A`{CB`n}}}BLn}{{CBbGf}{{A`{CB`n}}}}{{{CBd{c}}{f{{BEf{En}}}}}{{A`{{CBf{c}}n}}}CAh}{{{f{Df{BLj{c}}}}}{{A`{CBhn}}}BLn}`{BCdCBj}{{BCdCBlBCd}BCd}{{BMbBMb}}{{BMhBMh}BMh}{{{f{DfBMh}}BMh}b}10{{{f{BMh}}}Fb}0321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@hBMj}1111111111111111111111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BGfFbcFl}BGf{{If{{Bb{BCd}}}}}}{{{f{{N`{e}}}}}CBnCC`{{CCb{c}}A@h}}{BHb{{Cn{Cl}}}}{{{f{BLd}}}{{Ch{{Cn{G`}}}}}}```{BGfBGf}```{{{f{CCd}}{f{Dd}}}{{A`{Ddn}}}}{{{f{Df}}{CCf{c}}}{}{}}{{{f{{N`{e}}}}c}{}{}{{CCh{c}}A@h}}{{CCj{Gn{BCd}}}{{A`{BCdn}}}}{{{f{ANd}}{f{ANd}}c}{{A`{ANdn}}}B@`}{{{f{BOf}}{f{Df{Bb{Fj}}}}}{{A`{{Ch{Fj}}n}}}}{{{f{CCl}}FjFj}{{A`{Fjn}}}}{{CCj{Gn{BCd}}}BCd}{{{f{CCn}}}b}{{BCdEn}BCd}{{{f{BLd}}{f{En}}Gb}{{A`{Abn}}}}{{BGf{CD`{{f{Bj}}EnA@n}}d}BGf}{{{f{AIf}}{f{En}}}{{A`{Abn}}}}3{{{f{B@b}}{f{En}}}{{A`{Abn}}}}{{BGfEnd}BGf}2{{{f{AIf}}{f{En}}Gb}{{A`{Abn}}}}{{{f{B@b}}{f{En}}Gb}{{A`{Abn}}}}{{BCdEnGb}BCd}`{BCdCDb}{{{f{{N`{c}}}}}{{Ch{{f{AM`}}}}}{AM`A@h}}{BCdBCd}{{{f{CDd}}}{{A`{Abn}}}}1`{{{f{CDf}}}{{A`{{l{Kl}}n}}}}{{{f{BHb}}Gf}d}{{{f{CDh}}{f{Ab}}}{{A`{Abn}}}}{{{f{BLd}}{f{Ab}}}{{A`{Abn}}}}{{{f{CDh}}c}{{A`{Abn}}}Bf}{{{f{BLd}}}{{Gl{{Gh{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gf}}}}}}}}``{{{f{BLd}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBLd}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BCdBCdBCd}BCd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BCdBCd}BCd}10{{{f{CCn}}}CCn}{{{f{BGf}}}BGf}{{{f{BMf}}}BMf}{{{f{BN`}}}BN`}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{BFf}}}BFf}{{{f{BGj}}}BGj}{{{f{CEd}}}CEd}{{{f{BHd}}}BHd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{ABb}}}ABb}{{{f{A@j}}}A@j}{{{f{BL`}}}BL`}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{C@h}}}C@h}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{BCd}}}BCd}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{{CIl{c}}}}}{{CIl{c}}}{JhJh}}{{{f{CIn}}}CIn}{{{f{CJ`}}}CJ`}{{{f{CBl}}}CBl}{{{f{CJb}}}CJb}{{{f{CJd}}}CJd}{{{f{{BNd{c}}}}}{{BNd{c}}}Jh}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{CJj}}}CJj}{{{f{CJl}}}CJl}{{{f{CJn}}}CJn}{{{f{CK`}}}CK`}{{{f{CKb}}}CKb}{{{f{{N`{ce}}}}}{{N`{ce}}}A@h{BMjJh}}{{{f{CKd}}}CKd}{{{f{CKf}}}CKf}{{{f{BNh}}}BNh}{{{f{CKh}}}CKh}{{{f{CKj}}}CKj}{{{f{CKl}}}CKl}{{{f{CKn}}}CKn}{{{f{CL`}}}CL`}{{{f{CLb}}}CLb}{{{f{CLd}}}CLd}{{{f{CLf}}}CLf}{{{f{CLh}}}CLh}{{{f{BMb}}}BMb}{{{f{CCj}}}CCj}{{{f{BMh}}}BMh}{{{f{A@b}}}A@b}{{{f{BHb}}}BHb}{{{f{BH`}}}BH`}{{{f{CLj}}}CLj}{{{f{BBd}}}BBd}{{{f{CLl}}}CLl}{{{f{Mj}}}Mj}{{{f{CLn}}}CLn}{{{f{CM`}}}CM`}{{{f{A@`}}}A@`}{{{f{BJf}}}BJf}{{{f{CMb}}}CMb}{{{f{CMd}}}CMd}{{{f{CMf}}}CMf}{{{f{BLd}}}{{N`{BLd}}}}{{f{f{Dfc}}}b{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{c}}}}{f{CMh}}}CMh{CMjA@h}}{fb}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CMl}}}{{Ch{{f{CMn}}}}}}{{{f{CDj}}}{{Ch{{f{CMn}}}}}}{{{f{CDn}}}{{Ch{{f{CMn}}}}}}``{{{f{BHd}}{f{BHd}}}BAd}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}BAd{CN`A@h}BMj}{{{f{{Bb{BCd}}}}}BCd}{{BMlCEn}BMl}{{{f{CEn}}{f{CF`}}}d}`{{{f{{Bb{Fj}}}}}{{A`{Fjn}}}}{cBCd{{BAn{Dd}}}}{BGf{{A`{AB`n}}}}{c{{A`{{Gn{AB`}}n}}}{{Jd{}{{Cj{BGf}}}}}}{BAfe{}{{ANh{c}}ALl}}0{{BAfAGh}e{}{{ANj{c}}ALl}}0{{AEbDd}{{l{c}}}Dn}{{AEd{f{{l{c}}}}}{{l{c}}}Dn}10{{AEdDdEn}{{l{c}}}Dn}0{BGf{{A`{CCnn}}}}{{{f{DfBGf}}}{{A`{{N`{{BEf{En}}}}n}}}}{eBCd{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{CJj}}Gf}CNb}``{{{f{BLh}}{Gn{{f{Bj}}}}{Ch{{f{Bj}}}}d}{{A`{AB`n}}}}{{{f{{Bb{c}}}}{f{{BEf{BBd}}}}}{{A`{{Gn{Gf}}n}}}{{If{Bj}}}}`{{f{f{c}}}BAd{}}0{{CGl{f{{BEf{En}}}}}{{A`{CNdn}}}}{BMhBMh}```{{{f{CM`}}}{{A`{{N`{{BEf{En}}}}n}}}}{{cCLn}{{A`{BGfn}}}{{If{{Bb{BGf}}}}}}{{{f{CA`}}{f{{l{Bh}}}}}{{l{Bh}}}}`{{{Gn{BCd}}}{{A`{BCdn}}}}{{ed}{{A`{BCdn}}}{{BAn{BCd}}Jh}{{If{{Bb{c}}}}}}{{{f{CMl}}{Gn{BGf}}}{{A`{BGfn}}}}{{{f{CDj}}{Gn{BGf}}}{{A`{BGfn}}}}55{e{{A`{BCdn}}}{{BAn{BCd}}Jh}{{If{{Bb{c}}}}}}{{c{f{Bj}}d}BCd{{If{{Bb{BCd}}}}}}{{BNlc}BCd{{BAn{BCd}}}}{{{f{CNf}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{CA`}}{f{Bj}}d}{{A`{{l{Bl}}n}}}}{{BNnc}BCd{{BAn{BCd}}}}{{{f{BMh}}BMh}d}{{{f{CNf}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{CA`}}{f{{l{Bh}}}}dd}{{A`{{l{Bl}}n}}}}{{{f{CA`}}{f{Bj}}}{{A`{{l{Bl}}n}}}}{{{f{Cl}}{f{AGh}}}{{Cn{Cl}}}}{{{f{Ab}}Gf}{{A`{{l{Ff}}n}}}}{{{f{{N`{CNh}}}}{f{CNj}}{f{CNj}}}{{CNn{{Cn{CNl}}}}}}0{BGfBGf}{{{CO`{c}}}{{A`{Gfn}}}BLn}{BCdBCd}{{{f{CA`}}{f{Bj}}d}{{A`{{l{Ff}}n}}}}{{{f{CA`}}{f{{l{Bh}}}}d}{{A`{{l{Ff}}n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{ANl}}B`{Ch{B`}}{Ch{{f{CGj}}}}B`d}{{A`{Gfn}}}}{{{f{COb}}{Ch{{f{COd}}}}}{{A`{Hfn}}}}{{{f{{Bb{B`}}}}B`{Ch{B`}}{Ch{{f{CGj}}}}B`d}{{A`{Gfn}}}}3{{{AOl{Bj}}}En}{{{f{BKn}}{f{{Bb{A@j}}}}dd}AB`}{{{f{COf}}}{{CD`{GfMbA@n}}}}`{{BGfBGf{Ch{Dd}}}BGf}{{{f{COh}}{f{AB`}}{Ch{Dd}}{Ch{{Hj{HfGf}}}}}{{A`{AB`n}}}}{{{f{COh}}{f{AB`}}{Ch{{Hj{HfGf}}}}d}{{A`{{Hj{AB`AB`}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BCdd}BCd}{{BCdced}BCd{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bb{BCd}}}}}}212121{{ce}BCd{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bb{BCd}}}}}}32{{COjBCdGfd}BCd}{{{f{{N`{c}}}}}COl{CMjA@h}}{{{f{COb}}{Ch{{f{COd}}}}CHnd}{{A`{AB`n}}}}```{{BCdBCdBHdCEf}BCd}`{CKhBCd}`{{BCdBCdBHdCEf{Ch{Ld}}{Ch{Dd}}}BCd}0{AMnHf}00{{{f{COn}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}`{{{f{D@b}}}{{l{Lb}}}}{{{f{BHd}}}Hf}`{{{f{BHd}}}d}```{{}b}{cbBMj}{{}BGf}{{}BN`}{{}CDl}{{}CE`}{{}BFf}{{}BGj}{{}CEj}{{}D@d}{{}BL`}{{}CEn}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CFj}{{}CFn}{{}CGb}{{}CGd}{{}CGf}{{}CGh}{{}CGn}{{}CHh}{{}CHj}{{}BCd}{{}CHn}{{}CI`}{{}CIb}{{}CId}{{}CIh}{{}CIj}{{}CIn}{{}CJb}{{}{{BNd{{N`{CCl}}}}}}{{}{{BNd{{N`{D@f}}}}}}{{}{{BNd{{N`{BNb}}}}}}{{}{{N`{{Bb{c}}}}}{}}{{}{{N`{D@h}}}}{{}{{N`{Bj}}}}{{}{{N`{c}}}D@j}{{}CKh}{{}CKj}{{}CKn}{{}CL`}{{}CLb}{{}CLd}{{}CLh}{{}BMh}{{}A@b}{{}BH`}{{}BBd}{{}CLl}{{}Mj}{{}CLn}{{}CM`}{{}A@`}`{{}{{AAl{{Gn{ABb}}{Gn{A@j}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}}{{CNn{{Cn{CNl}}}}}}{{{f{{N`{CNh}}}}{CNn{{Cn{D@l}}}}}{{CNn{{Cn{D@l}}}}}}{Gf{{f{c}}}{}}0{{{f{{AMl{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BNd{c}}}}}f{}}22222222{{{f{{N`{ce}}}}}{{f{c}}}A@hBMj}333333333333333333333333333333{Gf{{f{Dfc}}}{}}0{{{f{Df{AMl{c}}}}}{{f{Df}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CM`}}}{{A`{Eln}}}}{{{f{BGf}}}{{A`{Eln}}}}0001{{{f{{N`{c}}}}}{{f{Bj}}}{AM`A@h}}{{{f{BBd}}c}{{A`{D@nn}}}{{Jf{}{{Cj{{f{DA`}}}}}}}}{c{{A`{CEb}}}ADn}{c{{A`{BFf}}}ADn}{c{{A`{BGj}}}ADn}{c{{A`{BHd}}}ADn}{c{{A`{CEf}}}ADn}{c{{A`{CEh}}}ADn}{c{{A`{CEj}}}ADn}{c{{A`{BL`}}}ADn}{c{{A`{CEn}}}ADn}{c{{A`{CF`}}}ADn}{c{{A`{CFb}}}ADn}{c{{A`{CFd}}}ADn}{c{{A`{CFf}}}ADn}{c{{A`{CFh}}}ADn}{c{{A`{CFj}}}ADn}{c{{A`{CFl}}}ADn}{c{{A`{CFn}}}ADn}{c{{A`{CG`}}}ADn}{c{{A`{CGb}}}ADn}{c{{A`{CGd}}}ADn}{c{{A`{CGf}}}ADn}{c{{A`{CGh}}}ADn}{c{{A`{CGj}}}ADn}{c{{A`{CGl}}}ADn}{c{{A`{CGn}}}ADn}{c{{A`{C@h}}}ADn}{c{{A`{CHh}}}ADn}{c{{A`{CHj}}}ADn}{c{{A`{BCd}}}ADn}{c{{A`{CHl}}}ADn}{c{{A`{CI`}}}ADn}{c{{A`{CIb}}}ADn}{c{{A`{CId}}}ADn}{c{{A`{CIf}}}ADn}{c{{A`{CIh}}}ADn}{c{{A`{CIj}}}ADn}{c{{A`{{CIl{e}}}}}ADn{DAbJh}}{c{{A`{CIn}}}ADn}{c{{A`{CJ`}}}ADn}{c{{A`{CBl}}}ADn}{c{{A`{CJb}}}ADn}{c{{A`{CJd}}}ADn}{c{{A`{{BNd{{N`{BOf}}}}}}}ADn}{c{{A`{{BNd{{N`{CCd}}}}}}}ADn}{c{{A`{{BNd{Ab}}}}}ADn}{c{{A`{{BNd{{N`{BNb}}}}}}}ADn}{c{{A`{{BNd{{N`{CM`}}}}}}}ADn}{c{{A`{CJf}}}ADn}{c{{A`{CJh}}}ADn}{c{{A`{CJl}}}ADn}{c{{A`{CJn}}}ADn}{c{{A`{CK`}}}ADn}{c{{A`{CKb}}}ADn}{c{{A`{{N`{e}}}}}ADnA@h}{c{{A`{CKd}}}ADn}{c{{A`{CKf}}}ADn}{c{{A`{BNh}}}ADn}{c{{A`{CKl}}}ADn}{c{{A`{CKn}}}ADn}{c{{A`{CL`}}}ADn}{c{{A`{CLb}}}ADn}{c{{A`{CLd}}}ADn}{c{{A`{CLf}}}ADn}{c{{A`{CLh}}}ADn}{c{{A`{BMb}}}ADn}{c{{A`{A@b}}}ADn}{c{{A`{BH`}}}ADn}{c{{A`{CLj}}}ADn}{c{{A`{BBd}}}ADn}{c{{A`{CLl}}}ADn}{c{{A`{Mj}}}ADn}{c{{A`{CLn}}}ADn}{c{{A`{CM`}}}ADn}{c{{A`{A@`}}}ADn}{c{{A`{BJf}}}ADn}{c{{A`{CMb}}}ADn}{c{{A`{CMd}}}ADn}{c{{A`{CMf}}}ADn}```{{{f{Ab}}HfDAd}{{A`{Abn}}}}{{BNnHfDAd}BCd}{{BCdHfDAd}BCd}{{BMhBMh}BMh}{{{f{CM`}}}{{A`{{`{BEd}}n}}}}``{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCdBCd}}{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}{{BCdc}BCd{{BAn{BCd}}}}{{{N`{AGjc}}}{{A`{{N`{ec}}{N`{AGjc}}}}}BMj{AGjInJ`}}{{{f{{N`{c}}}}AAn}{{Ch{b}}}{CMjA@h}}{{{N`{AGjc}}}{{N`{ec}}}BMj{AGjInJ`}}{{{f{{N`{ce}}}}}{{DAf{ce}}}A@h{JhBMj}}{Gfb}00000{{{f{DfCCn}}}b}11{{BGfe}BGf{{BAn{BMb}}}{{Id{}{{Cj{c}}}}}}222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@hBMj}3333333333333333333333333333333{{BGf{Ch{{Gn{BCd}}}}}BGf}{BCdBCd}310{{{f{BLd}}}Ab}{{{f{{N`{c}}}}CMh}b{CMjA@h}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AN`}}}{{L`{LlLb}}}}`{BCdDAh}{{{f{B@b}}}{{f{En}}}}{{{f{BLd}}}{{f{En}}}}{{{f{BHb}}}{{f{AGh}}}}{{{f{BBd}}}{{f{AGh}}}}{{{f{Mj}}}{{f{En}}}}``{{{f{En}}}BCd}{cBCd{{If{{Bb{En}}}}}}`{CKjBCd}{{}CIh}{{}BMh}{{{f{{N`{c}}}}{f{DAj}}}d{CMjA@h}}{fc{{BAl{BAj}}}}0`{{{f{CNf}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{CNf}}{f{{l{An}}}}}{{l{Bl}}}}{{BHd{f{En}}{f{Bj}}}{{A`{bn}}}}{{BHd{Ch{{f{Bj}}}}{f{Bj}}}{{A`{bn}}}}{{{f{{BEf{c}}}}{f{{BEf{c}}}}}{{A`{bn}}}{}}{{{f{DAl}}{f{Bj}}}{{A`{bn}}}}{{{f{{N`{c}}}}{f{CMh}}}b{CMjA@h}}`{{{f{CEb}}{f{CEb}}}d}{{{f{BFf}}{f{BFf}}}d}{{{f{BGj}}{f{BGj}}}d}{{{f{BHd}}{f{BHd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{ABb}}{f{ABb}}}d}{{{f{BL`}}{f{BL`}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{CHj}}{f{CHj}}}d}{{BCdc}BCd{{BAn{BCd}}}}{{{f{BCd}}{f{BCd}}}d}{{{f{CHl}}{f{CHl}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{D@n}}{f{D@n}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{{CIl{c}}}}{f{{CIl{c}}}}}d{DAnJh}}{{{f{CIn}}{f{CIn}}}d}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{{BNd{Ab}}}}{f{{BNd{Ab}}}}}d}{{{f{{BNd{{N`{c}}}}}}{f{{BNd{{N`{c}}}}}}}dA@h}{{{f{CJf}}{f{CJf}}}d}{{{f{CJh}}{f{CJh}}}d}{{{f{CJl}}{f{CJl}}}d}{{{f{CJn}}{f{CJn}}}d}{{{f{CK`}}{f{CK`}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{{N`{DB`}}}}{f{DB`}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAnA@h}BMj}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{CKd}}{f{CKd}}}d}{{{f{CKf}}{f{CKf}}}d}{{{f{BNh}}{f{BNh}}}d}{{{f{CKl}}{f{CKl}}}d}{{{f{CKn}}{f{CKn}}}d}{{{f{CL`}}{f{CL`}}}d}{{{f{CLb}}{f{CLb}}}d}{{{f{CLd}}{f{CLd}}}d}{{{f{CLf}}{f{CLf}}}d}{{{f{CLh}}{f{CLh}}}d}{{{f{BMb}}{f{BMb}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BHb}}{f{BHb}}}d}{{{f{BHb}}{f{{f{Cl}}}}}d}{{{f{BH`}}{f{BH`}}}d}{{{f{CLj}}{f{CLj}}}d}{{{f{BBd}}{f{BBd}}}d}{{{f{CLl}}{f{CLl}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{CLn}}{f{CLn}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BJf}}{f{BJf}}}d}{{{f{CMb}}{f{CMb}}}d}{{{f{CMd}}{f{CMd}}}d}{{{f{CMf}}{f{CMf}}}d}{{BCdc}BCd{{BAn{BCd}}}}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{Bj}}}El}{{DBbBCdd}BCd}{{{f{{N`{c}}}}{f{DBd}}}b{CMjA@h}}{{{f{{N`{c}}}}{f{DBd}}}d{CMjA@h}}``{{BCdc}BCd{{BGn{Dd}}}}{{BCdc}BCd{{If{{Bb{En}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDh}}}DBf{}}{{{f{{N`{c}}}}{f{CMh}}}b{CMjA@h}}{{{f{{Bb{DBh}}}}d{Ch{{f{CMn}}}}}{{A`{{N`{{Bb{DBh}}}}n}}}}{{{f{{Bb{DBh}}}}d{Ch{{f{CMn}}}}d}{{A`{{Hj{{N`{{Bb{DBh}}}}Gf}}n}}}}{{{f{{Bb{c}}}}{f{{Bb{c}}}}}d{{If{ANl}}}}{{{f{BGf}}d}{{A`{Eln}}}}{BNlBCd}{{BGfe}BGf{{BAn{BMb}}Jh}{{If{{Bb{c}}}}}}{{{f{AIl}}}{{A`{Abn}}}}{BCdBCd}{{{f{AIl}}}{{A`{{Hj{Ab{Hh{Hf}}}}n}}}}`{{{f{DfBMh}}c}b{{Id{}{{Cj{BMh}}}}}}{{BCdBCdBCd}BCd}{{{f{CA`}}{f{{l{Bh}}}}Gf}{{A`{{l{Bh}}n}}}}{A@j{{Hj{FbFb}}}}{{{f{CA`}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{CA`}}{f{{l{Bh}}}}}{{A`{{l{Ah}}n}}}}{{{f{CA`}}{f{Bj}}{f{En}}}{{A`{Abn}}}}{{{f{ACf}}}d}{{{f{CCn}}}{{Ch{{A`{AB`n}}}}}}{{BGfGf}{{A`{AB`n}}}}{{{f{CCn}}}{{A`{AB`n}}}}{{{f{ACf}}}{{f{Oj}}}}{{{f{BLd}}}{{Ed{Oj}}}}{{BLbHf}BCd}{{BLb{f{Bj}}}BCd}{{BLbe}BCd{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}{{{f{BHb}}}{{f{{Bb{BBd}}}}}}`{{BGfc}BGf{{BAn{BCd}}}}{{BCdc}BCd{{BAn{BCd}}}}`10{{BCdAIh}BCd}{{{f{AIn}}c}{{A`{AInn}}}{}}{{{f{AJ`}}{f{{l{Bl}}}}}{{A`{{l{c}}n}}}Dn}{{{f{BLd}}{f{{l{Bl}}}}}{{A`{Abn}}}}{{BGfBCd}BGf}5{{{f{CA`}}{f{Bj}}d}{{A`{{l{Ff}}n}}}}{{{f{CA`}}{f{{l{Bh}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{CA`}}{f{Bj}}}{{A`{{l{Ff}}n}}}}{ACh{{l{c}}}Dn}{DBj{{A`{AB`n}}}}{{{f{DfDBl}}{f{DfAB`}}}{{A`{bn}}}}{{B@`{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{BMlBGf}{CMl{{A`{BGfn}}}}{CDj{{A`{BGfn}}}}{CDn{{A`{BGfn}}}}{{{BLj{c}}}{{A`{AB`n}}}BLn}{{{f{Df{CAd{c}}}}{f{DfAB`}}}{{A`{bn}}}CAh}{{{DBn{c}}}{{A`{AB`n}}}BLn}{{{BOb{c}}}{{A`{AB`n}}}BOd}{{{f{Df{DC`{c}}}}{f{DfAB`}}}{{A`{bn}}}CAh}{{{f{Df{CAj{c}}}}{f{DfAB`}}}{{A`{bn}}}CAh}{{{f{Df{DCb{c}}}}{f{DfAB`}}}{{A`{bn}}}CAh}{{{DCd{c}}}{{A`{AB`n}}}BLn}{{{CO`{c}}}{{A`{AB`n}}}BLn}{{{CAn{c}}}{{A`{AB`n}}}BLn}{CBb{{A`{AB`n}}}}{{{CBd{c}}{f{DfAB`}}}{{A`{Kfn}}}CAh}{{{f{DfACf}}}{{l{Ah}}}}?>={{{DBn{c}}{Ch{{N`{BLl}}}}d}{{A`{AB`n}}}BLn}{{{f{CB`}}Gf}d}{{}BCd}{BGfBGf}{BNnBCd}{BCdBCd}{{{f{BLd}}}Mj}`1```{{}{{BNd{{N`{BNb}}}}}}{{{f{CDd}}}{{A`{Abn}}}}3{{BCdBCd}BCd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df}}}{{A`{b}}}}{{{f{Df{N`{AFn}}}}}{{A`{bBDh}}}}{{{f{BOf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BGj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BHd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CEf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{ABb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@j}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{DCf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BL`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CEn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CF`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CFb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CFd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CFn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CG`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CGn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CHj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BCd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CHl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CI`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CId}}{f{DfHn}}}{{A`{bI`}}}}{{{f{D@n}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CIj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{CIl{c}}}}{f{DfHn}}}{{A`{bI`}}}Jh}{{{f{CIn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJ`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CBl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{{BNd{c}}}}{f{DfHn}}}{{A`{bI`}}}{}}{{{f{CJf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CJl}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CJn}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CK`}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKb}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{AGlA@h}BMj}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}A@hBMj}{{{f{{N`{ce}}}}{f{DfHn}}}{{A`{bI`}}}{BEdA@h}BMj}{{{f{CKd}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKf}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{BNh}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{CKh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CKn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CL`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLh}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CCj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BMh}}{f{DfHn}}}{{A`{bI`}}}}0000{{{f{A@b}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BHb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BH`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BBd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLl}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Mj}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CLn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{A@`}}{f{DfHn}}}{{A`{bI`}}}}{{{f{BJf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMd}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMf}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Bj}}BIb}Dd}```{{BCdce}BCd{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bb{BCd}}}}}}{{BMld}BMl}``{{{f{Bj}}c}{{A`{BCdn}}}{{If{{Bb{BCd}}}}}}{{BCd{Ch{Fb}}}BCd}{cc{}}0000000{BMfBGf}{CM`BGf}22222222222222222222222222222222{FbABb}33333333{CF`BL`}4444444444444444{{{f{Bj}}}CGj}5555555555{dBCd}{KfBCd}7{B`BCd}{KdBCd}{AjBCd}{NdBCd}{{{f{Bj}}}BCd}{ObBCd}{OfBCd}{NlBCd}{C@hBCd}{HfBCd}{FbBCd}{cc{}}00000{DChD@n}111111{CFhCBl}2222{CKd{{BNd{{N`{BOf}}}}}}{DCj{{BNd{{N`{BOf}}}}}}{BNh{{BNd{{N`{BOf}}}}}}{CJn{{BNd{{N`{BOf}}}}}}{DCl{{BNd{{N`{BOf}}}}}}{DCn{{BNd{{N`{BOf}}}}}}{DD`{{BNd{{N`{BOf}}}}}}{CK`{{BNd{{N`{BOf}}}}}}{CKf{{BNd{{N`{BOf}}}}}}{CJl{{BNd{{N`{BOf}}}}}}<<<<<<<<{DDb{{N`{ANn}}}}{c{{N`{c}}}{}}{DDdc{}}{H`{{N`{Bj}}}}{DDf{{N`{D@h}}}}{{{AAd{c}}}{{N`{{Bb{c}}}}}{}}{{{f{{Bb{c}}}}}{{N`{{Bb{c}}}}}Jh}{{{f{D@h}}}{{N`{D@h}}}}{{{f{ANn}}}{{N`{ANn}}}}{DBh{{N`{ANl}}}}{{{N`{Bj}}}{{N`{{Bb{B`}}}}}}{{{Ed{c}}}{{N`{c}}}{DDhA@h}}{{{f{Bj}}}{{N`{Bj}}}}{{{Gn{ce}}}{{N`{{Bb{c}}e}}}{}{BMjJh}}{{{Cn{ce}}}{{N`{ce}}}A@hBMj}{El{{N`{Bj}}}}{{{f{ANl}}}{{N`{ANl}}}}{cc{}}0{CKdBNh}{CJlBNh}2{DCnBNh}{CJnBNh}44444{CLdCLb}5555{ElBMb}6{BCdBMb}{{{f{Bj}}}BMb}{DdBMb}99999{DDjBHb}:{JlCLj};;;{NlMj}{KdMj}{dMj}{ObMj}{OfMj}{KfMj}{FbMj}{DdMj}{cc{}}{AjMj}{NdMj}{B`Mj}{HfMj}4444444{{{f{{BEf{BBd}}}}}DDl}{Fb{{Ch{BMh}}}}{FbBMh}00{{c{Ch{Ih}}}DDn{}}{{{DE`{Hf}}{DE`{B`}}{Ch{Ih}}}DEb}{{{DE`{Hf}}{DE`{B`}}{Ch{Ih}}}DEd}{c{{AMl{{l{e}}}}}{{Id{}{{Cj{}}}}}Al}{c{{AMl{{l{Bl}}}}}{{Id{}{{Cj{d}}}}}}{e{{N`{{Bb{c}}}}}{}{{Id{}{{Cj{c}}}}}}{cBMh{{Id{}{{Cj{BMh}}}}}}{{gGf}{{DEf{Hf}}}If{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}0{e{{DEf{Hf}}}{{Id{}{{Cj{{Ch{d}}}}}}}{{Id{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADl{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGh}{{DEf{Hf}}}BJj{{Id{}{{Cj{{Ch{c}}}}}}}{{Id{}{{Cj{{Ch{e}}}}}}}}763{{Dde}ADl{}{{D`{}{{Cj{c}}}}}}{{{f{Bj}}}{{Ch{BMh}}}}{c{{AMl{{l{e}}}}}{{Jd{}{{Cj{}}}}}Al}{e{{N`{{Bb{c}}}}}In{{Jd{}{{Cj{c}}}}}}`{c{{A`{{CO`{AFn}}n}}}{{BAn{DBh}}}}{{}{{N`{c}}}A@h}{c{{N`{ec}}}BMjA@h}{{Dd{f{{Bb{c}}}}}ADl{}}{{Dd{f{{Bb{{Ch{c}}}}}}}ADl{}}{{{f{Bj}}}{{A`{DEh}}}}{c{{AMl{{l{e}}}}}{{Jj{}{{Cj{}}}}}Al}{c{{AMl{{l{Bl}}}}}{{Jj{}{{Cj{d}}}}}}{En{{BNd{{N`{BNb}}}}}}{{{f{Bj}}{Ch{{f{CMn}}}}}{{A`{CObn}}}}{{{f{Bj}}{Ch{{f{CMn}}}}{Ch{{N`{CJj}}}}}{{A`{CBbn}}}}{{Ddc}DEj{}}{{{Gn{c}}AGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{Gn{c}}AGh}{{ALl{}{{AOb{e}}{AOd{c}}{AOf{g}}}}}{AOh{AOj{e}}}Jh{{Hd{}{{Cj{e}}}}JjInJ`}}`{{DdcGf}AJb{}}{{GfcAGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{}CIh}{{BGfBGfcc}BGf{{BAn{BCd}}}}{{{f{DEl}}{f{AB`}}ei}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}{{BAn{Dd}}}{{Id{}{{Cj{g}}}}}}{{DdGf}AJd}{{GfAGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{GfAGh}BHb}``{{BCdc{BNd{{N`{BNb}}}}DEn}BCd{{E`{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}`{{BCdc}BCd{{BAn{BCd}}}}{{BCdGfGf}BCd}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DF`A@h}BMj}{{{f{BLd}}Gf}{{A`{Jln}}}}{{BNlBCdd}BCd}{{BNnBCdd}BCd}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}6{{{f{{N`{CNh}}}}{f{CNj}}}{{CNn{{Cn{CNl}}}}}}{{{f{AJf}}Gf}{{A`{Jln}}}}{{{f{B@b}}Gf}{{A`{Jln}}}}{{{f{AJf}}Gf}Jl}{{{f{B@b}}Gf}Jl}{CDbBCd}{{{f{BGf}}}BMh}{{{f{CLj}}}En}{{}En}{{{f{CEl}}HfCEf{Ch{{f{AN`}}}}}{{A`{CEdn}}}}00{{{f{D@f}}{f{{BEf{En}}}}DFb{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BNb}}{f{{BEf{En}}}}DFb{f{{Bb{Oj}}}}}{{A`{Ojn}}}}{{{f{DDl}}{f{Bj}}}{{Ch{Oj}}}}{{{f{AGh}}}{{f{{Bb{BBd}}}}}}{{{f{BO`}}}Gf}{{{f{{Bb{B`}}}}}{{Ch{Gf}}}}{{{f{Df{CAn{c}}}}}{{A`{{f{{N`{CJj}}}}n}}}BLn}{{{f{DfCBb}}}{{A`{{f{{N`{CJj}}}}n}}}}{{{f{BLd}}}{{Ch{{Nb{G`}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@hBMj}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@hBMj}{{{f{BLd}}Gf}{{Ch{{f{K`}}}}}}{{{f{BLd}}GfGf}{{Ch{{f{K`}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}DFd}{{CNn{{Cn{CNl}}}}}}{{{f{CEl}}CEdCEfLd{Ch{{f{AN`}}}}CEj}{{A`{DFfn}}}}{{{f{CGd}}}{{N`{CGf}}}}{{{f{{N`{CNh}}}}{f{CNj}}{Nf{Gf}}}{{CNn{{Cn{CNl}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}{f{{Bb{{Nf{Gf}}}}}}}{{CNn{{Cn{CNl}}}}}}{{{f{Dfc}}}{{A`{DFhn}}}{BOdBLnA@h}}{{{f{DCf}}{f{{BEf{En}}}}}{{A`{{N`{{BEf{En}}}}n}}}}{{{f{Bj}}{f{En}}}{{A`{Eln}}}}{{{f{BBn}}Gf}Jl}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{BLd}}Gf}Jl}{{{f{CMl}}}d}{{{f{CDj}}}d}`{{BGfe}BMf{{BAn{BCd}}Jh}{{If{{Bb{c}}}}}}{{{f{DFj}}{Gn{Fj}}{f{BFf}}}{{A`{{Hj{Fj{Gn{Fj}}Cb}}n}}}}{{BGfBCdcBFf}BMf{{If{{Bb{BCd}}}}}}2{{BHdBHd{f{{Bb{Hf}}}}CEfLd{Ch{AN`}}}{{A`{{Gn{{AAd{Fb}}}}n}}}}{{CEl{f{{Bb{Hf}}}}CEfLd{f{{Ch{Dd}}}}ddCEj}{{Hj{{Gn{{AAd{Fb}}}}{Gn{Hf}}{Gn{Hf}}}}}}{{{f{BIn}}dd}{{A`{Cbn}}}}{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}{{BCdc}BCd{{BAn{BCd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DF`A@h}BMj}21`{{{f{BLd}}}d}{{{f{BFf}}{f{Dfc}}}bAE`}{{{f{BGj}}{f{Dfc}}}bAE`}{{{f{BHd}}{f{Dfc}}}bAE`}{{{f{CEf}}{f{Dfc}}}bAE`}{{{f{CEh}}{f{Dfc}}}bAE`}{{{f{CEj}}{f{Dfc}}}bAE`}{{{f{BL`}}{f{Dfc}}}bAE`}{{{f{CEn}}{f{Dfc}}}bAE`}{{{f{CF`}}{f{Dfc}}}bAE`}{{{f{CFb}}{f{Dfc}}}bAE`}{{{f{CFd}}{f{Dfc}}}bAE`}{{{f{CFf}}{f{Dfc}}}bAE`}{{{f{CFh}}{f{Dfc}}}bAE`}{{{f{CFj}}{f{Dfc}}}bAE`}{{{f{CFl}}{f{Dfc}}}bAE`}{{{f{CFn}}{f{Dfc}}}bAE`}{{{f{CG`}}{f{Dfc}}}bAE`}{{{f{CGb}}{f{Dfc}}}bAE`}{{{f{CGd}}{f{Dfc}}}bAE`}{{{f{CGf}}{f{Dfc}}}bAE`}{{{f{CGh}}{f{Dfc}}}bAE`}{{{f{CGj}}{f{Dfc}}}bAE`}{{{f{CGl}}{f{Dfc}}}bAE`}{{{f{CGn}}{f{Dfc}}}bAE`}{{{f{C@h}}{f{Dfc}}}bAE`}{{{f{CHh}}{f{Dfc}}}bAE`}{{{f{CHj}}{f{Dfc}}}bAE`}{{{f{BCd}}{f{Dfc}}}bAE`}{{{f{CHl}}{f{Dfc}}}bAE`}{{{f{CI`}}{f{Dfc}}}bAE`}{{{f{CIb}}{f{Dfc}}}bAE`}{{{f{CId}}{f{Dfc}}}bAE`}{{{f{CIf}}{f{Dfc}}}bAE`}{{{f{CIh}}{f{Dfc}}}bAE`}{{{f{CIj}}{f{Dfc}}}bAE`}{{{f{CIn}}{f{Dfc}}}bAE`}{{{f{CJ`}}{f{Dfc}}}bAE`}{{{f{CBl}}{f{Dfc}}}bAE`}{{{f{CJb}}{f{Dfc}}}bAE`}{{{f{CJd}}{f{Dfc}}}bAE`}{{{f{CJf}}{f{Dfc}}}bAE`}{{{f{CJh}}{f{Dfc}}}bAE`}{{{f{CJl}}{f{Dfc}}}bAE`}{{{f{CJn}}{f{Dfc}}}bAE`}{{{f{CK`}}{f{Dfc}}}bAE`}{{{f{CKb}}{f{Dfc}}}bAE`}{{{f{{N`{ce}}}}{f{Dfg}}}b{DFlA@h}BMjAE`}{{{f{CKd}}{f{Dfc}}}bAE`}{{{f{CKf}}{f{Dfc}}}bAE`}{{{f{BNh}}{f{Dfc}}}bAE`}{{{f{CKl}}{f{Dfc}}}bAE`}{{{f{CKn}}{f{Dfc}}}bAE`}{{{f{CL`}}{f{Dfc}}}bAE`}{{{f{CLb}}{f{Dfc}}}bAE`}{{{f{CLd}}{f{Dfc}}}bAE`}{{{f{CLf}}{f{Dfc}}}bAE`}{{{f{CLh}}{f{Dfc}}}bAE`}{{{f{BMb}}{f{Dfc}}}bAE`}{{{f{BH`}}{f{Dfc}}}bAE`}{{{f{CLj}}{f{Dfc}}}bAE`}{{{f{BBd}}{f{Dfc}}}bAE`}{{{f{CLl}}{f{Dfc}}}bAE`}{{{f{CLn}}{f{Dfc}}}bAE`}{{{f{A@`}}{f{Dfc}}}bAE`}{{{f{CMf}}{f{Dfc}}}bAE`}{{{f{DFn}}{f{Ab}}CFbd}{{A`{{Hj{{Hj{{Gn{Fb}}{Gn{Fb}}}}d}}n}}}}{{{f{DFn}}{f{Ab}}CFbd}{{A`{{Hj{{AMd{Fb}}{AMd{Fb}}}}n}}}}{{{f{DFn}}{f{Ab}}dd}{{A`{{Gn{Fb}}n}}}}{{BMf{Ch{Gf}}}BGf}{{BNnBCd}BCd}{{BCd{Ch{Gf}}}BCd}{{{f{{N`{CNh}}}}{f{CNj}}}{{CNn{{Cn{CNl}}}}}}{{{f{CA`}}}{{A`{{l{Bh}}n}}}}{{{f{CA`}}}{{l{Bh}}}}``{{{f{{Bb{{f{{l{Bh}}}}}}}}{f{Bj}}d}{{A`{{l{Bh}}n}}}}{{{f{DG`}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}`{{{f{D@b}}}{{l{Lb}}}}`{{BMlCF`}BMl}`{{{f{ABb}}}Fb}`{{{f{{Bb{Fj}}}}Ld}{{A`{Fjn}}}}{{{f{{L`{LfLb}}}}{f{{l{Bh}}}}CMf{Gj{Hf}{{Ad{AMn}}}}{Gj{AMn}{{Ad{Hf}}}}{f{AN`}}{f{AN`}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bj}}}}{Gj{Hf}{{Ad{AMn}}}}{Gj{AMn}{{Ad{Hf}}}}{f{AN`}}{f{AN`}}}{{A`{{l{Lb}}n}}}}{BCdBCd}{{{f{AMn}}}d}{{{CAd{c}}d}{{CAd{c}}}CAh}````0`{{}b}{cb{JhBMj}}``{cBCd{{If{{Bb{Hf}}}}}}``{{{f{{Bb{Fb}}}}}{{`{{D`{}{{Cj{Gf}}}}}}}}{{{f{DFh}}B`{Ch{Gf}}d{Ch{{f{{BEf{En}}}}}}GfGf{Ch{{f{CGj}}}}{Ch{B`}}B`{Ch{{f{CGl}}}}dd{f{Df{Ch{Gf}}}}d}{{A`{{Hj{{BEf{En}}GfGf}}n}}}}{{{DCd{c}}{Ch{{DGb{Gf}}}}}{{DCd{c}}}BLn}{{{CO`{c}}{Ch{{DGb{Gf}}}}}{{CO`{c}}}BLn}``{{}Gf}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACf}}}{{Cn{Cl}}}}{{BGfBGfcc}BGf{{BAn{BCd}}}}{{{f{DEl}}{f{AB`}}ei}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}{{BAn{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DfA@j}}}{{f{DfKf}}}}`{{{f{DfBMh}}BMh}b}{{BCdBCdHfEn}BCd}{{BCdBCdBCd}BCd}`{{{f{Ab}}CFl}Ab}{{BCdCFl}BCd}`{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{BCdBCd}BCd}{{BMhBMh}BMh}{{{f{BMh}}BMh}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEjFj}{{}Fj}{{MjDd}Fj}{BHb{{Hj{{Gn{BBd}}Gf{Gn{{Cn{Cl}}}}{Ch{Ih}}}}}}{{{AMl{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BMj}66{{{f{BCd}}}}{BMh}{{{f{BHb}}}}{{{f{CM`}}}}{DGdBNn}{BNnBNn}{{{N`{ce}}}{}A@hBMj}{{{N`{ce}}}{{Hj{e}}}A@hBMj}{{CGdc}{{BLj{c}}}BLn}{{BC`En}{{A`{Mjn}}}}{BGhAb}{{{N`{BLd}}}Ab}{{MjDd}Ab}{BGn{{Gn{c}}}{}}{{}{{Gn{Dd}}}}{{{f{BMh}}}d}{{{f{CBl}}}d}{{{f{CF`}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CFn}{{A`{{l{Bl}}n}}}}{{BCdccCFn}BCd{{BAn{BCd}}}}{cd{{If{ANl}}}}4{{{f{BHd}}{Ch{{f{Bj}}}}}d}4{{{f{CIh}}}d}7{{{f{BLd}}}d}{{{f{CB`}}}d}{BCdBCd}{{{f{Ab}}}{{A`{{l{Bl}}n}}}}{{{f{AJj}}}{{A`{{l{Bl}}n}}}}25{{{f{BHd}}}d};{{{f{Ab}}{f{Ab}}}{{A`{{l{Bl}}n}}}}{{BCdc}BCd{{BAn{BCd}}}}54{{{f{AJl}}}{{A`{{l{Bl}}n}}}}6{{{f{COn}}}{{l{Bl}}}}{{{f{D@`}}}{{l{Bl}}}}{{{f{CDf}}}{{A`{{l{Bl}}n}}}}9{{{f{Mj}}}d}::{{{f{BLd}}}{{l{Bl}}}};;0{{{f{A@j}}}d}<2{{{f{ABb}}}d}`{{{f{Ab}}}d}{{{f{Fj}}}d}{{{f{{N`{AFn}}}}}d}{{{f{CLj}}}d}{{}d}{{{f{DAl}}Fd}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CFb}}{f{CF`}}}{{A`{bn}}}}6{{{f{BHd}}}d}{{{f{COn}}}{{l{Kl}}}}{{{f{D@`}}}{{l{Kl}}}}{{{f{CDf}}}{{A`{{l{Kl}}n}}}}{{CB`Gf}DGf}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{AH`{cgAGn}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{BMh}}}{{AFj{BMh}}}}{{{f{BHb}}}{{AH`{{Gn{{Cn{DB`}}}}DGhAGn}}}}{{{f{DDl}}}{{`{Jf}}}}{{{f{BMh}}}{{AFl{BMh}}}}{{{f{{DGl{}{{DGj{c}}}}}}}{{`{Jf}}}{AGlJhD@jDAn}}{{BNlBCdd}BCd}{{BGfBGfccBL`}BGf{{If{{Bb{BCd}}}}}}{{BNnBCdd}BCd}{{{f{DEl}}{f{AB`}}eiBL`}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}{{BAn{Dd}}}{{Id{}{{Cj{g}}}}}}{{{f{DGn}}{f{AB`}}{f{Bj}}{f{Bj}}eeCFf{Ch{Jl}}}{{A`{AB`n}}}{{If{Bj}}}{{Id{}{{Cj{c}}}}}}{BGfBMl}{{{f{DH`}}{f{Bj}}d}{{A`{{l{Bh}}n}}}}{{{f{DH`}}{f{{l{Bh}}}}d}{{A`{{l{Bh}}n}}}}{{BMld}BMl}`{{BMl{Gn{BCd}}}BGf}{BLbBCd}{DHbBCd}{{{f{CJj}}}{{f{{Ch{{Gn{DHd}}}}}}}}``{{}BCd}{BGfBGf}{BNnBCd}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{BCdBCd}{{{f{BLd}}}Mj}{DHfBGf}5{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DF`A@h}BMj}{{{f{Ab}}}{{A`{Abn}}}}0`{{BGfBGfcc}BGf{{BAn{BCd}}}}{{{f{DEl}}{f{AB`}}ei}{{A`{AB`n}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}{{BAn{Dd}}}{{Id{}{{Cj{g}}}}}}{{BMlc}BMl{{If{{Bb{BCd}}}}}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}>{{{f{BLd}}}Gf}=;{{{f{BHb}}}Gf}{{BGfFb}BGf}{{{f{BLd}}Gf}Ab}```{BCdBNn}{{{f{{N`{CNh}}}}{Ch{{f{CNj}}}}}{{CNn{{Cn{D@l}}}}}}{{{f{{N`{CNh}}}}{Ch{{f{CNj}}}}}{{CNn{{Cn{CNl}}}}}}{{{f{{N`{CNh}}}}{Ch{{f{CNj}}}}{f{CNj}}}{{CNn{{Cn{D@l}}}}}}{cBCdDHh}{DHhBCd}{BHdBCd}{DHjBCd}{CLjBCd}{MjBCd}{{{f{{N`{e}}}}DHl}{{A`{{DHn{c}}DI`}}}DIb{{DId{c}}A@h}}{{{f{{N`{c}}}}CBnDHl}{{A`{DIfDI`}}}{DIhA@h}}{{{f{{N`{e}}}}DHl}{{A`{{DHn{c}}DI`}}}CC`{{CCb{c}}A@h}}{{{f{{N`{c}}}}CBnDHl}{{A`{{DHn{DIj}}DI`}}}{DIlA@h}}{{{f{{N`{e}}}}CBnDHl}{{A`{{DHn{c}}DI`}}}CC`{{DIn{c}}A@h}}{{BCdc}BCd{{BAn{BCd}}}}0``{{CDnd}CDn}{{{CO`{c}}d}{{CO`{c}}}BLn}```{BCdBCd}{{{f{DH`}}}{{l{Ff}}}}0{{{f{DH`}}{f{{Bb{Fj}}}}}{{A`{{l{Ah}}n}}}}{{{f{DH`}}HfDAd}{{A`{{l{Ah}}n}}}}{{{f{DH`}}Hfd}{{A`{Abn}}}}{{{f{DH`}}{f{{l{Bh}}}}d}{{A`{{l{Bh}}n}}}}4{{{f{DH`}}}{{A`{Abn}}}}{{{f{DH`}}}Ab}01{{{f{DH`}}}{{A`{{l{Ff}}n}}}}{{{f{DH`}}}{{l{Ah}}}}{{{f{DH`}}{f{Fj}}}{{A`{{l{Ah}}n}}}}{{{f{DH`}}HfGf}{{l{Ah}}}}{{{f{DH`}}Fd}{{A`{{l{Ah}}n}}}}{{{f{DH`}}B`}Ab}7{{{f{DH`}}}{{A`{{l{Ah}}n}}}}01{{{f{{AJh{}{{Cj{c}}}}}}e}c{}{}}{{BCdc}BCd{{BAn{BCd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DF`A@h}BMj}21``````{{{f{ANd}}{f{ANd}}}{{A`{{Hj{ANdANd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DJ`A@h}{BMjJh}}{{BGfcBMh{Ch{{N`{DCf}}}}{Ch{{f{Bj}}}}}BGf{{E`{AB`}{{Ad{{A`{AB`n}}}}}}InJ`}}{{DHbc}BCd{{E`{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}InJ`}}{{BCdc{BNd{{N`{BNb}}}}}BCd{{E`{Fj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCdBCdc{BNd{{N`{BNb}}}}}BCd{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCd{f{Dfc}}{f{Df}}}{{A`{BCdn}}}{{Af{BCd{f{Df}}}{{Ad{{A`{BCdn}}}}}}}}{{{f{BO`}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BO`}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{En}}}}}}{c{{BNd{{N`{BNb}}}}}{{E`{{f{En}}}{{Ad{{A`{Enn}}}}}}InJ`}}{c{{BNd{{N`{BNb}}}}}{{E`{{f{{Bb{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}InJ`}}{{BCdc}BCd{{Af{BCd}{{Ad{BCd}}}}}}{c{{BNd{{N`{BNb}}}}}{{E`{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}InJ`}}{{DHb{N`{E`}}}BCd}{c{{BNd{{N`{BNb}}}}}{{E`{{f{{Bb{Oj}}}}}{{Ad{{A`{Ojn}}}}}}InJ`}}:{{ce{BNd{{N`{BNb}}}}}BCd{{E`{{f{Df{Bb{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bb{BCd}}}}}}{{BCdc{f{{Bb{BCd}}}}{BNd{{N`{BNb}}}}}BCd{{E`{{f{Df{Bb{Fj}}}}}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}}{{BCdBNh{f{{Bb{BCd}}}}d{Ch{DJb}}}BCd}2{{{f{BO`}}}{{A`{Ojn}}}}{{CGdc}CGd{{E`{CGf}{{Ad{CGf}}}}}}1111{{{CIl{{BNd{{N`{BOf}}}}}}}{{A`{{BNd{{N`{BOf}}}}n}}}}{CLjCLj}{{{Ch{{f{{Bb{Gf}}}}}}{f{{BEf{BBd}}}}{Ch{{f{{Bb{Ab}}}}}}{Ch{{f{DJd}}}}}AB`}{{{Ch{{f{{Bb{Dd}}}}}}{f{{BEf{En}}}}{Ch{{f{{Bb{Ab}}}}}}d}{{Ch{{Gn{Gf}}}}}}{{{f{DDl}}}{{A`{{BEf{En}}n}}}}{{{f{Bj}}}BCd}{BNlBCd}{BGfBGf}{BNnBCd}{{{f{AHh}}}{{Ch{c}}}{}}{BCdBCd}{{{f{{N`{c}}}}}{{Ch{DJf}}}{CMjA@h}}{{{f{DJh}}}Mj}{{{f{BLd}}}{{A`{Mjn}}}}```865{{{f{AHh}}}{{Ch{Aj}}}}4{{{f{BLd}}}{{Ch{Aj}}}}:987{{{f{AJn}}}{{Ch{c}}}{}}61{{{f{DJj}}}Mj}4{{{DBn{c}}{Ch{DBh}}}{{DBn{c}}}BLn}{{{f{En}}{f{En}}}{{A`{Enn}}}}{{{f{COb}}}{{A`{COdn}}}}````{{{f{D@b}}}{{l{Lb}}}}`{{{f{CDf}}}{{A`{{l{Kl}}n}}}}1`{{{f{Bj}}}BCd}{BNlBCd}{BGfBGf}{BNnBCd}{{{f{AHh}}}{{Ch{c}}}{}}{BCdBCd}{{{f{AHh}}}{{Ch{{Hj{cc}}}}}{}}```{{{f{DJh}}}Mj}{{{f{BLd}}}{{A`{Mjn}}}}``{{{f{DG`}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}`=```6{{{f{COn}}}{{l{O`}}}}21`{{{f{BHd}}}Hf}{{{f{BHd}}}d}{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BHdHf}BHd}{{BCdBCd}}{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BLd}}}Gf}{{{f{CMl}}}{{Ch{Gf}}}}{{{f{CDj}}}{{Ch{Gf}}}}{{{f{CDn}}}{{Ch{Gf}}}}`````{{{CAd{c}}Gf}{{CAd{c}}}CAh}`{BNlBCd}{BNnBCd}{{{f{AId}}}{{A`{Gfn}}}}{BCdBCd}{{{f{BLd}}}{{A`{Gfn}}}}{{{f{BLd}}}{{f{Dd}}}}{BCdDHb}````33`{{{f{DG`}}}{{l{Kl}}}}{{{f{D@`}}}{{l{Kl}}}}{{{f{CDf}}}{{A`{{l{Kl}}n}}}}{{{f{D@b}}}{{l{Lb}}}}{{{f{BHd}}}Hf}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAnA@h}BMj}{{{f{CFb}}}d}{BHd}{BCd}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BHd}}}d}{{DJlGf}{{Ch{Gf}}}}{{BCdc}BCd{{BAn{BCd}}}}0{{{f{BO`}}}{{A`{Ojn}}}}{{}c{}}{cDBjBOd}{cDBlCAh}2{{Ddc}DJn{}}{c{{AMl{c}}}{}}{BGfBMl}{cCDj{{If{ANl}}}}{cCDn{{If{ANl}}}}{c{{BLj{c}}}BLn}{{{f{{Bb{Oj}}}}}BO`}{c{{CAd{c}}}CAh}{HfBHd}{c{{DBn{c}}}BLn}{{BHdBHdBHd}CEl}{c{{BOb{c}}}BOd}{c{{DC`{c}}}CAh}{{}D@d}{c{{CAj{c}}}CAh}{c{{DCb{c}}}CAh}{c{{DCd{c}}}BLn}{c{{CO`{c}}}BLn}{{DK`{N`{CJj}}{N`{{BEf{BBd}}}}{Hj{GfGf}}{Ch{{Gn{Gf}}}}{Ch{{N`{BLl}}}}{Ch{DJd}}Gfd{Ch{{Gn{Ab}}}}{Ch{{Hj{Dd{N`{Bj}}}}}}CIj}{{A`{CB`n}}}}{c{{CAn{c}}}BLn}{CF`BL`}{c{{CBd{c}}}{CAhCAh}}{c{{BNd{c}}}{}}{c{{N`{c}}}{}}{{BCdBCdBCd}CKh}{{}CKj}{BCdBMb}{{Dd{Gn{Oj}}{BNd{{N`{BNb}}}}c}CCjBOf}{{AGhGf{Gn{{Cn{Cl}}}}{Ch{Ih}}}BHb}{{DdAGhd}BBd}{{EnJl}Mj}{e{{N`{c}}}{}{{ABd{{f{{DAf{c}}}}}{{Ad{c}}}}}}{{ge}{{N`{ce}}}{}BMj{{ABd{{f{{DAf{ce}}}}}{{Ad{c}}}}}}{AGhBHb}{{{f{AK`}}GfGf}{{l{c}}}Dn}{{{f{BLd}}GfGf}Ab}{{{f{Bj}}}CGj}{{ce}{{N`{ce}}}{}BMj}{{HfDd}{{A`{Abn}}}}{DdCGj}{{AGhGf}BHb}{{{N`{{Bb{DBh}}}}}CDj}{{{N`{{Bb{DBh}}}}}CDn}{B`CGj}{{{f{{N`{c}}}}{f{DKb}}}CMh{CMjA@h}}{{}{{N`{{C@n{c}}}}}{}}{c{{N`{{C@n{e}}c}}}BMj{}}{Gf{{N`{{Bb{{C@n{c}}}}}}}{}}{{Gfc}{{N`{{Bb{{C@n{e}}}}c}}}BMj{}}{DKdCDj}{DKdCDn}5432{{{f{DfDKf}}}Ch}{{{f{DfDFf}}}Ch}{{{f{BMn}}DKh}{{A`{{Ch{AB`}}n}}}}{{{f{DfCBh}}Gf}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{DfCAb}}Gf}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{DfCB`}}Gf}{{A`{{Ch{{Gn{AB`}}}}n}}}}{{{f{BCd}}{f{Df{BI`{{f{BCd}}}}}}}b}{{BCd{f{Df{BI`{BCd}}}}}b}{BCdBCd}0{BMhBMh}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}0{HfBCd}`{{}ABb}{{}A@j}`{{{f{BLd}}}Gf}{BGfBGf}7`````{{{f{Df{CAn{c}}}}}{{A`{Gfn}}}BLn}{{{f{DfCBb}}}{{A`{Gfn}}}}````{{{f{AIl}}}{{A`{{Hh{Hf}}n}}}}{{BMlc}BMl{{If{{Bb{BCd}}}}}}````{{BGf{f{Df{BKj{BKh}}}}{f{Df{BKj{BKl}}}}}{{A`{BKfn}}}}`{{BCdc}BCd{{BAn{BCd}}}}{{{f{BLd}}}{{A`{Mjn}}}}{{{f{COn}}}{{l{Od}}}}{{{f{D@`}}}{{l{Od}}}}{{{f{CDf}}}{{A`{{l{Od}}n}}}}{{{f{CDf}}}{{A`{{l{Kl}}n}}}}{{CHbc}BCd{{BAn{BCd}}}}{{CHfc}BCd{{BAn{BCd}}}}`{{BCde}BCd{{BAn{BCd}}Jh}{{If{{Bb{c}}}}}}{{BCde{Ch{{Hj{eFd}}}}CLd}BCd{{BAn{BCd}}Jh}{{If{{Bb{c}}}}}}{{{f{Df{BEf{En}}}}{f{{BEf{En}}}}}{{A`{bn}}}}```{{{f{Bj}}}BHd}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{L`{KnKl}}}}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{L`{LnLb}}}}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}Ld}{{L`{LfLb}}}}``{{{f{BHd}}{f{BHd}}}{{Ch{BAd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{BAd}}}{DF`A@h}BMj}```{{}BCd}{c{{CNn{{N`{c}}}}}{}}{{ce}{{CNn{{N`{ce}}}}}{}BMj}````{{BCdc}BCd{{BAn{BCd}}}}`{{DHb{f{Bj}}}BCd}0{CM`{{A`{{Gn{B`}}n}}}}{{{f{AB`}}{f{AB`}}d}{{A`{{Hj{{AAl{{Gn{Fb}}{Gn{A@j}}}}{AAl{{Gn{ABb}}{Gn{A@j}}}}}}n}}}}`{{{f{DJh}}}Mj}{BCdBCd}{BGf{{A`{{Hj{AB`AB`}}n}}}}`{{{f{BHb}}}BHb}{{{f{{N`{c}}}}{f{DfDKj}}}b{AM`A@h}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@hBMj}{{{f{{N`{CNh}}}}{f{CNj}}DKl}{{CNn{{Cn{CNl}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}}{{CNn{{Cn{CNl}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}DKn}{{CNn{{Cn{CNl}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}DKlDL`}{{CNn{{Cn{CNl}}}}}}{{{f{Bj}}BCdA@`}BCd}{{BGfBCdA@`}BGf}{{{f{AJn}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BCdBCdA@`}BCd}{{{f{DJj}}AjA@`}{{A`{Mjn}}}}{{{f{BLd}}AjA@`}{{A`{Mjn}}}}{{{f{COn}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BDh}}}DBf{}}````{{{f{DLb}}CGb{Ch{Kf}}}Ab}{{BCdCGb{Ch{Kf}}}BCd}{{{f{Df{N`{AFn}}}}{f{Df{Bb{B`}}}}}{{A`{GfBDh}}}}{{{f{Df{N`{AFn}}}}DLd}{{A`{bBDh}}}}{{{f{Df}}{f{Df{Bb{B`}}}}}{{A`{b}}}}{{{CAn{c}}CIj}{{CAn{c}}}BLn}{{CBbCIj}CBb}{{{f{Df{N`{AFn}}}}{f{Df{Gn{B`}}}}}{{A`{GfBDh}}}}{{{f{Df{N`{AFn}}}}{f{DfEl}}}{{A`{GfBDh}}}}{{{f{Df}}}{{A`{cBDh}}}DLf}{{{f{Df{N`{AFn}}}}{f{Df{Bb{DLh}}}}}{{A`{GfBDh}}}}{{{f{CMl}}}d}{{{f{BLd}}}Ab}{{{f{CDj}}}d}{{{f{CDn}}}d}````{{{f{BLd}}}{{Ch{Ih}}}}{{{f{{N`{c}}}}{f{CMh}}{f{DLj}}}b{CMjA@h}}{{{f{{N`{c}}}}{f{CMh}}{f{CMh}}}b{CMjA@h}}{{ce}BCd{{E`{FjFj}{{Ad{{A`{{Ch{Fj}}n}}}}}}InJ`}{{If{{Bb{BCd}}}}}}{{{f{{N`{c}}}}{f{DAj}}}DLl{CMjA@h}}{{{f{AKb}}}Ab}0{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCdBCd}}{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBMh}}BMh}b}{{{f{{Bb{B`}}}}}{{A`{{f{{Bb{B`}}}}n}}}}{{{f{DfBLd}}Dd}b}{{BGfeid}BGf{{If{Bj}}}{{Id{}{{Cj{c}}}}}{{If{Bj}}}{{Id{}{{Cj{g}}}}}}{{{f{{N`{CNh}}}}{f{CNj}}{f{CNj}}}{{CNn{{Cn{CNl}}}}}}{{BLbe}BCd{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}}1{{cBCd}BCd{{BAn{BCd}}}}{{{f{Ab}}{f{{l{Ff}}}}}{{A`{{l{Ah}}n}}}}{{BCdc}BCd{{BAn{BCd}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{CA`}}{f{Bj}}{f{Bj}}}{{A`{{l{Bh}}n}}}}{{BCdcc}BCd{{BAn{BCd}}}}1{{{f{BO`}}{Ch{En}}}{{A`{Ojn}}}}{{{f{CA`}}{f{Bj}}{f{Bj}}Gf}{{A`{{l{Bh}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{En}}}{{A`{Abn}}}}{{BCdcc{Ch{c}}{Ch{En}}}BCd{{BAn{BCd}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bj}}}}{f{{l{Bh}}}}CMf}{{A`{{L`{LfLb}}n}}}}{{BCd{f{{Bb{Hf}}}}}BCd}{{{f{ANl}}}DBh}`{{{f{AKd}}}AKd}{{{f{BLd}}}Ab}{BNlBCd}{BGfBGf}{BNnBCd}{BCdBCd}`{{BMlc}BMl{{If{{Bb{BCd}}}}}}{{{f{DFj}}{Gn{Fj}}{f{BGj}}}{{A`{{Hj{Fj{Gn{Fj}}Cb}}n}}}}{{BGfBCdcBGj}BMf{{If{{Bb{BCd}}}}}}{{BCdBGj}BCd}{{{f{AKf}}{f{E`}}A@b}{{A`{Abn}}}}{{BCd{N`{E`}}{BNd{{N`{BNb}}}}A@b}BCd}{{{f{BLd}}{f{E`}}A@b}{{A`{Abn}}}}{{BCdGfc}BCd{{Af{{f{Df{l{Eh}}}}}{{Ad{{Ch{Aj}}}}}}InJ`Eb}}{{{f{DLn}}A@b}{{A`{Abn}}}}{{BCdA@b}BCd}{{{f{DLn}}{f{Ab}}CEb}{{A`{Abn}}}}{{BCdBCdCEb}BCd}32102032103{{BCdA@`AjA@b}BCd}2{{BCdBCdA@`AjCEb}BCd}543254325432{{{f{DM`}}{f{{l{Bh}}}}{Ch{{f{AN`}}}}}{{A`{DM`n}}}}{{{f{CDd}}Fb}{{A`{Abn}}}}{{BCdFb}BCd}{{{f{CEl}}Hf{Ch{{f{AN`}}}}}{{A`{Hfn}}}}0{{{f{CDd}}Nd}{{A`{Abn}}}}{{BCdNd}BCd}2```{{{f{CMl}}}{{Ch{{f{DJd}}}}}}{{{f{CDj}}}{{Ch{{f{DJd}}}}}}{{{f{CDn}}}{{Ch{{f{DJd}}}}}}``````{{{f{DH`}}{l{Ah}}}{{l{Ah}}}}{{}{{BNd{{N`{BNb}}}}}}{{BCdBCddd{Ch{Kf}}}BCd}0{{{f{BMn}}DKh}{{A`{AB`n}}}}{{cCDl}{{A`{BGfn}}}{{If{ANl}}}}{{{N`{{Bb{DBh}}}}CDl}{{A`{BGfn}}}}{{DKdCDl}{{A`{BGfn}}}}{{cCE`}{{A`{BGfn}}}{{If{ANl}}}}{{{N`{{Bb{DBh}}}}CE`}{{A`{BGfn}}}}{{DKdCE`}{{A`{BGfn}}}}{{DMb{f{{Bb{Fb}}}}e}{{A`{Abn}}}Eb{{Id{}{{Cj{{Ch{c}}}}}}}}{{{f{AKh}}c{Ch{e}}}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}}{{{f{AKh}}ci}{{A`{AKhn}}}{{Id{}{{Cj{Fb}}}}}{}{}{{E`{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{DBn{c}}}}}{{A`{{N`{{BEf{BBd}}}}n}}}BLn}{{{f{Df{BOb{c}}}}}{{A`{{BEf{En}}n}}}BOd}{{{f{BMn}}{Ch{Gf}}}{{A`{{N`{{BEf{En}}}}n}}}}{{{f{CB`}}}{{f{{N`{{BEf{BBd}}}}}}}}{{{f{Df{CAn{c}}}}}{{A`{{N`{{BEf{BBd}}}}n}}}BLn}{{{f{DfCBb}}}{{A`{{N`{{BEf{BBd}}}}n}}}}{{{f{CJj}}}{{f{DMd}}}}```````{{}BMh}`{{{f{DfBGf}}{f{Df{BKj{BKh}}}}{f{Df{BKj{BKl}}}}}{{A`{{N`{{BEf{En}}}}n}}}}`{{{f{DG`}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}`{{{f{D@b}}}{{l{Lb}}}}`{{{f{Df{N`{AFn}}}}DMf}{{A`{KfBDh}}}}{{BGfc}BGf{{If{{Bb{BCd}}}}}}0{{BGfBGfcc}BGf{{BAn{BCd}}}}``{{{f{CEb}}c}A`A@f}{{{f{BFf}}c}A`A@f}{{{f{BGj}}c}A`A@f}{{{f{BHd}}c}A`A@f}{{{f{CEf}}c}A`A@f}{{{f{CEh}}c}A`A@f}{{{f{CEj}}c}A`A@f}{{{f{BL`}}c}A`A@f}{{{f{CEn}}c}A`A@f}{{{f{CF`}}c}A`A@f}{{{f{CFb}}c}A`A@f}{{{f{CFd}}c}A`A@f}{{{f{CFf}}c}A`A@f}{{{f{CFh}}c}A`A@f}{{{f{CFj}}c}A`A@f}{{{f{CFl}}c}A`A@f}{{{f{CFn}}c}A`A@f}{{{f{CG`}}c}A`A@f}{{{f{CGb}}c}A`A@f}{{{f{CGd}}c}A`A@f}{{{f{CGf}}c}A`A@f}{{{f{CGh}}c}A`A@f}{{{f{CGj}}c}A`A@f}{{{f{CGl}}c}A`A@f}{{{f{CGn}}c}A`A@f}{{{f{C@h}}c}A`A@f}{{{f{CHh}}c}A`A@f}{{{f{CHj}}c}A`A@f}{{{f{BCd}}c}A`A@f}{{{f{CHl}}c}A`A@f}{{{f{CI`}}c}A`A@f}{{{f{CIb}}c}A`A@f}{{{f{CId}}c}A`A@f}{{{f{CIf}}c}A`A@f}{{{f{CIh}}c}A`A@f}{{{f{CIj}}c}A`A@f}{{{f{{CIl{c}}}}e}A`{DMhJh}A@f}{{{f{CIn}}c}A`A@f}{{{f{CJ`}}c}A`A@f}{{{f{CBl}}c}A`A@f}{{{f{CJb}}c}A`A@f}{{{f{CJd}}c}A`A@f}{{{f{{BNd{{N`{CCd}}}}}}c}A`A@f}{{{f{{BNd{{N`{BOf}}}}}}c}A`A@f}{{{f{{BNd{Ab}}}}c}A`A@f}{{{f{{BNd{{N`{CM`}}}}}}c}A`A@f}{{{f{{BNd{{N`{BNb}}}}}}c}A`A@f}{{{f{CJf}}c}A`A@f}{{{f{CJh}}c}A`A@f}{{{f{CJl}}c}A`A@f}{{{f{CJn}}c}A`A@f}{{{f{CK`}}c}A`A@f}{{{f{CKb}}c}A`A@f}{{{f{{N`{c}}}}e}A`{DMhA@h}A@f}{{{f{CKd}}c}A`A@f}{{{f{CKf}}c}A`A@f}{{{f{BNh}}c}A`A@f}{{{f{CKl}}c}A`A@f}{{{f{CKn}}c}A`A@f}{{{f{CL`}}c}A`A@f}{{{f{CLb}}c}A`A@f}{{{f{CLd}}c}A`A@f}{{{f{CLf}}c}A`A@f}{{{f{CLh}}c}A`A@f}{{{f{BMb}}c}A`A@f}{{{f{A@b}}c}A`A@f}{{{f{BH`}}c}A`A@f}{{{f{CLj}}c}A`A@f}{{{f{BBd}}c}A`A@f}{{{f{CLl}}c}A`A@f}{{{f{Mj}}c}A`A@f}{{{f{CLn}}c}A`A@f}{{{f{CM`}}c}A`A@f}{{{f{A@`}}c}A`A@f}{{{f{BJf}}c}A`A@f}{{{f{CMb}}c}A`A@f}{{{f{CMd}}c}A`A@f}{{{f{CMf}}c}A`A@f}``{{{f{AKh}}{f{{l{Bl}}}}{Ch{c}}}{{A`{AKhn}}}{}}{{{f{DfBMh}}BMhd}b}{{{f{BGf}}{BKj{BKh}}{BKj{BKl}}}b}{{{CAn{c}}d}{{CAn{c}}}BLn}{{{f{Df{CAn{c}}}}{N`{CJj}}}bBLn}{{{CBd{c}}d}{{CBd{c}}}CAh}{{{DBn{c}}d}{{DBn{c}}}BLn}{{{BOb{c}}d}{{BOb{c}}}BOd}{{{DCd{c}}d}{{DCd{c}}}BLn}5{{CBbd}CBb}{{DBjd}DBj}{{BCdMb}BCd}{{{f{DfBHb}}{Ch{Ih}}}b}{{{f{AKj}}Hf}{{l{c}}}Dn}{{{f{BLd}}Hf}Ab}{{BNlBCd}BCd}{{BGfc}BGf{{BAn{BCd}}}}{{BNnBCd}BCd}{{BCdBCd}BCd}{{{f{AKl}}Hfc}{{l{e}}}{}Dn}{{BGfce}BGf{{BAn{BCd}}}{{BAn{BCd}}}}{{BCdce}BCd{{BAn{BCd}}}{{BAn{BCd}}}}{{{f{BL`}}}d}{BCdBCd}{{{f{DfACh}}}b}{{{f{DfBLd}}}b}{{BCd{Ch{Kf}}}BCd}{{BGfcCGn}{{A`{bn}}}{{If{ANl}}}}{{BGfcCI`}{{A`{bn}}}{{If{ANl}}}}{{BGfEl{Ch{CMn}}CI`}{{A`{bn}}}}{{BGfcCId}{{A`{bn}}}{{If{ANl}}}}{{BGfcCIn}{{A`{bn}}}{{If{ANl}}}}{{BGfEl{Ch{CMn}}CIn}{{A`{bn}}}}{{{f{CNf}}}{{l{Ff}}}}````{{{f{BLd}}HfGf}Ab}{{BGfHfFb}BGf}{{BNnBCdBCd}BCd}?{{{f{DfBHb}}GfGf}b}0`{{{f{AKn}}GfGf}AKn}{{fGfGf}c{}}1022{{BHbGfGf}BHb}0`{{{f{AIb}}d}{{l{c}}}Dn}{{BNlFd}BCd}{{BGfcFl}BGf{{BGn{Dd}}}}{{BNnFd}BCd}{{BCdFd}BCd}{{BCdeFl}BCd{{BAn{BCd}}Jh}{{If{{Bb{c}}}}}}{{BGfcFl}BGf{{If{{Bb{BCd}}}}}}{{{f{AIb}}Fd}{{l{c}}}Dn}{{{f{BLd}}Fd}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{AM`}}}}}{AM`A@h}}{{{f{CMl}}}{{f{DKd}}}}{{{f{CDj}}}{{f{DKd}}}}{{{f{CDn}}}{{f{DKd}}}}{{{f{{N`{c}}}}{DMj{b}}}{{A`{bDMl}}}{DMnA@h}}{{{f{{N`{c}}}}{DN`{b}}}{{A`{bDMl}}}{DNbA@h}}{{{f{CA`}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{BLd}}Hf}{{Hj{AbAb}}}}{{{f{BHb}}Gf}{{Hj{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{CA`}}{f{{l{Bh}}}}Gf}{{A`{{l{j}}n}}}}0{{{f{{l{Bh}}}}{f{{l{Bh}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bj}}}}}}}{{E`{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}4{{{f{{l{Bh}}}}{f{{l{Bh}}}}Gfed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bj}}}}}}}{{E`{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{BCdBCd}`{{{f{CNf}}{f{{Bb{B`}}}}}{{l{Bl}}}}{{{f{CA`}}{f{Bj}}}{{l{Bl}}}}{{{f{CNf}}{f{{l{An}}}}}{{l{Bl}}}}{{{f{CA`}}{f{{l{Bh}}}}}{{l{Bl}}}}`{{{f{{N`{c}}}}}{{A`{bDMl}}}{DNbA@h}}{{{f{{N`{c}}}}}{{A`{bDMl}}}{DMnA@h}}{{BNlB`}BCd}{{BGfB`}BGf}{{BNnB`}BCd}{{{f{AL`}}B`}{{Ch{Aj}}}}{{BCdB`}BCd}{{{f{BLd}}B`}{{Ch{Aj}}}}{{{f{DNd}}B`}Mj}{{{f{BLd}}B`}{{A`{Mjn}}}}{{FbFb}A@j}{BCdDNf}{{{f{CA`}}}{{l{Bh}}}}{{{f{CA`}}{f{Fj}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bh}}}}{f{Bj}}d}{{l{Bh}}}}{{{f{CA`}}}{{l{Ff}}}}03{{{f{CA`}}{f{Fj}}{f{Fj}}}{{A`{{l{Bh}}n}}}}3`{{{f{CDf}}{f{Bj}}}{{A`{Abn}}}}`{{BCdEn}BCd}`{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}606060{{{f{CA`}}{f{{l{Bh}}}}}{{l{Bh}}}}10{{{f{{N`{ce}}}}}GfA@hBMj}{BCdBLb}{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{BCdBCd}}{{BMbBMb}}{{BMhBMh}BMh}{{{f{DfBMh}}BMh}b}{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}{{BMlc}BMl{{BAn{Dd}}}}{{DHb{f{Bj}}}BCd}{{{f{BL`}}}{{f{Dd}}}}`1{{{f{Bj}}}BCd}{BNlBCd}{BGfBGf}{BNnBCd}{{{f{AHh}}}{{Ch{c}}}{}}{BCdBCd}{{{f{DJh}}}Mj}{{{f{BLd}}}{{A`{Mjn}}}}{{}{{BNd{{N`{BNb}}}}}}{CBlCBl}?{{{f{Df}}g}{{A`{eBDh}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{{BGfFb}BGf}{{BMf{Ch{Gf}}}BGf}{{BNnBCd}BCd}{{BCd{Ch{Gf}}}BCd}{{{f{ALb}}{f{c}}}{{A`{ALbn}}}A@h}{{{f{BLd}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{DNh}}{f{{Bb{A@j}}}}Mb}DNh}{{{f{DNh}}{f{{Bb{A@j}}}}}DNh}{{{f{BLd}}{f{{Bb{Fb}}}}}{{A`{Abn}}}}{{{f{BLd}}{f{{Bb{Fb}}}}}Ab}{{{f{ALd}}{f{c}}}ALdA@h}{{{f{BLd}}{f{{l{Ff}}}}}Ab}{{{f{DfBHb}}}{{Ch{Ih}}}}{{BCdBCdBCd}BCd}{{CH`c}CHb{{BAn{BCd}}}}{{CHdc}CHf{{BAn{BCd}}}}`{{BCdBCdBHdCEf}BCd}```{{{f{CDf}}Ld}{{A`{{l{Lb}}n}}}}{BGf{{A`{DNjn}}}}{CM`{{A`{DNjn}}}}1{{{f{CLj}}}{{Ch{Jl}}}}{{BNnGf}BCd}{{{f{DDl}}B@j}{{BEf{BBd}}}}{{{f{BHb}}}{{Cn{Cl}}}}{{{f{ALf}}}{{Gn{{f{{Bb{B`}}}}}}}}{{{f{BGf}}d}{{A`{Eln}}}}{{{f{DNl}}{Ch{{f{Bj}}}}d}{{A`{AB`n}}}}{{{f{BLh}}{Ch{{f{Bj}}}}d}{{A`{AB`n}}}}{{{f{BCd}}{f{{BEf{En}}}}DFb}{{A`{Ojn}}}}{{{f{CA`}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}{BNlBCd}{{{f{CA`}}}{{l{Bh}}}}{DHbBCd}{{{f{ABb}}}{{Ch{Fb}}}}{fc{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BCdBCd}{{{f{BO`}}}{{A`{Ojn}}}}{{{f{CDf}}{f{Bj}}}{{A`{Abn}}}}{fEl}000000000000{{{f{DfDDl}}{f{{BEf{En}}}}}{{A`{dn}}}}`887{{{f{CI`}}c}{{CAj{c}}}CAh}{{{f{CIn}}c}{{CBd{c}}}CAh}{{{f{DfBMh}}BMh}b}``{{BGfFbcFl}BGf{{If{{Bb{BCd}}}}}}{{{f{BHb}}{f{BHb}}}Ih}{{{f{BHb}}f}Ih}10{{{f{Ab}}}{{A`{Abn}}}}0{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}g{}{}{}}{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}g{}{}{}}{{{f{DNn}}{Ch{{f{AN`}}}}{f{{l{Bh}}}}}{{A`{DNnn}}}}{{{f{BHd}}Hf{Ch{{f{AN`}}}}ceg}{{A`{Hfn}}}{{E`{Hf}{{Ad{Hf}}}}}{{E`{Hf}{{Ad{AMn}}}}}{{E`{AMn}{{Ad{Hf}}}}}}{{{f{BHd}}Hf{Ch{{f{AN`}}}}}{{A`{Hfn}}}}{{{f{CEl}}Hf{Ch{{f{AN`}}}}}{{A`{Hfn}}}}10`10{g{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BHbc}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}{e{{A`{BHbc}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}2{{AGhg}{{A`{ANje}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhe}{{A`{BHbc}}}{}{{Id{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{{AGhe}{{A`{BHbc}}}{}{{Id{}{{Cj{{A`{bc}}}}}}}}{{{f{{N`{c}}}}CMh}d{CMjA@h}}{BAf{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{BAfAGh}{{A`{eg}}}{}{{ANj{c}}ALl}{}}0{{AEbDd}{{A`{{l{c}}e}}}Dn{}}{{AEd{f{{l{c}}}}}{{A`{{l{c}}e}}}Dn{}}10{{AEdDdEn}{{A`{{l{c}}e}}}Dn{}}0{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{N`{{Bb{c}}e}}}{{A`{{N`{{AAd{c}}e}}}}}{}BMj}1111111111111111111111111111111{DO`{{A`{CJjBDl}}}}{{{f{DDl}}{f{Bj}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CGd{Ch{DBh}}}{{A`{{BLj{AFn}}n}}}}{{{f{BO`}}c}{{A`{Ojn}}}{{ABd{{f{En}}}{{Ad{{A`{Enn}}}}}}}}{{{f{BO`}}c}{{A`{Ojn}}}{{ABd{{f{{Bb{{f{En}}}}}}}{{Ad{{A`{Enn}}}}}}}}{{BCdc}{{A`{BCdn}}}{{Af{BCd}{{Ad{{A`{BCdn}}}}}}}}{{{f{BO`}}c}{{A`{Ojn}}}{{ABd{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{{f{BO`}}}{{A`{Ojn}}}}{{DJlGf}{{A`{Gfn}}}}{B`{{A`{CJdn}}}}{Fb{{A`{CJfn}}}}{Nd{{A`{CJhn}}}}{c{{A`{{N`{c}}DOb}}}{}}{{AGhGf{Gn{{Cn{Cl}}}}{Ch{Ih}}}{{A`{BHbn}}}}{{ce}{{A`{{N`{ce}}DOb}}}{}BMj}{{}{{A`{{N`{{C@n{c}}}}DOb}}}{}}{c{{A`{{N`{{C@n{e}}c}}DOb}}}BMj{}}10{{{f{Bj}}}{{A`{BHdn}}}}`0{c{{A`{{CNn{{N`{c}}}}DOb}}}{}}{{ce}{{A`{{CNn{{N`{ce}}}}DOb}}}{}BMj}{{{f{BOf}}{f{Df{Gn{B`}}}}}{{A`{bn}}}}{{{f{CCd}}{f{Df{Gn{B`}}}}}{{A`{bn}}}}{{{f{BNb}}{f{Df{Gn{B`}}}}}{{A`{bn}}}}{{{f{DfAb}}Gf{f{{CD`{GfMbA@n}}}}}b}{f{{A`{H`BCj}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BMj}{fAAn}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bj}}}}`{{BMhBMh}BMh}{{{f{AId}}}{{A`{AIdn}}}}{BNlBCd}{{BGf{Ch{{Gn{El}}}}BEn}BGf}{BNnBCd}{BCdBCd}{{{f{BLd}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}2{{BGf{Ch{e}}BEn}BGf{{BAn{BMb}}Jh}{{If{{Bb{c}}}}}}6{{BGf{Ch{{Gn{Dd}}}}BEn}BGf}541{{BGfe}BGf{{BAn{BMb}}Jh}{{If{{Bb{c}}}}}}{{{N`{{AGd{c}}}}}{{A`{cb}}}In}{{{N`{ce}}}cJhBMj}{{{f{DfMj}}Jl}b}{{{f{DfCGd}}{f{DOd}}}b}9{{{f{DOf}}c{f{Bj}}BHd}{{A`{AB`n}}}{{BGn{Dd}}}}0{{{CAn{c}}d}{{CAn{c}}}BLn}{{CBbd}CBb}```{{BMlCFb}BMl}`{{{f{BHb}}}{{Ch{{f{Ih}}}}}}0{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}cJh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{Mj}}}{{f{Jl}}}}{{{f{DAl}}ddDdd}{{A`{AB`n}}}}{{BCddd{f{Bj}}d}BCd}``3{{{f{BHb}}}{{f{{Bb{{Cn{Cl}}}}}}}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}gJh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{BHb}}}DGh}{{BNlB`}BCd}{{BGfB`}BGf}{{BNnB`}BCd}{{{f{AL`}}B`}{{Ch{Aj}}}}{{BCdB`}BCd}{{{f{BLd}}B`}{{Ch{Aj}}}}{{{f{DNd}}B`}Mj}{{{f{BLd}}B`}{{A`{Mjn}}}}``{{{f{DOh}}A@n{f{Df{Gn{Kf}}}}}{{A`{bn}}}}{{{f{DOh}}A@n{f{Df{Bb{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AGd{c}}}}}}g}{{A`{eb}}}In{}{{ABd{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GfA@hBMj}{{{f{COn}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}10{{{f{CEj}}}{{Ch{Fb}}}}{{{f{BHd}}}Hf}`{{{f{BHd}}}d}`{cCH`{{BAn{BCd}}}}{{CHbc}CHd{{BAn{BCd}}}}{{CHfc}CHd{{BAn{BCd}}}}```{{BMlBGf}BMl}{{CKhBCd}CKh}{{{CAn{c}}{f{{N`{{BEf{BBd}}}}}}{Ch{{f{{BEf{BBd}}}}}}d}{{A`{{CAn{c}}n}}}BLn}{{CBb{f{{N`{{BEf{BBd}}}}}}{Ch{{f{{BEf{BBd}}}}}}d}{{A`{CBbn}}}}{{CDn{Ch{{DGb{Gf}}}}}CDn}{{{CAd{c}}{DGb{Gf}}}{{CAd{c}}}CAh}{{{DCd{c}}{DGb{Gf}}}{{DCd{c}}}BLn}{{CDjd}CDj}{Gfc{}}0{{CDjGf}CDj}{{{CO`{c}}{Ch{{DGb{Gf}}}}}{{CO`{c}}}BLn}{{CGdGf}CGd}{{CDj{Ch{CMn}}}CDj}{{CDn{Ch{CMn}}}CDn}{{BGfd}BGf}{{BL`CEn}BL`}1{{BGfBCd}BGf}{{BGfc}BGf{{If{{Bb{BCd}}}}}}{{{DBn{c}}{Ch{{Gn{El}}}}}{{DBn{c}}}BLn}{{{BOb{c}}{Ch{{Gn{El}}}}}{{BOb{c}}}BOd}{{{CAn{c}}{Ch{{Gn{El}}}}}{{CAn{c}}}BLn}{{CGd{Ch{{N`{{Bb{Dd}}}}}}}CGd}`4{{CDj{Ch{Dd}}}CDj}{{CGf{Ch{c}}}CGf{{BAn{CGj}}}}{{{DC`{c}}B@j}{{DC`{c}}}{}}{{{CAj{c}}B@j}{{CAj{c}}}CAh}{{{DC`{c}}{Ch{CIb}}}{{DC`{c}}}{}}{{D@d{Ch{CIb}}}D@d}{{{CAj{c}}{Ch{CIb}}}{{CAj{c}}}CAh}{{{CBd{c}}CJb}{{CBd{c}}}CAh}{{BGfc}BGf{{If{{Bb{BGf}}}}}}{{{CBd{c}}{Ch{Gf}}}{{CBd{c}}}CAh}{{{CAd{c}}{Ch{El}}}{{CAd{c}}}CAh}0{{CKhBCd}CKh}{{CKjBCd}CKj}{{CDjd}CDj}{{CGfd}CGf}{{{f{BO`}}En}{{A`{Ojn}}}}{{CDj{Ch{{N`{{BEf{En}}}}}}}CDj}{{CGd{Ch{{N`{{Gn{En}}}}}}}CGd}{{CDjCGh}CDj}{{CGfCGh}CGf}{{CDjB`}CDj}{{CGfB`}CGf}{{D@dDBh}D@d}{{BLb{Gn{BCd}}}{{A`{BCdn}}}}{{{CAd{c}}{Ch{Gf}}}{{CAd{c}}}CAh}{{{CAd{c}}{Ch{d}}}{{CAd{c}}}CAh}{{CKjBCdBCdBCd}CKj}=={{CGdd}CGd}{{{DBn{c}}{Ch{{Gn{Ab}}}}}{{DBn{c}}}BLn}{{{CAn{c}}{Ch{{Gn{Ab}}}}}{{CAn{c}}}BLn}{{CBb{Ch{{Gn{Ab}}}}}CBb}{{CKhBCdBCdBCd}CKh}5{{CKhBCd}CKh}{{CKjBCd}CKj}{{CDjd}CDj}{{CDnd}CDn}{{{DCd{c}}d}{{DCd{c}}}BLn}{{{CO`{c}}d}{{CO`{c}}}BLn}:{{{DBn{c}}{Ch{{Hj{Dd{N`{Bj}}}}}}}{{DBn{c}}}BLn}{{{CAn{c}}{Ch{{Hj{Dd{N`{Bj}}}}}}}{{CAn{c}}}BLn}{{CBb{Ch{{Hj{Dd{N`{Bj}}}}}}}CBb}{{CDj{Ch{Dd}}}CDj}{{CDn{Ch{Dd}}}CDn}{{CDj{Ch{Gf}}}CDj}{{CDn{Ch{{DGb{Gf}}}}}CDn}{{CGd{Ch{Gf}}}CGd}{{{DCb{c}}DOj}{{DCb{c}}}CAh}{{{DCd{c}}DOj}{{DCd{c}}}BLn}{{{CAd{c}}El}{{CAd{c}}}CAh}>{{CGdd}CGd}{{BBd{DOl{DdDd}}}BBd}{{CKhBCd}CKh}{{CKjBCd}CKj}010{{CDjd}CDj}{{CGfd}CGf}3{{CMlc}CMl{{BAn{{Ch{Gf}}}}}}<{{CDjc}CDj{{BAn{{Ch{Gf}}}}}}{{CDnc}CDn{{BAn{{Ch{Gf}}}}}}{{CDn{Ch{Gf}}}CDn}{{{DBn{c}}{Ch{Gf}}}{{DBn{c}}}BLn}{{{BOb{c}}{Ch{Gf}}}{{BOb{c}}}BOd}{{{CO`{c}}{Ch{Gf}}}{{CO`{c}}}BLn}{{CGd{Ch{Gf}}}CGd}10:>{{CDj{Ch{CGl}}}CDj}{{CGf{Ch{CGl}}}CGf}{{BGfBMh}BGf}{{{CAj{c}}d}{{CAj{c}}}CAh}{{CGdCGf}CGd}{{{CO`{c}}{Ch{e}}}{{CO`{c}}}BLn{{BAn{DBh}}}}{{CGd{Ch{c}}}CGd{{BAn{DBh}}}}{{CMl{N`{{Bb{DBh}}}}}CMl}{{{CO`{c}}{Ch{{N`{BLl}}}}}{{CO`{c}}}BLn}{{{CAn{c}}{Ch{{N`{BLl}}}}}{{CAn{c}}}BLn}{{CBb{Ch{{N`{BLl}}}}}CBb}{{CHnc}CHn{{BAn{{Ch{{N`{BLl}}}}}}}}{{BGfd}BGf}{{{DBn{c}}{Ch{{Gn{Gf}}}}}{{DBn{c}}}BLn}{{{BOb{c}}{Ch{{Gn{Gf}}}}}{{BOb{c}}}BOd}{{{DCd{c}}{Ch{{Gn{Dd}}}}}{{DCd{c}}}BLn}{{{CO`{c}}{Ch{{N`{{Bb{Dd}}}}}}}{{CO`{c}}}BLn}{{{CAn{c}}{Ch{{Gn{Gf}}}}}{{CAn{c}}}BLn}{{CBb{Ch{{Gn{Gf}}}}}CBb}{{CGd{Ch{{N`{{Gn{Gf}}}}}}}CGd}{{CHn{Ch{{N`{{Bb{Dd}}}}}}}CHn}8{{CDj{Ch{B`}}}CDj}{{{CAd{c}}B`}{{CAd{c}}}CAh}{{CGf{Ch{B`}}}CGf}{{{CAd{c}}CHj}{{CAd{c}}}CAh}{{CDjd}CDj}{{CGdd}CGd}{{CMld}CMl}2{{CDnd}CDn}{{{CO`{c}}d}{{CO`{c}}}BLn}3{{BGfd}BGf}{{{CBd{c}}{Ch{Gf}}}{{CBd{c}}}CAh}{{CMlc}CMl{{BAn{{Ch{DJd}}}}}}{{BGfc{Ch{Fb}}}BGf{{BAn{Dd}}}}{{CDjc}CDj{{BAn{{Ch{DJd}}}}}}{{CDj{Ch{DJd}}}CDj}{{CDnc}CDn{{BAn{{Ch{DJd}}}}}}{{CDn{Ch{DJd}}}CDn}{{{DBn{c}}{Ch{DJd}}}{{DBn{c}}}BLn}{{{BOb{c}}{Ch{DJd}}}{{BOb{c}}}BOd}{{{CO`{c}}{Ch{{f{DfDJd}}}}}{{CO`{c}}}BLn}{{{CAn{c}}{Ch{DJd}}}{{CAn{c}}}BLn}{{CBb{Ch{DJd}}}CBb}{{CGd{Ch{DJd}}}CGd}{{CHnc}CHn{{BAn{{Ch{DJd}}}}}}{{CHnc}CHn{{BAn{{Ch{Gf}}}}}}{{{f{BO`}}}{{A`{Ojn}}}}{{CDj{Ch{{N`{{BEf{En}}}}}}}CDj}{{CDn{Ch{{N`{{BEf{En}}}}}}}CDn}{{{DCd{c}}{N`{{BEf{En}}}}}{{DCd{c}}}BLn}{{{CO`{c}}{N`{{BEf{En}}}}}{{CO`{c}}}BLn}{{CGd{Ch{{N`{{BEf{En}}}}}}}CGd}{{CDjc}{{A`{CDjn}}}{{E`{{BEf{En}}}{{Ad{{A`{{BEf{En}}n}}}}}}}}4{{{DCd{c}}{f{{BEf{En}}}}}{{DCd{c}}}BLn}{{{CO`{c}}{f{{BEf{En}}}}}{{CO`{c}}}BLn}3{{CKhBCd}CKh}{{CKjBCd}CKj}{{CDjB`}CDj}{{{CAd{c}}B`}{{CAd{c}}}CAh}{{CGfB`}CGf}{{BGfd}BGf}{{CDjGf}CDj}{{CGdGf}CGd}10{{{CAn{c}}{Ch{{Hj{GfGf}}}}}{{CAn{c}}}BLn}{{CBb{Ch{{Hj{GfGf}}}}}CBb}4{{CMlDKd}CMl}{{CDjDKd}CDj}{{CDnDKd}CDn}{{{CBd{c}}CIh}{{CBd{c}}}CAh}{{BL`{Ch{Dd}}}BL`}{{{CAd{c}}{Ch{El}}}{{CAd{c}}}CAh}{{CKhLd}CKh}{{CKh{Ch{Dd}}}CKh}{{CDjd}CDj}{{CGfd}CGf}10>{{BHb{Ch{Ih}}}BHb}{{{f{BHb}}{Ch{Ih}}}{{Cn{Cl}}}}{{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}{Ch{Ih}}}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}2{{CKjBCd}CKj}{{CKhBCd}CKh}{BGfBGf}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}{{{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}c}e{}{}{}}10{{c{ABl{}{{ABf{c}}{ABh{e}}{ABj{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFn}}}}{f{{Bb{B`}}}}}{{A`{GfBDh}}}}{{{f{Df}}{f{{Bb{B`}}}}}{{A`{b}}}}{{{f{CI`}}AB`c}{{A`{bn}}}CAh}{{{f{CIn}}AB`c}{{A`{bn}}}CAh}{{{f{DfAB`}}{f{ANl}}e{f{g}}Gf}{{A`{bn}}}{{BAn{Dd}}}{{Id{}{{Cj{c}}}}}{DOnInJ`}}{{{f{{N`{c}}}}{f{Dfe}}}{{A`{bI`}}}{E@`E@`A@h}{E@bA@h}}{{{f{{N`{c}}}}{f{Dfe}}}{{A`{bI`}}}{E@`E@`A@h}{E@dA@h}}{{{f{{N`{c}}}}}{{Ed{Bj}}}{E@`E@`A@h}}{{{f{Df}}c}{{A`{GfBDh}}}DLf}{{{f{Df{N`{AFn}}}}{f{{Bb{E@f}}}}}{{A`{GfBDh}}}}{{{f{{N`{c}}}}{f{{Bb{B`}}}}}BAd{E@`E@`A@h}}{{{f{{N`{c}}}}}E@h{E@`E@`A@h}}{{BCdc}BCd{{BAn{BCd}}}}{{{f{BLd}}}{{A`{Mjn}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{D@`}}}{{l{Kl}}}}{{{f{CDf}}}{{A`{{l{Kl}}n}}}}``{{{f{ALh}}{f{{l{Bl}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dn}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{DfAB`}}{f{{Bb{Oj}}}}dd}{{A`{bn}}}}{{{f{CNd}}}CNd}{{f{f{Dfc}}}b{}}{fb}{{{f{E@j}}{f{{Bb{B`}}}}}{{Hj{GfGf}}}}{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0{Gfb}0{{{f{E@j}}{f{{Bb{B`}}}}{f{DfGf}}}{{Hj{GfGf}}}}{{{f{{Bb{B`}}}}{Ch{B`}}B`GfGfGf{Ch{{f{CGj}}}}d}{{A`{Gfn}}}}{{{f{CNd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0{{}Gf}0{{}c{}}0{{{Ch{B`}}B`}E@j}{{{f{Df{N`{{BEf{En}}}}}}{f{Df{Gn{Oj}}}}}{{A`{dn}}}}{{{f{{Bb{B`}}}}B`{f{{BEf{En}}}}d{f{{Bb{Gf}}}}Gf{Ch{B`}}B`{Ch{{f{CGj}}}}GfCGh{Ch{{f{CNd}}}}ddGfGf{Ch{Gf}}d}{{A`{AB`n}}}}{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAn}0{{{f{{Bb{B`}}}}}d}88````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ih}}}Aj}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{{BEf{BBd}}}}{f{{BEf{BBd}}}}}{{A`{bn}}}}{cc{}}{{}Gf}{{}E@l}{{}c{}}{{{Ch{{f{BLl}}}}{f{COf}}{f{{BEf{BBd}}}}}{{A`{dn}}}}{{{f{E@l}}Aj{f{AGh}}}d}{{{Gn{{Hj{{f{DA`}}E@n}}}}BBd{Ch{EA`}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6``{{{f{BHn}}c}Ab{{E`{{Hj{Fb{f{{BI`{Fb}}}}}}}{{Ad{Ch}}}}InJ`}}{{{f{BHn}}c}Ab{{E`{{Hj{Fb{f{{BI`{Fb}}}}}}}{{Ad{}}}}InJ`}}{{{f{{Bb{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{Ch}}}}InJ`}}{{{f{{Bb{{AAd{Fb}}}}}}c}Ab{{E`{{AAd{Fb}}}{{Ad{}}}}InJ`}}{{{f{{Bb{c}}}}e{Ch{BJf}}}{{AMd{c}}}{BJhBJj}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{Bb{c}}}}{f{Ih}}e{Ch{BJf}}}{{AMd{c}}}{BJhBJj}{{D`{}{{Cj{{Hj{FbFb}}}}}}Jj}}{{{f{{l{c}}}}FbFb}{{l{c}}}Dn}{{{f{{Gn{{AAd{Fb}}}}}}{f{{Bb{{Cn{Cl}}}}}}}d}{{{f{BJl}}{f{Cb}}}Ab}{{BJnBJn}BJn}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DnDn{{E`{ff}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}{{E`{f}{{Ad{}}}}}Dn}{{{l{c}}{l{e}}gik}{{l{m}}}DnDn{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}{{E`{}{{Ad{}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DnDn{{ALj{ChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}g}bDnDn{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{Bh}}}DnDn{{Af{{f{DfEl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DnDn{}{{Af{}{{Ad{g}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDn{ClALl}{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DnDnCl{{Af{ff}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DnDnCl{{Af{}{{Ad{g}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DnDn{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDn{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DnDnDn{{ALn{ChChCh}}}Dn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DnDnClAM`{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dn{}{{Ib{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DnDnAM`{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DnDnDn{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dn}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dn{ClALl}AM`{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dn{{AMb{Ch}}}Dn}{{{f{{l{c}}}}e}{{l{g}}}DnAMbDn}{{{f{{l{c}}}}g}{{l{i}}}DnCl{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{l{c}}g}{{l{i}}}DnCl{{Af{}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dn{ClALl}{{Af{f}{{Ad{e}}}}}{{Dn{}{{Ib{e}}}}}}0``{{{f{EAb}}}{{l{Ff}}}}0{{{f{EAb}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{EAb}}{f{{l{Bh}}}}d}{{A`{Abn}}}}{{{f{EAb}}}Ab}{{{f{EAb}}}{{A`{Abn}}}}1{{{f{EAb}}}{{A`{{l{Ff}}n}}}}{{{f{EAb}}}{{l{C`}}}}{{{f{EAb}}{f{Ab}}}{{A`{Abn}}}}{{{f{EAb}}Fd}{{A`{{l{C`}}n}}}}{{{f{EAb}}B`}{{A`{Abn}}}}5{{{f{EAb}}}{{A`{{l{Ah}}n}}}}01{{{f{EAd}}}{{f{{l{C`}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CBjBCd}BCd}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}3{cc{}}{{}Gf}{{}c{}}{CBjBCd}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}4`````````````````````{{{f{DfEAf}}{f{{Bb{B`}}}}ddd}{{A`{bn}}}}{{{f{DfEAf}}d}b}>>>>====;;;;::::9999{{{f{EAf}}}En}99998888{{{f{{Bb{Gf}}}}Gf{f{{BEf{En}}}}{Ch{B`}}CGhd}{{A`{{Gn{EAf}}n}}}}8888{EAf{{A`{Abn}}}}777766665555{{{f{{Bb{B`}}}}}d}::::````````````{{fh}b}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{EAh}}}EAh}{{f{f{Dfc}}}b{}}{fb}{{}EAj}{Gf{{f{c}}}{}}000{Gf{{f{Dfc}}}{}}000{Gfb}000{{{f{EAh}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}00{EAlEAj}{E@nEAj}{EAnEAj}3{{{f{EB`}}{Nf{Gf}}}{{A`{E@nn}}}}{{{f{EAn}}{Nf{Gf}}}{{A`{E@nn}}}}{{{f{EAl}}{Nf{Gf}}}{{A`{E@nn}}}}{{{f{EAj}}{Nf{Gf}}}{{A`{E@nn}}}}{{{f{EB`}}{f{Df{Bb{{Nf{Gf}}}}}}}{{A`{{CD`{GfE@nA@n}}n}}}}{{{f{EAn}}{f{Df{Bb{{Nf{Gf}}}}}}}{{A`{{CD`{GfE@nA@n}}n}}}}{{{f{EAl}}{f{Df{Bb{{Nf{Gf}}}}}}}{{A`{{CD`{GfE@nA@n}}n}}}}{{{f{EAj}}{f{Df{Bb{{Nf{Gf}}}}}}}{{A`{{CD`{GfE@nA@n}}n}}}}{{{f{EB`}}}{{A`{Gfn}}}}{{{f{EAn}}}{{A`{Gfn}}}}{{{f{EAl}}}{{A`{Gfn}}}}{{{f{EAj}}}{{A`{Gfn}}}}{{}Gf}000{{}c{}}000{fc{}}{{{f{EAh}}{f{Bj}}{Ch{{f{CMn}}}}}{{A`{EAjn}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{fAAn}000{{{f{EAj}}}{{f{Bj}}}}6666````````{{{f{BOl}}{Ch{{f{Bj}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{COn}}}{{l{O`}}}}{{{f{D@`}}}{{l{O`}}}}{{{f{D@b}}}{{l{Lb}}}}`{{{f{DG`}}}{{l{O`}}}}21{{{f{COn}}}{{l{Bl}}}}{{{f{D@`}}}{{l{Bl}}}}{{{f{COn}}}{{l{Kl}}}}{{{f{D@`}}}{{l{Kl}}}}55`46576{{{f{DG`}}}{{l{Kl}}}}16{{{f{COn}}}{{l{Od}}}}{{{f{D@`}}}{{l{Od}}}}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{L`{KnKl}}}}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}}{{L`{LnLb}}}}{{Dd{f{{Bb{{f{Bj}}}}}}{f{Bj}}Ld}{{L`{LfLb}}}}=<{{{f{DLn}}A@b}{{A`{Abn}}}}{{{f{DLn}}{f{Ab}}CEb}{{A`{Abn}}}}101010101010<>=`?>>`98`````````{{fh}b}{{{f{BOl}}{Ch{{f{Bj}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}Lddd{Ch{{f{Dd}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BOl}}{Ch{{f{Bj}}}}Ldd{Ch{{f{Dd}}}}{f{{l{Bh}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{EBb}}}{{f{{l{Bh}}}}}}{{{f{BOl}}{Ch{{f{Bj}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EBd}}}EBd}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{EBd}}{f{EBd}}}d}{{f{f{c}}}d{}}00{{{f{EBd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{EBd}}{f{Dfc}}}bAE`}`{{}Gf}{{}c{}}{{{f{EBd}}{f{Bj}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{EBf{c}}}}}{{EBf{c}}}{JhAl}}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{cc{}}{{{f{Bj}}}{{Ch{EBd}}}}{{}Gf}{{}c{}}`{{{f{Df{EBf{c}}}}{f{Bj}}}ChAl}{{{f{DfEBh}}{f{{Bb{B`}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{EBf{Kl}}}}{f{{Bb{B`}}}}{Ch{Ld}}}{{Ch{Nd}}}}{{{f{Df{EBf{Lb}}}}{f{{Bb{B`}}}}{Ch{Ld}}}{{Ch{Hf}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{EBl{}{{EBj{e}}}}n}}}{}{}}{{EBd{Ch{Ld}}}{{A`{{EBf{Kl}}n}}}}{{EBd{Ch{Ld}}}{{A`{{EBf{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAn};````````````{{fh}b}0{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000`{{{f{CMn}}{f{Bj}}}{{A`{{`{CNh}}n}}}}{{{f{Bj}}{Ch{{f{CMn}}}}d}{{A`{{Hj{EBn{N`{CNh}}}}n}}}}{{{f{CMn}}}CMn}{{{f{EC`}}}EC`}{{f{f{Dfc}}}b{}}0{fb}0`{{}EBn}{{}CMn}{Gf{{f{c}}}{}}0000{Gf{{f{Dfc}}}{}}0000{c{{A`{CMn}}}ADn}{{{f{EC`}}{f{CNj}}{f{DfECb}}}{{A`{bn}}}}{{{f{DfECd}}}b}{Gfb}0000{{{f{EBn}}{f{EBn}}}d}{{{f{CMn}}{f{CMn}}}d}{{{f{ECf}}{f{ECf}}}d}{{f{f{c}}}d{}}00{{{f{Df}}c}{{A`{{f{Dfe}}BDh}}}DBf{}}``{{{f{DfECd}}}{{A`{bBDh}}}}{{{f{Df}}}{{A`{b}}}}{{{f{EBn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{CMn}}{f{DfHn}}}{{A`{bI`}}}}{{{f{EC`}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}0000{{{f{Bj}}}{{A`{ECf}}}}{{{f{Bj}}g}{{A`{CMnn}}}{{If{Bj}}}{{BAn{El}}}{{Id{}{{Cj{{Hj{ce}}}}}}}}{{{f{ECh}}d}{{A`{EBnn}}}}{{{f{EC`}}{f{CNj}}{Nf{Gf}}}{{A`{ECjn}}}}{{{f{EC`}}{f{CNj}}{f{Df{Bb{{Nf{Gf}}}}}}}{{A`{{CD`{ceA@n}}n}}}{{ECl{Gf}{{EBj{{`{AGl}}}}}}DFlECn}{{AOj{ECj}}}}{{{f{Bj}}{Ch{{f{CMn}}}}}{{A`{{Gn{El}}n}}}}{{{f{CMn}}{f{Dfc}}}bAE`}{{{f{EC`}}{f{CNj}}}{{A`{ED`n}}}}{{}Gf}0000{{}c{}}0000`{{{f{Bj}}{Ch{{f{CMn}}}}}{{A`{ECdn}}}}{{{f{Bj}}d}{{A`{EBnn}}}}{{{N`{CNh}}}EC`}{{{N`{CNh}}CNj}{{A`{ECdn}}}}{{{f{Bj}}}{{A`{CNjn}}}}``{{{f{Df}}c}{{A`{{f{Dfe}}BDh}}}DBf{}}`{{{f{CMn}}c}A`A@f}{{{f{Df}}g}{{A`{eBDh}}}{}{}{{ABd{{f{Dfc}}}{{Ad{e}}}}}}{fc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{fAAn}0000<<<<<{{CMn{Ch{EDb}}}CMn}{{CMnGf}CMn}{{{f{DfECd}}{f{{Bb{B`}}}}}{{A`{GfBDh}}}}{{{f{Df}}{f{{Bb{B`}}}}}{{A`{b}}}}{{{f{Df}}c}{{A`{GfBDh}}}DLf}``````{{fh}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{EDb}}}EDb}{{{f{EDd}}}EDd}{{f{f{Dfc}}}b{}}0{fb}0{Gf{{f{c}}}{}}00{Gf{{f{Dfc}}}{}}00{c{{A`{EDb}}}ADn}{Gfb}00{{{f{EDb}}{f{EDb}}}d}{{{f{EDd}}{f{EDd}}}d}{{f{f{c}}}d{}}00000{{{f{EDb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{EDd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}00{cEDb{{E`{}{{Ad{{CNn{{Cn{CNl}}}}}}}}InJ`}}{{{f{EDb}}{f{Dfc}}}bAE`}{{{f{EDd}}{f{Dfc}}}bAE`}{{}Gf}00{{}c{}}00{{{f{EDb}}c}A`A@f}{fc{}}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAn}00555``````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bb{B`}}}}}{{Ch{EDf}}}}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{cc{}}=<{{{f{{Bb{B`}}}}{f{Df{Gn{B`}}}}}{{A`{{f{{Bb{B`}}}}n}}}}:98={{{f{{Bb{Fj}}}}{f{En}}}{{A`{Fjn}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eANh{}{{Id{}{{Cj{c}}}}}}0{{AGhe}ANj{}{{Id{}{{Cj{c}}}}}}0{{{f{AO`}}}{{f{En}}}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{Ch{{f{{Bb{c}}}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANd}}{f{ANd}}c}{{A`{ANdn}}}B@`}{{{f{B@b}}{f{En}}}{{A`{Abn}}}}{{{f{B@b}}{f{En}}Gb}{{A`{Abn}}}}`{BAfe{}{{ANh{c}}ALl}}0{{BAfAGh}e{}{{ANj{c}}ALl}}0{{{AOl{Bj}}}En}{{{f{B@b}}}{{f{En}}}}``{{B@`{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}{{{Gn{c}}AGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{Gn{c}}AGh}{{ALl{}{{AOb{e}}{AOd{c}}{AOf{g}}}}}{AOh{AOj{e}}}Jh{{Hd{}{{Cj{e}}}}JjInJ`}}{{GfcAGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{GfAGh}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{B@b}}Gf}{{A`{Jln}}}}{{{f{B@b}}Gf}Jl}{{}En}{{{f{BBn}}Gf}Jl}4{{BC`En}{{A`{Mjn}}}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{AH`{cgAGn}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}{{Ch{c}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{{{f{ANd}}{f{ANd}}}{{A`{{Hj{ANdANd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{En}}{f{En}}}{{A`{Enn}}}}`{{}c{}}0{g{{A`{ANhe}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{{AGhg}{{A`{ANje}}}{}{}{{Id{}{{Cj{{A`{ce}}}}}}}}0{BAf{{A`{eg}}}{}{{ANh{c}}ALl}{}}0{{BAfAGh}{{A`{eg}}}{}{{ANj{c}}ALl}{}}0{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}Gf}cJh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}0{{{f{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}}}gJh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}{Gfc{}}0{{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}{Ch{Ih}}}{{ALl{}{{AOb{c}}{AOd{e}}{AOf{g}}}}}Jh{AOh{AOj{c}}}{{Hd{}{{Cj{c}}}}JjInJ`}}```````````{{{f{ANd}}{f{ANd}}c}{{A`{ANdn}}}B@`}{{B@`{f{{l{Ff}}}}{f{{l{Ff}}}}}{{A`{{l{Ff}}n}}}}=<`````````{{}b}0{{}d}`{{{f{{L`{LfLb}}}}{f{{l{Bh}}}}CMf{Gj{Hf}{{Ad{AMn}}}}{Gj{AMn}{{Ad{Hf}}}}{f{AN`}}{f{AN`}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bj}}}}{Gj{Hf}{{Ad{AMn}}}}{Gj{AMn}{{Ad{Hf}}}}{f{AN`}}{f{AN`}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bj}}}}{f{{l{Bh}}}}CMf}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Ih}}}DDn{}}{{{DE`{Hf}}{DE`{B`}}{Ch{Ih}}}DEb}{{{DE`{Hf}}{DE`{B`}}{Ch{Ih}}}DEd}`{DAhBCd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{DAhLd}BCd}3{{DAhBCdLd}BCd}{{DAhDd}BCd}555{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}8{cc{}}9{{}Gf}{{}c{}};;;;;;;;;;{{DAh{Ch{Dd}}BCdCMf}BCd}{{DAhBCd}BCd}={{DAh{f{Bj}}}BCd}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{DAhBCd}0?0`{{{f{BK`}}{f{AB`}}{f{Cb}}}{{A`{Abn}}}}{{{f{BK`}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}EDh}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{EDh{Ch{{f{AGh}}}}}{{A`{AF`n}}}}{cc{}}{{}Gf}{{}c{}}{{{f{EDh}}}d}{{GfGf}EDh}{{{f{DfEDh}}{Cn{Cl}}}b}{{{f{DfEDh}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}7`{{{f{{l{c}}}}}GfAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDj}}}EDj}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{c{{A`{EDj}}}ADn}{Gfb}{{{f{EDj}}{f{EDj}}}d}{{{f{EDj}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{EDj}}{f{Dfc}}}bAE`}{{}Gf}{{}c{}}{{{f{EDj}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCj}}}}{fAAn}7````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDl}}}EDl}{{f{f{Dfc}}}b{}}{fb}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{c{{A`{EDl}}}ADn}{Gfb}{{{f{EDl}}{f{EDl}}}d}{{{f{EDl}}{f{DfHn}}}{{A`{bI`}}}}0{cc{}}{{{f{EDl}}{f{Dfc}}}bAE`}{{}Gf}{{}c{}}{{{f{EDl}}c}A`A@f}{fc{}}{fEl}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{H`BCj}}}}{fAAn}7{{MbMb}Mb}{{{f{{l{Ff}}}}Fb}{{A`{bn}}}}{{{f{{AMd{Fb}}}}Fb}{{A`{bn}}}}```{{{f{Ab}}CFl}Ab}{{{f{Fj}}{f{Fj}}d}{{A`{Fjn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{E`{}{{Ad{}}}}Eb}}{{{f{Ab}}{f{Cb}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{EDn}}}{{f{AGj}}}}{{{f{DfEDn}}}{{Cn{Cl}}}}{{{f{DfEDn}}}{{f{DfAGj}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{EDn}}}EDn}{{f{f{Dfc}}}b{}}{fb}{{}EDn}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{EDn}}}{{f{AGh}}}}{{{f{DfEDn}}Gf}b}{{{f{EDn}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{}Gf}{{}c{}}{{{f{EDn}}}Gf}{GfEDn}{{{f{DfEDn}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}{{{f{EDn}}}{{Ch{{f{EE`}}}}}}8{{{f{{Bb{Fj}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{AMfn}}}}{{{f{{Bb{Fj}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{Kb{Hf}}n}}}}{{Dd{f{{Bb{Fj}}}}{f{{Bb{d}}}}{f{{Bb{d}}}}}{{A`{{l{Fh}}n}}}}{{Dd{f{{Bb{Ab}}}}}{{A`{{l{Fh}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bb{Ab}}}}}{{A`{AMfn}}}}{{{f{{Bb{Ab}}}}}{{A`{{l{Fh}}n}}}}00{{{f{En}}}{{Ch{AMh}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DOd}}}DOd}{{f{f{Dfc}}}b{}}{fb}{{}DOd}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{{{f{{BF`{EnA@n}}}}}En}{{{f{DOd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DOd}}}Gf}{{{f{DOd}}}{{N`{{BEf{En}}}}}}{{{f{Bj}}dd}En}{{{f{DFh}}B`{Ch{Gf}}d{Ch{{f{{BEf{En}}}}}}GfGf{Ch{{f{CGj}}}}{Ch{B`}}B`{Ch{{f{CGl}}}}dd{f{Df{Ch{Gf}}}}d}{{A`{{Hj{{BEf{En}}GfGf}}n}}}}{{}Gf}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DFh}}{f{CGd}}}{{A`{DOdn}}}}{{}{{A`{c}}}{}}{fAAn}5{{DOd{N`{{BEf{En}}}}}DOd}````{{{f{{l{c}}}}eAMjd}{{Gn{Fb}}}Dn{{D`{}{{Cj{Ch}}}}}}{{{f{{Bb{f}}}}cFbe}{{Gn{Fb}}}{{D`{}{{Cj{Ch}}}}}{{E`{fGff}{{Ad{d}}}}}}``{{{f{EEb}}}{{f{Ab}}}}{{{f{CDf}}}{{A`{{l{Kl}}n}}}}{{{f{CDf}}}{{A`{{l{O`}}n}}}}0{{{f{CDf}}}{{A`{{l{Bl}}n}}}}22112{{{f{CDf}}}{{A`{{l{Od}}n}}}}322{{{f{CDf}}{f{Bj}}}{{A`{Abn}}}}{{{f{CDf}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gf{f{Df{Gn{d}}}}}b}```{{{f{AKn}}GfGf}AKn}0{{Gf{f{{Bb{Fj}}}}{f{DfFl}}}{{A`{{AMl{{l{Ff}}}}n}}}}`````````````11```{{{f{C@l}}}{{f{{l{Bh}}}}}}{{{f{CA`}}}{{A`{{l{Bh}}n}}}}{{{f{CA`}}}{{l{Bh}}}}{{{f{CA`}}{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{CA`}}{f{Bj}}d}{{A`{{l{Bl}}n}}}}{{{f{CA`}}{f{{l{Bh}}}}dd}{{A`{{l{Bl}}n}}}}{{{f{CA`}}{f{Bj}}}{{A`{{l{Bl}}n}}}}{{{f{CA`}}{f{Bj}}d}{{A`{{l{Ff}}n}}}}{{{f{CA`}}{f{{l{Bh}}}}d}{{A`{{l{Ff}}n}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{Bj}}}El}{{{f{CA`}}{f{{l{Bh}}}}Gf}{{A`{{l{Bh}}n}}}}{{{f{CA`}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{CA`}}{f{{l{Bh}}}}}{{A`{{l{Ah}}n}}}}{{{f{CA`}}{f{Bj}}{f{En}}}{{A`{Abn}}}}7{{{f{CA`}}{f{{l{Bh}}}}dd}{{A`{{l{Ff}}n}}}}{{{f{CA`}}{f{Bj}}}{{A`{{l{Ff}}n}}}}?>{{{f{{Bb{{f{{l{Bh}}}}}}}}{f{Bj}}d}{{A`{{l{Bh}}n}}}}{{{f{CA`}}{f{Bj}}{f{Bj}}}{{A`{{l{Bh}}n}}}}0{{{f{CA`}}{f{Bj}}{f{Bj}}Gf}{{A`{{l{Bh}}n}}}}1{{{f{CA`}}{f{{l{Bh}}}}}{{l{Ah}}}}{{{f{CA`}}{f{{l{Bh}}}}Gf}{{A`{{l{j}}n}}}}0{{{f{{l{Bh}}}}{f{{l{Bh}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bj}}}}}}}{{E`{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{{l{Bh}}}}{f{{l{Bh}}}}Gfed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bj}}}}}}}{{E`{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{CA`}}{f{Bj}}}{{l{Bl}}}}{{{f{CA`}}{f{{l{Bh}}}}}{{l{Bl}}}}{{{f{CA`}}}{{l{Bh}}}}{{{f{CA`}}{f{Fj}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bh}}}}{f{Bj}}d}{{l{Bh}}}}{{{f{CA`}}}{{l{Ff}}}}03{{{f{CA`}}{f{Fj}}{f{Fj}}}{{A`{{l{Bh}}n}}}}3{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bh}}}}404040{{{f{CA`}}{f{{l{Bh}}}}}{{l{Bh}}}}10{{{f{CA`}}{f{{l{Ff}}}}d}{{A`{{l{Lb}}n}}}}777````````{{eGfGf}{{EEd{Hf}}}{{If{Bj}}}{{D`{}{{Cj{c}}}}}}{{eGfGf}{{Kb{Hf}}}{{If{{Bb{B`}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BLd}}}Aj}{{Dd{Gn{{Cn{Cl}}}}{f{AGh}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{AGh}}{Ch{{f{{DOl{DdDd}}}}}}}{{A`{Abn}}}}{{Abc}{}{BdMh}}{{{f{Ab}}c}{}{BdMh}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}`{{{f{BLd}}}{{A`{Mjn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{BLd}}}{{A`{Fbn}}}}{{{f{Ab}}}{{Ch{Gf}}}}0{{{f{BLd}}Fd}{{l{Ff}}}}{{{f{BLd}}}{{A`{{l{Ff}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Ab}}Gf}{{f{{Cn{Cl}}}}}}{{{f{BLd}}}{{f{AGj}}}}{{{f{DfBLd}}}{{f{DfAGj}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBLd}}}{{f{Df{l{c}}}}}Dn}{{{f{BLd}}}{{f{{l{c}}}}}Dn}{{{f{Ab}}}{{f{BLd}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBLd}}}{{A`{Gfn}}}}{{{f{DfAb}}}{{A`{Gfn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fh}}}}n}}}}{{{f{Ab}}Ab}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{Ab{f{Ab}}}}13203102{{{f{Ab}}}{{A`{{f{{l{Bl}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BLd}}}{{Ch{{Cn{G`}}}}}}{{{f{BLd}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}0{{{f{Ab}}{f{En}}Gb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{ANd}}n}}}}{{{f{BLd}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bf}{{{f{BLd}}}{{Gl{{Gh{{Cn{Cl}}}}{Gj{{f{{Cn{Cl}}}}}{{Ad{Gf}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gf}}}}}}}}{{{f{BLd}}}{{f{{Gn{{Cn{Cl}}}}}}}}{{{f{DfBLd}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gn{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BLd}}}{{N`{BLd}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gf{{f{c}}}{}}00{{{f{Ab}}}f}1{Gf{{f{Dfc}}}{}}000{c{{A`{Mb}}}ADn}{c{{A`{Ab}}}ADn}{{AbAb}}{{Abc}{}{BdMh}}{{{f{Ab}}c}{}{BdMh}}{{{f{Ab}}{f{Ab}}}}{Gfb}000{{{f{BLd}}}Ab}{{{f{BLd}}}{{f{En}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}7{{{f{Ab}}c}{}BB`}{{{f{Ab}}{f{Bj}}}{{A`{{l{Bl}}n}}}}2{{{f{Ab}}{f{Bj}}}}:244{{f{f{c}}}d{}}00{{{f{Ab}}}Gf}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JlGf}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{BLd}}}{{Ed{Oj}}}}{{{f{Ab}}AIh}{{A`{Abn}}}}{{{f{BLd}}{f{{l{Bl}}}}}{{A`{Abn}}}}{{{f{BLd}}}Mj}{{{f{Mb}}{f{DfHn}}}{{A`{bI`}}}}{{{f{Ab}}{f{DfHn}}}{{A`{bI`}}}}0{{{f{Ab}}}El}{cc{}}00{{{l{c}}}AbDn}{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LnLb}}}Ab}{EEfAb}6{{Dd{f{{Bb{Jl}}}}d}{{A`{Abn}}}}{{Dd{f{{Bb{Jl}}}}{f{En}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gn{{Cn{Cl}}}}{f{En}}}Ab}{cAb{{Id{}{{Cj{{f{Kf}}}}}}}}{cAb{{Id{}{{Cj{Fb}}}}}}{cAb{{Id{}{{Cj{{Ch{El}}}}}}}}{cAb{{Id{}{{Cj{d}}}}}}{cAb{{Id{}{{Cj{Of}}}}}}{cAb{{Id{}{{Cj{{Ch{d}}}}}}}}{cAb{{Id{}{{Cj{{f{Of}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nd}}}}}}}}{cAb{{Id{}{{Cj{Nd}}}}}}{cAb{{Id{}{{Cj{{f{Nd}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Of}}}}}}}}{cAb{{Id{}{{Cj{{f{Bj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Hf}}}}}}}}{cAb{{Id{}{{Cj{B`}}}}}}{cAb{{Id{}{{Cj{{f{B`}}}}}}}}{cAb{{Id{}{{Cj{Hf}}}}}}{cAb{{Id{}{{Cj{{f{Hf}}}}}}}}{cAb{{Id{}{{Cj{El}}}}}}{cAb{{Id{}{{Cj{{f{Ob}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Nl}}}}}}}}{cAb{{Id{}{{Cj{{f{d}}}}}}}}{cAb{{Id{}{{Cj{Ob}}}}}}{cAb{{Id{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Ob}}}}}}}}{cAb{{Id{}{{Cj{Kd}}}}}}{cAb{{Id{}{{Cj{Nl}}}}}}{cAb{{Id{}{{Cj{{Ch{{f{Bj}}}}}}}}}}{cAb{{Id{}{{Cj{{f{Nl}}}}}}}}{cAb{{Id{}{{Cj{{f{Kd}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{Fb}}}}}}}}{cAb{{Id{}{{Cj{Aj}}}}}}{cAb{{Id{}{{Cj{Kf}}}}}}{cAb{{Id{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Id{}{{Cj{{f{Fb}}}}}}}}{cAb{{Id{}{{Cj{{f{Aj}}}}}}}}{cAb{{Id{}{{Cj{{Ch{B`}}}}}}}}{{Dd{Gn{Aj}}}Ab}{{Dd{Gn{Nd}}}Ab}{{Dd{Gn{B`}}}Ab}{{Dd{Gn{Kd}}}Ab}{{Dd{Gn{Nl}}}Ab}{{Dd{Gn{Ob}}}Ab}{{Dd{Gn{Kf}}}Ab}{{Dd{Gn{Oh}}}Ab}{{Dd{Gn{Fb}}}Ab}{{Dd{Gn{Hf}}}Ab}{{Dd{Gn{Of}}}Ab}{{DdGf{f{En}}}Ab}{{{f{Ab}}GfGf}Ab}{{{f{BLd}}Gf}{{A`{Jln}}}}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BLd}}}{{Ch{{Nb{G`}}}}}}{{{f{BLd}}Gf}{{Ch{{f{K`}}}}}}{{{f{BLd}}GfGf}{{Ch{{f{K`}}}}}}{{{f{BLd}}Gf}Jl}{{{f{Ab}}c}{}BB`}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}{f{Bj}}}}102{{{f{BLd}}}d}{{{f{Mb}}{f{Dfc}}}bAE`}{{{f{Ab}}{Ch{Gf}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Od}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{O`}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gf}000{{}c{}}000{Ab{{Gn{{Cn{Cl}}}}}}{{}Fj}{AbAB`}3{BGhAb}{AbAb}?{{{f{Ab}}}{{A`{{l{Bl}}n}}}}000{{{f{BLd}}}{{l{Bl}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}EEh}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BLd}}}Mj}{{{f{BLd}}}Gf}{{{f{Ab}}}Gf}{{{f{BLd}}Gf}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ab}}}{{Hj{{Gn{{Hh{Hf}}}}{Gn{{Ch{Ih}}}}}}}}{{{f{Ab}}}Ab}{AbBCd}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}BB`}{{{f{Ab}}{f{Bj}}}}120{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BLd}}}{{A`{Mjn}}}}{{{f{BLd}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}12326{{{f{Ab}}c}{}{BdMh}}{{Abc}{}{BdMh}}{{AbAb}}{{{f{BLd}}}Gf}{{{f{Ab}}}Gf}{{{f{BLd}}}{{A`{Gfn}}}}{{{f{BLd}}}{{f{Dd}}}}{{Ddc}Ab{{If{{Bb{AMn}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{{Ed{{Bb{B`}}}}}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{B`}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Nl}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Fb}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Kf}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{{Gn{B`}}}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Ob}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{El}}}}}}}}{{Ddc}Ab{{If{{Bb{Aj}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Of}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Nd}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Hf}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Oh}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Kd}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Aj}}}}}}}}{{Dd{Nf{Hf}}}Ab}{{Dd{Nf{Nd}}}Ab}{{Ddc}Ab{{If{{Bb{El}}}}}}{{Dd{Nf{Kf}}}Ab}{{Dd{Nf{Fb}}}Ab}{{Ddc}Ab{{If{{Bb{{Gn{B`}}}}}}}}{{Ddc}Ab{{If{{Bb{d}}}}}}{{Ddc}Ab{{If{{Bb{Ab}}}}}}{{Ddc}Ab{{If{{Bb{B`}}}}}}{{Ddc}Ab{{If{{Bb{Nl}}}}}}{{Ddc}Ab{{If{{Bb{Fb}}}}}}{{Ddc}Ab{{If{{Bb{Kf}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bb{{f{Bj}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bb{Ob}}}}}}{{Ddc}Ab{{If{{Bb{Of}}}}}}{{Ddc}Ab{{If{{Bb{Nd}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{{f{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bb{Hf}}}}}}{{Ddc}Ab{{If{{Bb{{Ed{Bj}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{{Ed{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bb{{f{{Bb{B`}}}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{{f{{Bb{B`}}}}}}}}}}}}{{Ddc}Ab{{If{{Bb{Oh}}}}}}{{Ddc}Ab{{If{{Bb{Kd}}}}}}{{Ddc}Ab{{If{{Bb{Jl}}}}}}{{Ddc}AbBGh}{{Ddc}Ab{{If{{Bb{{Ch{ANb}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{d}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{BBj}}}}}}}}{{Ddc}Ab{{If{{Bb{BBj}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{AMn}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ed{{Bb{B`}}}}}}}}}}{{Ddc}Ab{{If{{Bb{{Ch{BBl}}}}}}}}{{Ddc}Ab{{If{{Bb{BBl}}}}}}{{Ddc}Ab{{If{{Bb{ANb}}}}}}{{Dd{f{En}}}Ab}{{{f{BLd}}GfGf}Ab}{{DdGf}Ab}{{{f{DfEEh}}}Ch}{{{f{{AIj{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{}BB`}{{{f{Ab}}{f{Bj}}}{{A`{{l{Bl}}n}}}}{{{f{Ab}}{f{Ab}}}}302{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}}{{A`{{f{ADj}}n}}}}{{{f{BLd}}}Gf}`{{{f{BLd}}}{{A`{Mjn}}}}{{{f{Ab}}}{{Cn{Jf}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BLd}}AjA@`}{{A`{Mjn}}}}{{{f{BLd}}}Ab}{{{f{BLd}}}{{Ch{Ih}}}}{{{f{Ab}}c}{}{BdMh}}{{Abc}{}{BdMh}};{{{f{DfBLd}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bb{BA`}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BLd}}{f{E`}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gfdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gf}Ab}{{{f{Mb}}c}A`A@f}{{{f{Ab}}c}A`A@f}{{{f{DfAb}}Mb}b}{{{f{BLd}}Hf}Ab}{{{f{DfBLd}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{EEh}}}{{Hj{Gf{Ch{Gf}}}}}}{{{f{BLd}}HfGf}Ab}{{{f{Ab}}HfGf}Ab}{{{f{Ab}}Fd}{{A`{Abn}}}}{{{f{BLd}}Fd}{{A`{Abn}}}}{{{f{BLd}}Hf}{{Hj{AbAb}}}}{{{f{Ab}}Hf}{{Hj{AbAb}}}}{{{f{BLd}}B`}{{Ch{Aj}}}}{{{f{BLd}}B`}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ab}}Gf}{{A`{{Ed{Bj}}n}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{AbAb}}{{Abc}{}{BdMh}}{{{f{Ab}}c}{}{BdMh}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BLd}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gf}}}Ab}{{{f{BLd}}{f{{l{Ff}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bb{A@j}}}}Mb}Ab}{{{f{Ab}}{f{{Bb{A@j}}}}}Ab}{{{f{BLd}}{f{{Bb{Fb}}}}}{{A`{Abn}}}}{{{f{BLd}}{f{{Bb{Fb}}}}}Ab}{{{f{BLd}}{f{{l{Ff}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GfB@j}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bj}}}}d}{{A`{AB`n}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}{f{En}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Ed{Ab}}}}{fEl}{{AbAb}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{C`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{An}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Fh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Bl}}}}}}}}{{{f{Ab}}}{{Ch{{f{ANd}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{KnKl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LfLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LjLh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{L`{LlLb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ej}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Eh}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hj{{f{BBd}}{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hj{{f{BBd}}{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hj{Dd{Gn{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{f{Ab}}}{{Ch{{f{{l{Od}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Kl}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Lb}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{O`}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Ff}}}}}}}}{{}{{A`{c}}}{}}000{{{f{Ab}}}{{Ch{{f{{l{Ah}}}}}}}}{{AbAb}{{A`{Abn}}}}{{Ddc}{{A`{Ab}}}{}}{{{f{Ab}}}{{Ch{{f{ADj}}}}}}{{{f{DfAb}}{Kh{c}}}dDn}{{{f{Ab}}}{{Ch{{f{{l{Bh}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{j}}}}}}}}5{{{f{Ab}}}{{Ch{{f{{L`{LnLb}}}}}}}}{f{{A`{H`BCj}}}}{{{f{Ab}}}{{Ch{{f{{l{Nj}}}}}}}};{{{f{Ab}}}{{Ch{{f{{l{Nn}}}}}}}}{{{f{Ab}}}{{Ch{{f{{l{Nh}}}}}}}}{fAAn}000{{{f{Ab}}}{{A`{{f{{l{Nj}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ff}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{BLd}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BLd}}}{{A`{{f{{l{c}}}}n}}}Dn}{{{f{BLd}}B`}{{Ch{Aj}}}}{{{f{BLd}}B`}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{BdMh}}{{{f{BLd}}}{{A`{Mjn}}}}{{{f{Ab}}{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ef}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ef}}}Ef}{{f{f{Dfc}}}b{}}{fb}{{{f{Ef}}}Ab}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{Gfb}{cc{}}{{}Gf}{{}c{}}{{{EEj{Ab}}}Ef}{{{f{DfEf}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}6{{{f{DfEf}}{f{Df{Cn{Cl}}}}e}c{}{{E`{{f{Ef}}}{{Ad{c}}}}}}``````{{fh}b}0{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{}EEl}{{}EEn}{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0`{{{f{EEl}}}EEl}{{{f{EEn}}}EEn}{{f{f{Dfc}}}b{}}0{fb}0{Gf{{f{c}}}{}}0{Gf{{f{Dfc}}}{}}0<;:98{Gfb}0{{{f{EEl}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{EEn}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}>={cc{}}0{{}Gf}0{{}c{}}0{{{BM`{}{{Ad{c}}}}{f{Ab}}}c{}}{{}EEl}{{}EEn}{{{f{BMd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}4321043210{fc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAn}099``{{{f{CDh}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Gd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CDh}}c}{{A`{Abn}}}Bf}{{{f{{l{Gd}}}}c}{{A`{Abn}}}Bf}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DAd}}}DAd}{{f{f{Dfc}}}b{}}{fb}{{}DAd}{Gf{{f{c}}}{}}{Gf{{f{Dfc}}}{}}{c{{A`{DAd}}}ADn}{Gfb}{{{f{DAd}}{f{DAd}}}d}{{f{f{c}}}d{}}00{{{f{DAd}}{f{DfHn}}}{{A`{bI`}}}}{cc{}}{{{f{DAd}}{f{Dfc}}}bAE`}{{}Gf}{{}c{}}{{{f{DAd}}c}A`A@f}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAn}5","D":"AEIhCIh","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",12772],[5,"StructType",2040,12773],[5,"ChunkedArray",17,12774],[6,"PolarsError",3665,12775],[6,"Result",12776],[5,"Series",12159,12777],[17,"Output"],[10,"FnMut",12778],[5,"ListType",2040,12773],[1,"f64"],[10,"PolarsNumericType",2040,12773],[5,"BinaryType",2040,12773],[1,"u8"],[1,"slice"],[10,"Num",12779],[10,"ToPrimitive",12780],[5,"StringType",2040,12773],[1,"str"],[5,"BooleanType",2040,12773],[10,"NumOpsDispatchInner",12666,12781],[5,"FixedSizeListType",2040,12773],[6,"GroupsProxy",4373,12782],[5,"ObjectType",2040,12773],[10,"PolarsObject",1571,12783],[6,"Option",12784],[17,"Item"],[10,"Array",12785],[5,"Box",12786],[10,"Iterator",12787],[5,"AmortizedListIter",12788],[5,"PlSmallStr",2040,12789],[0,"mut"],[17,"IsNested"],[5,"FalseT",2040,12773],[17,"IsObject"],[10,"PolarsDataType",2040,12773],[10,"Fn",12778],[10,"Copy",12790],[6,"Cow",12791],[5,"AmortSeries",12642,12792],[5,"Float64Type",2040,12773],[5,"Float32Type",2040,12773],[5,"String",12793],[6,"DataType",2040,12794],[5,"View",12795],[1,"u32"],[5,"SortOptions",1701,12796],[5,"UInt32Type",2040,12773],[5,"BinaryOffsetType",2040,12773],[6,"Column",4059,12797],[5,"SortMultipleOptions",1701,12796],[10,"PolarsIntegerType",2040,12773],[10,"MetadataTrait",1285,12798],[6,"CastOptions",1177,12799],[10,"NumOpsDispatchCheckedInner",12737,12800],[1,"usize"],[5,"Iter",12801],[1,"fn"],[5,"Map",12802],[5,"Vec",12803],[5,"CompactString",12804],[5,"MetadataProperties",1285,12805],[10,"DoubleEndedIterator",12806],[1,"i64"],[5,"OffsetsBuffer",12807],[1,"tuple"],[17,"HasViews"],[5,"Formatter",12808],[5,"Error",12808],[17,"Array"],[10,"IntoIterator",12809],[10,"AsRef",12810],[5,"Bitmap",12811],[10,"PolarsAsRef",12812],[10,"Borrow",12813],[10,"Send",12790],[10,"Sync",12790],[10,"NoOption",12814],[10,"IntoParallelIterator",12815],[10,"ExactSizeIterator",12816],[10,"Clone",12817],[10,"TrustedLen",12818],[6,"AnyValue",2040,12819],[5,"MetadataFlags",1285,12805],[10,"PolarsObjectSafe",1571,12783],[5,"BinaryArray",12820],[1,"f32"],[1,"u64"],[5,"Metadata",1285,12805],[5,"RwLockWriteGuard",12821],[5,"Int32Type",2040,12773],[5,"DateType",2040,12773],[5,"Logical",2040,12822],[5,"Int64Type",2040,12773],[6,"TimeUnit",2040,12823],[5,"DatetimeType",2040,12773],[5,"Int128Type",2040,12773],[5,"DecimalType",2040,12773],[5,"DurationType",2040,12773],[5,"TimeType",2040,12773],[10,"PolarsFloatType",2040,12773],[6,"IsSorted",12159,12824],[10,"PolarsIterator",1228,12825],[6,"ChunkedArrayLayout",17,12774],[10,"NumCast",12780],[5,"Scalar",4742,12826],[6,"MetadataReadGuard",1285,12827],[5,"IMMetadata",1285,12828],[5,"Arc",4742,12829],[5,"RwLockReadGuard",12821],[1,"i32"],[5,"Range",12830],[5,"UInt8Type",2040,12773],[5,"UInt16Type",2040,12773],[1,"u16"],[5,"UInt64Type",2040,12773],[5,"Int8Type",2040,12773],[1,"i8"],[5,"Int16Type",2040,12773],[1,"i16"],[1,"i128"],[5,"Field",2040,12831],[10,"ParallelIterator",12815],[10,"IndexedParallelIterator",12815],[6,"QuantileMethod",4742,12832],[5,"RollingOptionsFixedWindow",4742,12833],[10,"PolarsOpsNumericType",12834],[10,"Serializer",12835],[10,"Sized",12790],[5,"ChunkId",4742,12836],[17,"IsStruct"],[5,"RandomState",12837],[5,"BytesHash",12838],[5,"OwnedRepr",12839],[1,"array"],[5,"Dim",12840],[5,"ArrayBase",12841],[5,"ViewRepr",12841],[6,"Either",12842],[5,"TypeId",12843],[5,"DataFrame",3766,12844],[5,"NullableIdxSize",4742,12836],[10,"FnOnce",12778],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",870,12845],[5,"AnonymousListBuilder",898,12846],[5,"AnonymousOwnedListBuilder",898,12846],[5,"ListBooleanChunkedBuilder",898,12847],[5,"ListPrimitiveChunkedBuilder",898,12848],[10,"ListBuilderTrait",898,12849],[10,"ChunkedBuilder",898,12850],[5,"ListStringChunkedBuilder",898,12851],[5,"ListBinaryChunkedBuilder",898,12851],[5,"ListNullChunkedBuilder",898,12852],[5,"BinViewChunkedBuilder",898,12853],[10,"ViewType",12854],[5,"BooleanChunkedBuilder",898,12855],[5,"NullChunkedBuilder",898,12856],[5,"PrimitiveChunkedBuilder",898,12857],[5,"NullChunked",12858],[10,"NewChunkedArray",898,12850],[10,"Deserializer",12859],[10,"Hasher",12860],[10,"ChunkedCollectInferIterExt",1208,12861],[10,"ChunkedCollectIterExt",1208,12861],[10,"Canonical",1222,12862],[10,"ChunkedCollectParIterExt",1224,12863],[10,"FromParIterWithDtype",1224,12863],[5,"BooleanArray",12864],[5,"BoolIterNoNull",1228,12825],[5,"FixedSizeListArray",12865],[5,"FixedSizeListIterNoNull",1228,12825],[5,"SomeIterator",1228,12825],[5,"MetadataEnv",1285,12866],[10,"MetadataCollectable",1285,12867],[5,"Iter",12868],[5,"IterNames",12868],[5,"File",12869],[5,"Mutex",12870],[6,"MetadataMerge",1285,12805],[5,"RwLock",12821],[5,"ObjectArray",1571,12783],[6,"ArrowDataType",2040,12871],[10,"Any",12843],[10,"Debug",12808],[5,"BitmapIter",12872],[6,"ZipValidity",12873],[5,"ObjectChunkedBuilder",1648,12874],[10,"AnonymousObjectBuilder",1672,12875],[5,"ObjectRegistry",1672,12875],[10,"ChunkAgg",1701,12876],[17,"FuncRet"],[10,"ChunkApply",1701,12876],[10,"ChunkApplyKernel",1701,12876],[10,"ChunkApproxNUnique",1701,12876],[10,"ChunkSort",1701,12876],[10,"ChunkUnique",1701,12876],[10,"ChunkCast",1701,12876],[6,"FillNullStrategy",1701,12876],[10,"ChunkCompareEq",12159,12876],[10,"ChunkExplode",1701,12876],[10,"ChunkFillNullValue",1701,12876],[10,"ChunkFilter",1701,12876],[10,"ChunkFull",1701,12876],[10,"ChunkFullNull",1701,12876],[10,"ChunkAnyValue",1701,12876],[10,"ChunkCompareIneq",1701,12876],[10,"IsFirstDistinct",1701,12876],[10,"IsLastDistinct",1701,12876],[10,"ChunkQuantile",1701,12876],[10,"ChunkExpandAtIndex",1701,12876],[10,"Reinterpret",1701,12876],[10,"ChunkReverse",1701,12876],[10,"ChunkRollApply",1701,12876],[10,"ChunkSet",1701,12876],[10,"ChunkShift",1701,12876],[10,"ChunkShiftFill",1701,12876],[10,"SlicedArray",1701,12877],[10,"ChunkVar",1701,12876],[10,"ChunkTake",1701,12876],[10,"ChunkTakeUnchecked",1701,12876],[10,"ChunkBytes",1701,12876],[10,"ChunkZip",1701,12876],[10,"BinaryFnMut",1921,12878],[10,"StaticArray",2040,12879],[10,"TernaryFnMut",1921,12878],[10,"Error",12880],[10,"UnaryFnMut",1921,12878],[5,"PrimitiveArray",12881],[5,"RowsEncoded",12882],[6,"RowEncodingCatOrder",12882],[6,"SearchSortedSide",1972,12883],[5,"NoNull",4742,12884],[5,"NaiveDateTime",12885],[6,"Tz",12886],[5,"NaiveTime",12887],[5,"CategoricalChunked",2040,12888],[5,"CategoricalChunkedBuilder",2040,12889],[10,"ArrayFromIter",2040,12890],[10,"ArrayFromIterDtype",2040,12890],[5,"Path",12891],[5,"OsStr",12892],[10,"AsRefDataType",2040,12794],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",12893],[10,"From",12810],[5,"BinaryViewArrayGeneric",12854],[6,"RevMapping",2040,12894],[10,"CategoricalMergeOperation",2040,12895],[10,"LogicalType",2040,12822],[6,"CategoricalOrdering",2040,12894],[5,"OwnedObject",2040,12819],[6,"UnknownKind",2040,12794],[5,"CompatLevel",2040,12794],[5,"CategoricalType",2040,12773],[5,"Dimension",2040,12896],[6,"ReshapeDimension",2040,12896],[6,"ArrowTimeUnit",2040],[6,"Ordering",12897],[10,"ArrayCollectIterExt",2040,12890],[5,"GlobalRevMapMerger",2040,12895],[1,"char"],[10,"FromIterator",12809],[10,"Into",12810],[10,"NumericNative",2040,12773],[6,"SerializableDataType",12898],[5,"ArrowField",4742],[6,"IntegerType",12899],[6,"PrimitiveType",12900],[5,"TimeDelta",12901],[5,"NaiveDate",12902],[10,"GetAnyValue",2040,12819],[10,"IntoScalar",2040,12903],[5,"CatIter",2040,12888],[6,"Expr",4742,12904],[1,"u128"],[6,"PhysicalType",12899],[6,"ToCompactStringError",12804],[5,"Arguments",12808],[5,"StringCacheHolder",3626,12905],[5,"EnumChunkedBuilder",3645,12906],[5,"ErrString",3665,12775],[6,"PolarsWarning",3665,12907],[5,"Error",12908],[5,"Error",12909],[5,"TryReserveError",12910],[6,"ParquetError",12911],[5,"Utf8Error",12912],[6,"Error",12913],[6,"Error",12914],[10,"Display",12808],[5,"Schema",12915],[5,"RecordBatchT",12916],[10,"IntoColumn",4059,12797],[6,"NullStrategy",3766,12844],[6,"UniqueKeepStrategy",3766,12844],[5,"HashSet",12917],[5,"Row",4630,12918],[5,"GroupBy",4373,12919],[5,"DynamicGroupOptions",4742,12920],[5,"RangeFrom",12830],[5,"RangeInclusive",12830],[5,"RangeFull",12830],[5,"RangeToInclusive",12830],[5,"RangeTo",12830],[5,"RecordBatchIter",3766,12844],[5,"PhysRecordBatchIter",3766,12844],[5,"LazyFrame",4742,12921],[10,"IntoSeries",12159,12922],[5,"RollingGroupOptions",4742,12920],[10,"RangeBounds",12830],[10,"IntoVec",4742,12884],[6,"IndexOrder",4742,12923],[5,"StructArray",4742,12924],[5,"Duration",4742,12925],[5,"ScalarColumn",4059,12926],[5,"PartitionedColumn",12927],[6,"BitRepr",12159,12824],[5,"UnpivotArgsIR",4342,12928],[5,"GroupsIdx",4373,12782],[5,"UnitVec",12929],[6,"GroupByMethod",4373,12919],[5,"SlicedGroups",4373,12782],[5,"GroupsProxyParIter",4373,12782],[10,"UnindexedConsumer",12930],[6,"GroupsIndicator",4373,12782],[6,"IRAggExpr",12931],[10,"IntoGroupsProxy",4373,12932],[5,"Copied",12933],[5,"Zip",12934],[5,"GroupsProxyIter",4373,12782],[6,"RollingFnParams",4742,12935],[10,"IsFloat",12936],[10,"NativeType",12937],[10,"AggList",4614,12938],[10,"TakeExtremum",4614,12939],[10,"PhysicalAggExpr",4627,12940],[6,"AnyValueBuffer",4630,12941],[6,"AnyValueBufferTrusted",4630,12941],[5,"Node",12942],[6,"IR",12943],[5,"Arena",12942],[6,"AExpr",12931],[10,"JoinDispatch",4742,12944],[5,"JoinArgs",4742,12945],[5,"StructNameSpace",4742,12946],[10,"SeriesTrait",12159,12824],[10,"TakeChunkedHorPar",4742,12947],[10,"DataFrameOps",4742,12948],[5,"CsvReader",4742,12949],[10,"PhysicalIoExpr",12950],[10,"MmapBytesReader",12951],[10,"LhsNumOps",12666,12781],[6,"Selector",4742,12952],[10,"NumOpsDispatch",12666,12781],[5,"LazyGroupBy",4742,12921],[5,"OptFlags",4742,12953],[10,"Allocator",12954],[5,"JoinBuilder",4742,12921],[10,"AnonymousScan",4742,12955],[5,"ScanArgsAnonymous",4742,12956],[10,"FunctionOutputField",4742,12957],[5,"SpecialEq",4742,12957],[6,"VisitRecursion",12958],[6,"FunctionExpr",4742,12959],[10,"ArgAgg",4742,12960],[5,"ArrayNameSpace",4742,12961],[5,"ListNameSpace",4742,12962],[5,"FieldsMapper",4742,12963],[5,"IpcStreamReader",4742,12964],[10,"Read",12965],[10,"ColumnsUdf",4742,12957],[5,"DynamicDataProviderAnyMarkerWrap",12966],[10,"AsBinary",4742,12967],[10,"StringMethods",10909,12968],[5,"DowncastingAnyProvider",12966],[5,"BorrowedFd",12969],[10,"AsFd",12969],[10,"AsList",4742,12970],[10,"AsRawFd",12971],[6,"AggExpr",4742,12904],[10,"SeriesSealed",4742,12972],[10,"AsString",4742,12973],[20,"MaybeUninit",12974],[10,"StringNameSpaceImpl",4742,12975],[5,"OwnedBatchedCsvReader",4742,12976],[5,"CsvWriter",4742,12977],[5,"BatchedWriter",12977],[10,"Write",12965],[5,"IpcWriter",4742,12978],[5,"BatchedWriter",12978],[5,"ParquetReader",4742,12979],[5,"BatchedParquetReader",4742,12980],[5,"ParquetAsyncReader",4742,12979],[5,"ParquetWriter",4742,12981],[5,"BatchedWriter",12982],[5,"BatchedCsvReader",4742,12976],[5,"BinaryNameSpace",10732,12983],[6,"Operator",4742,12904],[5,"DataKey",12984],[10,"DataMarker",12985],[10,"BoundDataProvider",12986],[10,"RenameAliasFn",4742,12957],[5,"Request",12987],[10,"Service",12988],[5,"UserDefinedFunction",4742,12989],[10,"ColumnBinaryUdf",4742,12957],[5,"InProcessQuery",4742,12990],[5,"HashMap",12991],[5,"CategoricalNameSpace",4742,12992],[10,"RoundSeries",4742,12993],[10,"TemporalMethods",12045,12994],[10,"NumOpsDispatchChecked",12737,12800],[5,"LazyCsvReader",4742,12995],[5,"ScanArgsIpc",4742,12996],[5,"LazyJsonLineReader",4742,12997],[5,"ScanArgsParquet",4742,12998],[5,"RollingOptionsDynamicWindow",4742,12999],[5,"Bounds",4742,13000],[6,"ClosedWindow",4742,13001],[6,"Label",4742,13001],[6,"StartBy",4742,13001],[5,"Window",4742,13002],[6,"JoinCoalesce",4742,12945],[6,"JoinType",4742,12945],[6,"JoinValidation",4742,12945],[5,"AsOfOptions",4742,13003],[6,"AsofStrategy",4742,13003],[6,"InequalityOperator",4742,13004],[5,"IEJoinOptions",4742,13004],[6,"InterpolationMethod",4742,13005],[6,"ClosedInterval",4742,13006],[6,"RankMethod",4742,13007],[5,"RankOptions",4742,13007],[5,"CsvReadOptions",4742,13008],[5,"CsvParseOptions",4742,13008],[6,"CsvEncoding",4742,13008],[6,"CommentPrefix",4742,13008],[6,"NullValues",4742,13008],[5,"CsvWriterOptions",4742,13009],[5,"When",4742,13010],[5,"Then",4742,13010],[5,"ChainedWhen",4742,13010],[5,"ChainedThen",4742,13010],[5,"SerializeOptions",4742,13009],[6,"QuoteStyle",4742,13009],[5,"IpcScanOptions",4742,13011],[5,"IpcReadOptions",4742,13012],[5,"IpcWriterOptions",4742,12978],[6,"IpcCompression",4742,12978],[5,"JsonWriterOptions",4742,13013],[5,"ParquetOptions",4742,13014],[5,"StatisticsOptions",4742,13015],[6,"ParallelStrategy",4742,13014],[6,"LazySerde",4742,12904],[5,"ParquetWriteOptions",4742,13016],[6,"Excluded",4742,12904],[6,"ParquetCompression",4742,13016],[5,"GzipLevel",4742,13016],[5,"BrotliLevel",4742,13016],[5,"ZstdLevel",4742,13016],[5,"FileMetadata",4742,13017],[6,"BooleanFunction",4742,13018],[6,"CategoricalFunction",4742,13019],[6,"TemporalFunction",4742,13020],[6,"PowFunction",4742,13021],[6,"StringFunction",4742,13022],[6,"StructFunction",4742,13023],[5,"DatetimeArgs",4742,13024],[5,"DurationArgs",4742,13024],[5,"RollingCovOptions",4742,13025],[5,"StrptimeOptions",4742,13025],[5,"JoinOptions",4742,13025],[6,"WindowType",4742,13025],[6,"WindowMapping",4742,13025],[6,"NestedType",4742,13025],[5,"UnpivotArgsDSL",4742,13025],[6,"LiteralValue",4742,13026],[5,"AnonymousScanOptions",4742,13027],[5,"UnionArgs",4742,13027],[6,"DslPlan",4742,13028],[5,"RollingVarParams",4742,12935],[5,"RollingQuantileParams",4742,12935],[6,"NonExistent",4742,13029],[5,"Id",13030],[10,"Subscriber",13031],[10,"LazyFileListReader",4742,13032],[5,"CloudOptions",11046,13033],[10,"Ord",12897],[6,"ColumnOrder",13034],[6,"NullValuesCompiled",10599,13008],[10,"BinaryNameSpaceImpl",4742,13035],[10,"ObjectStore",12913],[5,"Path",13036],[10,"Future",13037],[5,"Pin",13038],[5,"JsonLineReader",4742,13039],[5,"IpcReaderAsync",4742,13012],[5,"FileMetadata",13040],[5,"RowGroupMetadata",13041],[10,"CrossJoin",4742,13042],[10,"ExprEvalExtension",4742,13043],[5,"Current",13030],[10,"DateMethods",10909,13044],[10,"DatetimeMethods",10909,13045],[10,"DurationMethods",10909,13046],[5,"IpcStreamWriterOption",4742,12964],[10,"BinaryUdfOutputField",4742,12957],[5,"CStr",13047],[10,"Default",13048],[10,"Stream",13049],[5,"ParquetStatistics",4742],[5,"ColumnChunkMetadata",13050],[10,"Deserialize",12859],[6,"NullBehavior",12743,13051],[5,"Weak",12829],[5,"DateLikeNameSpace",11590,13052],[5,"Metadata",13053],[10,"SeriesMethods",4742,13054],[10,"PartialEq",12897],[10,"Scalar",13055],[10,"ListNameSpaceExtension",4742,13056],[5,"Event",13057],[10,"Command",13058],[5,"PathBuf",12891],[10,"SerReader",4742,13059],[10,"SerWriter",4742,13059],[5,"IpcReader",4742,13011],[5,"IpcStreamWriter",4742,12964],[5,"JsonWriter",4742,13013],[5,"JsonReader",4742,13013],[10,"UdfSchema",4742,13060],[5,"MutableStatistics",13061],[6,"RangeFunction",13062],[6,"ArrayFunction",13063],[6,"BinaryFunction",13064],[6,"ListFunction",13065],[5,"OsString",12892],[1,"never"],[5,"CString",13066],[10,"ToOwned",12791],[5,"GrowableStruct",13067],[10,"SchemaExt",4742,13068],[10,"FromData",11584,13069],[5,"Buffer",13070],[10,"FromDataUtf8",11584,13069],[10,"FromDataBinary",11584,13069],[5,"ListArray",13071],[6,"Ambiguous",4742,13029],[10,"NamedFromOwned",4742,13072],[10,"DataFrameJoinOps",4742,13073],[5,"FunctionOptions",13027],[10,"PartialOrd",12897],[6,"Context",13028],[5,"GetOptions",12913],[5,"BoundsIter",4742,13002],[6,"ReaderBytes",12951],[10,"PolarsTemporalGroupby",4742,12920],[10,"Hash",12860],[10,"SeriesJoin",4742,13074],[10,"TimeMethods",10909,13075],[5,"NonZero",13076],[10,"IntoListNameSpace",4742,13056],[5,"BatchedParquetIter",12980],[5,"StructValueIter",13077],[17,"DataType"],[10,"SchemaNamesAndDtypes",4742,13068],[10,"AsofJoinBy",4742,13078],[10,"ListNameSpaceImpl",4742,13079],[5,"ExprNameNameSpace",4742,13080],[5,"KeyValue",13081],[10,"IntoLazy",4742,12921],[10,"Literal",4742,13026],[5,"Null",4742,13026],[5,"DataRequest",13082],[5,"DataResponse",13083],[5,"DataError",13084],[10,"KeyedDataMarker",12985],[10,"DataProvider",12986],[5,"AnyResponse",12966],[10,"AnyProvider",12966],[5,"BufferMarker",13085],[10,"BufferProvider",13085],[10,"DynamicDataProvider",12986],[10,"CloneToUninit",12817],[5,"SuperTypeOptions",13086],[5,"RowIndex",13087],[5,"LevelFilter",13053],[10,"ChunkAggSeries",4742,13088],[10,"QuantileAggSeries",4742,13089],[10,"IndexToUsize",4742,13090],[10,"NamedFrom",4742,13072],[6,"RowGroupFetcher",12980],[5,"Attributes",13030],[6,"ScanSources",13091],[5,"SplitNChars",4742,13092],[5,"AnonymousScanArgs",4742,12955],[5,"Request",12880],[5,"PutPayload",13093],[5,"PutMultipartOpts",12913],[5,"PutOptions",12913],[10,"SeriesRank",4742,13007],[5,"BorrowedCursor",13094],[10,"VarInt",13095],[5,"IoSliceMut",12965],[5,"Record",13030],[5,"Interest",13031],[10,"SeriesOpsTime",10909,13096],[10,"PolarsRound",4742,13097],[10,"ChunkedSet",4742,12834],[5,"SchemaDescriptor",13098],[6,"SeekFrom",12965],[10,"Serialize",12835],[5,"LocalFutureObj",13099],[5,"SpawnError",13100],[10,"LocalSpawn",13100],[5,"FutureObj",13099],[10,"Spawn",13100],[10,"VarAggSeries",4742,13101],[5,"StringNameSpace",13102],[10,"TakeChunked",4742,12947],[5,"IRPlan",12943],[10,"ToDummies",4742,13103],[10,"PolarsTruncate",4742,13104],[5,"FileMetaData",13081],[5,"AllocError",12954],[5,"SchemaInferenceResult",12012,13105],[10,"PolarsUpsample",4742,13106],[10,"VecHash",4742,13107],[6,"JsonFormat",4742,13013],[5,"BTreeMap",13108],[10,"WriteDataFrameToFile",13059],[10,"Writeable",13109],[10,"Write",12808],[10,"PartsWrite",13109],[5,"IoSlice",12965],[5,"LengthHint",13109],[5,"CountLines",10599,13110],[6,"PrefilterMaskSetting",10642,12980],[5,"MemSlice",13111],[6,"Filter",13112],[10,"ArrayNameSpace",10713,13113],[10,"AsArray",10713,13114],[6,"Buffer",10749,13115],[6,"DynByteSourceBuilder",10827,13116],[6,"DynByteSource",10827,13116],[5,"ObjectStoreByteSource",10827,13116],[5,"MemSliceByteSource",10827,13116],[10,"ByteSource",10827,13116],[10,"AsString",10975,12968],[6,"Pattern",10975,13117],[5,"DatetimeInfer",11015,13118],[10,"StrpTimeParser",11015,13118],[17,"Error"],[10,"TryFromWithUnit",11015,13118],[5,"CloudLocation",11046,13119],[5,"PolarsObjectStore",11046,13120],[5,"File",13121],[5,"CloudWriter",11046,13122],[6,"CloudType",11046,13033],[5,"Url",13123],[5,"Bytes",13124],[10,"TryFrom",12810],[10,"Eq",12897],[5,"ObjectMeta",12913],[6,"PlCredentialProvider",11176,13125],[5,"CredentialProviderFunction",11176,13125],[6,"SupportedCompression",11253,13126],[5,"AnonymousBuilder",11645,13127],[6,"RollingFunction",11891,13128],[6,"RollingFunctionBy",11924,13129],[5,"MutableNullArray",11971,13130],[5,"MutableBitmap",13131],[10,"AsSeries",12045,12994],[5,"Utf8Array",13132],[5,"_SerdeSeries",12797],[5,"SeriesIter",12159,13133],[5,"Rc",13134],[5,"NumericListOp",12666,13135],[5,"NumericFixedSizeListOp",12666,13136],[8,"FillNullLimit",1701],[10,"InitHashMaps",2040],[10,"InitHashMaps2",2040],[5,"TrueT",2040],[8,"PolarsResult",3665],[15,"IO",10579],[15,"Context",10579],[15,"Count",10573],[15,"Slice",10574],[8,"OpaqueColumnUdf",4742],[8,"QuantileInterpolOptions",4742],[8,"ChunkJoinOptIds",4742],[10,"ListFromIter",4742],[15,"Quantile",10455],[15,"Min",10455],[15,"Max",10455],[15,"IsBetween",11844],[15,"Any",11844],[15,"All",11844],[15,"GroupBy",10465],[15,"Union",10465],[15,"Sort",10465],[15,"Scan",10465],[15,"ExtContext",10465],[15,"DataFrameScan",10465],[15,"IR",10465],[15,"Select",10465],[15,"HStack",10465],[15,"MapFunction",10465],[15,"Cache",10465],[15,"Filter",10465],[15,"Distinct",10465],[15,"Slice",10465],[15,"Sink",10465],[15,"Join",10465],[15,"HConcat",10465],[15,"SortBy",10516],[15,"Filter",10516],[15,"Cast",10516],[15,"Sort",10516],[15,"Gather",10516],[15,"RenameAlias",10516],[15,"Ternary",10516],[15,"Function",10516],[15,"Window",10516],[15,"AnonymousFunction",10516],[15,"Slice",10516],[15,"BinaryExpr",10516],[15,"Round",11847],[15,"RoundSF",11847],[15,"Clip",11847],[15,"BackwardFill",11847],[15,"ForwardFill",11847],[15,"Random",11847],[15,"GatherEvery",11847],[15,"ValueCounts",11847],[15,"Rank",11847],[15,"ReplaceStrict",11847],[15,"CumCount",11847],[15,"CumSum",11847],[15,"CumProd",11847],[15,"CumMin",11847],[15,"CumMax",11847],[15,"Range",10576],[15,"ConcatHorizontal",11869],[15,"ConcatVertical",11869],[15,"ExtractGroups",11869],[15,"SplitExact",11869],[15,"Contains",11869],[15,"Find",11869],[15,"Replace",11869],[15,"DatetimeFunction",11883],[5,"Utf8Field",10749],[5,"CategoricalField",10749],[5,"DatetimeField",10749],[15,"Datetime",10824],[6,"ObjectStoreCredential",11176],[10,"Utf8FromIter",12155],[10,"BinaryFromIter",12155]],"r":[[1,13137],[2,13137],[3,13137],[4,13137],[6,12905],[7,13137],[8,13137],[9,13137],[13,13137],[14,13137],[16,12905],[17,12774],[18,12774],[19,12774],[24,13138],[117,12774],[141,12774],[142,12774],[170,12774],[172,12774],[227,12774],[281,12774],[427,12774],[474,12774],[582,12774],[585,12774],[739,12774],[870,12845],[898,12846],[899,12846],[900,12853],[901,12853],[902,12855],[903,12850],[904,12851],[905,12847],[906,12849],[907,12852],[908,12848],[909,12851],[910,12850],[911,12856],[912,12857],[913,12853],[1051,12850],[1067,12849],[1095,12850],[1160,12846],[1161,12846],[1162,12851],[1163,12847],[1164,12849],[1165,12852],[1166,12848],[1167,12851],[1175,12849],[1177,12799],[1208,12861],[1209,12861],[1222,12862],[1224,12863],[1225,12863],[1228,12825],[1229,12825],[1230,12825],[1231,12825],[1267,12825],[1283,13139],[1284,13139],[1290,12828],[1295,12805],[1296,12867],[1297,12866],[1298,12805],[1299,12805],[1300,12805],[1301,12827],[1302,12798],[1571,12783],[1572,12783],[1573,12783],[1574,12783],[1586,12783],[1617,12783],[1618,13140],[1648,12874],[1672,12875],[1673,12875],[1674,12875],[1675,12875],[1688,12875],[1689,12875],[1690,12875],[1693,12875],[1695,12875],[1702,12876],[1703,12876],[1704,12876],[1705,12876],[1706,12876],[1707,12876],[1708,12876],[1709,12876],[1710,12876],[1711,12876],[1712,12876],[1713,12876],[1714,12876],[1715,12876],[1716,12876],[1717,12876],[1718,12876],[1719,12876],[1720,12876],[1721,12876],[1722,12876],[1723,12876],[1724,12876],[1725,12876],[1726,12876],[1727,12876],[1728,12876],[1729,12876],[1730,12876],[1733,12876],[1734,12876],[1744,12876],[1745,12877],[1747,12796],[1748,12796],[1763,12876],[1811,12876],[1814,12876],[1823,12876],[1826,12876],[1870,12876],[1873,12876],[1882,12876],[1919,12876],[1921,12878],[1925,12878],[1926,12878],[1927,12878],[1928,12878],[1929,12878],[1930,12878],[1931,12878],[1932,12878],[1933,12878],[1934,12878],[1935,12878],[1936,12878],[1937,12878],[1938,12878],[1939,12878],[1940,12878],[1941,12878],[1942,12878],[1943,12878],[1944,12878],[1945,12878],[1946,12878],[1947,12878],[1948,12878],[1949,12878],[1950,12878],[1951,12878],[1952,12878],[1953,12878],[1954,12878],[1955,12878],[1956,12878],[1957,13141],[1958,13141],[1959,13142],[1960,13142],[1961,13142],[1962,13143],[1963,13143],[1964,13143],[1965,13143],[1966,13143],[1967,13143],[1968,13143],[1969,13143],[1970,13143],[1971,13143],[1975,12883],[1977,12883],[1997,12883],[2004,12877],[2005,13144],[2006,13144],[2007,13144],[2008,13144],[2011,13145],[2012,12877],[2013,12796],[2014,12796],[2027,13146],[2028,13147],[2029,13147],[2030,13147],[2031,13147],[2032,13146],[2033,13146],[2034,13148],[2035,13146],[2036,13147],[2037,13147],[2038,13147],[2039,13147],[2041,12819],[2045,12773],[2046,12890],[2047,12890],[2048,12890],[2049,12871],[2051,12794],[2055,12773],[2057,12773],[2058,12773],[2060,12773],[2065,12773],[2066,12773],[2067,12888],[2070,12888],[2071,12889],[2072,12895],[2073,12894],[2075,12773],[2076,12794],[2077,12794],[2078,12794],[2079,12794],[2084,13149],[2085,12773],[2088,13150],[2090,12773],[2095,13151],[2096,12773],[2098,12896],[2102,13152],[2103,12773],[2110,12773],[2111,12831],[2112,12831],[2115,12773],[2121,12773],[2122,12773],[2126,12773],[2127,12773],[2128,12819],[2130,12895],[2134,13153],[2135,13090],[2136,13153],[2137,13153],[2139,13154],[2140,13153],[2142,12773],[2143,12773],[2147,12773],[2148,12773],[2152,12773],[2153,12773],[2157,12773],[2158,12773],[2162,12773],[2163,12773],[2165,12903],[2176,12773],[2177,12773],[2179,12822],[2180,12822],[2192,12773],[2195,12773],[2197,12773],[2198,12819],[2202,13154],[2203,13154],[2204,13153],[2205,13154],[2206,13154],[2207,13154],[2208,12789],[2209,12773],[2210,12773],[2211,12773],[2212,12773],[2214,12896],[2215,12894],[2218,12879],[2222,12773],[2224,12773],[2229,12773],[2234,13155],[2235,12773],[2236,12823],[2237,12794],[2240,12773],[2244,12773],[2245,12773],[2249,12773],[2250,12773],[2254,12773],[2255,12773],[2259,12773],[2260,12773],[2264,12794],[2447,12895],[2461,12822],[2594,12794],[2784,12822],[3190,12895],[3191,12895],[3197,12794],[3603,12888],[3604,12888],[3605,12889],[3606,12895],[3607,12894],[3609,12895],[3613,12894],[3614,12895],[3616,12895],[3617,12895],[3618,12888],[3619,12888],[3620,12894],[3625,12894],[3626,12905],[3632,12905],[3635,12905],[3643,12905],[3645,12906],[3671,12775],[3678,12775],[3679,12775],[3680,12907],[3697,12775],[3710,12775],[3727,12907],[3734,12775],[3736,12775],[3737,12775],[3738,12775],[3739,12775],[3740,12907],[3741,12775],[3763,13156],[3764,13156],[3765,13156],[3767,12844],[3772,12844],[3773,12844],[3775,12844],[3776,12844],[3820,12844],[3860,12844],[3893,12844],[3966,12844],[4059,12797],[4060,12797],[4063,12926],[4342,12928],[4373,12782],[4376,12919],[4377,12919],[4379,12782],[4380,12782],[4381,12782],[4382,12782],[4383,12782],[4384,12782],[4387,12782],[4389,12932],[4401,12782],[4410,12919],[4481,12919],[4491,12919],[4614,12938],[4615,12939],[4616,12939],[4617,12939],[4618,12939],[4619,12939],[4620,12939],[4621,12939],[4622,12939],[4623,12939],[4627,12940],[4632,12941],[4633,12941],[4653,12918],[4687,12918],[4708,12918],[4722,12918],[4723,12918],[4724,12918],[4740,13157],[4741,13158],[4745,12904],[4752,12953],[4754,13029],[4757,12955],[4758,12955],[4759,13027],[4766,12819],[4768,12829],[4769,12960],[4772,12845],[4777,12773],[4778,12890],[4780,12890],[4781,12890],[4782,12961],[4783,12785],[4784,12871],[4786,13159],[4788,12967],[4789,12970],[4791,13003],[4792,12794],[4793,12973],[4795,13003],[4796,13078],[4797,13003],[4800,13160],[4806,12976],[4807,12980],[4812,12773],[4813,12853],[4816,13035],[4818,12773],[4819,12773],[4821,12773],[4822,12957],[4829,12773],[4830,12855],[4831,13018],[4832,12773],[4833,12782],[4836,13000],[4837,13002],[4839,13016],[4850,12888],[4854,12888],[4855,12889],[4856,13019],[4857,12895],[4858,12992],[4859,12894],[4861,12773],[4865,13010],[4866,13010],[4867,12876],[4868,13088],[4869,12876],[4870,12876],[4871,12876],[4872,12876],[4873,12876],[4874,12876],[4875,12876],[4876,12876],[4877,12876],[4878,12876],[4879,12876],[4880,12876],[4881,12876],[4882,12876],[4883,12836],[4884,12945],[4885,12876],[4886,12876],[4887,12876],[4888,12876],[4889,12876],[4890,12876],[4891,12876],[4892,12876],[4893,12876],[4894,12876],[4895,12876],[4896,12876],[4897,12774],[4898,12850],[4899,12861],[4900,12861],[4901,12834],[4903,13006],[4904,13001],[4907,12797],[4909,12957],[4913,12957],[4915,13008],[4916,12794],[4928,13042],[4929,13008],[4930,13008],[4931,13008],[4932,12949],[4933,12977],[4934,13009],[4941,12794],[4942,12794],[4943,12844],[4944,13073],[4945,12948],[4949,12794],[4957,13149],[4958,13044],[4960,12773],[4964,13024],[4965,13150],[4967,13045],[4969,12773],[4976,13151],[4977,12773],[4983,12896],[4988,13028],[4992,12925],[4998,13024],[4999,13152],[5000,13046],[5001,12773],[5002,12920],[5016,12904],[5020,12904],[5021,13043],[5022,13080],[5031,13160],[5032,13160],[5033,12773],[5034,12831],[5038,12831],[5039,12963],[5040,13080],[5041,13017],[5042,13161],[5044,12876],[5045,12876],[5055,12773],[5063,12773],[5064,12773],[5069,12773],[5070,12773],[5078,13069],[5079,13069],[5080,13069],[5084,12959],[5085,12957],[5089,12819],[5091,12957],[5093,12895],[5094,12919],[5096,12919],[5098,12782],[5099,12782],[5100,12782],[5101,12782],[5102,12782],[5103,12782],[5110,13016],[5121,13153],[5123,13004],[5124,13160],[5130,13090],[5131,13153],[5132,12782],[5133,12836],[5134,13153],[5137,12990],[5139,12923],[5140,13090],[5141,13004],[5143,13154],[5144,13153],[5146,12945],[5149,12773],[5150,12773],[5155,12773],[5156,12773],[5161,12773],[5162,12773],[5167,12773],[5168,12773],[5173,12773],[5174,12773],[5177,13005],[5180,12797],[5181,12932],[5182,12921],[5183,13056],[5184,12903],[5185,12922],[5186,12884],[5188,12978],[5189,13012],[5190,13011],[5191,13012],[5192,13011],[5193,12964],[5194,12964],[5195,12964],[5196,12978],[5197,12978],[5200,12876],[5204,12876],[5219,12945],[5220,12921],[5221,12945],[5222,12944],[5223,13025],[5225,12945],[5226,12945],[5229,13013],[5230,13039],[5232,13013],[5233,13013],[5234,13013],[5238,13001],[5240,13162],[5242,13162],[5243,13162],[5249,12995],[5250,13032],[5251,12921],[5252,12921],[5253,12997],[5254,12904],[5261,12945],[5266,12781],[5273,12851],[5274,12847],[5275,12849],[5276,12773],[5278,13163],[5279,12962],[5280,13056],[5281,13079],[5282,12848],[5283,12851],[5284,12773],[5285,13026],[5287,13026],[5289,12822],[5292,12822],[5345,13026],[5350,13072],[5351,13072],[5364,13025],[5366,12850],[5368,12884],[5369,13029],[5380,13026],[5388,13008],[5389,12836],[5390,12781],[5391,12800],[5392,12773],[5395,12773],[5397,12773],[5402,12904],[5403,12904],[5404,12953],[5413,12976],[5414,12819],[5416,13164],[5419,13014],[5420,12979],[5421,13016],[5422,13014],[5423,12979],[5425,13016],[5426,12981],[5430,13154],[5431,13154],[5432,13153],[5433,13154],[5434,13154],[5435,13154],[5436,12789],[5438,12773],[5439,12775],[5440,12773],[5441,12773],[5442,12825],[5443,12773],[5444,12783],[5445,12775],[5446,13097],[5447,12920],[5448,13104],[5450,13106],[5452,13021],[5455,12857],[5459,13089],[5460,12832],[5461,12832],[5463,13009],[5472,13007],[5473,13007],[5474,12876],[5476,12957],[5485,12896],[5486,12894],[5496,13025],[5499,12935],[5500,12920],[5501,12999],[5502,12833],[5503,12935],[5504,13165],[5505,12935],[5510,12993],[5511,13166],[5519,12826],[5523,12956],[5524,12996],[5525,12998],[5526,13068],[5527,13068],[5530,13068],[5531,13068],[5532,12883],[5536,12952],[5539,13059],[5540,13059],[5541,13009],[5542,12777],[5545,13074],[5546,13054],[5547,13096],[5548,13007],[5549,12972],[5550,12824],[5563,12877],[5564,12782],[5570,12796],[5571,12796],[5572,12957],[5577,13092],[5579,13001],[5581,12879],[5582,13015],[5590,12905],[5592,12773],[5593,12853],[5595,13022],[5596,12968],[5597,12975],[5599,12773],[5606,13025],[5610,12924],[5611,13138],[5614,13023],[5615,12946],[5617,12773],[5627,12947],[5628,12947],[5630,13020],[5631,12994],[5633,13010],[5641,13155],[5642,13075],[5644,12773],[5645,12823],[5646,12794],[5650,13103],[5664,12773],[5671,12773],[5672,12773],[5677,12773],[5678,12773],[5683,12773],[5684,12773],[5689,12773],[5690,12773],[5691,13167],[5692,13060],[5696,13027],[5699,12844],[5702,12794],[5703,13025],[5704,12928],[5707,12989],[5717,13101],[5718,13107],[5722,13010],[5724,13002],[5727,13025],[5728,13025],[5738,13016],[5836,13168],[5839,13169],[5842,13170],[5843,13168],[5854,13171],[5865,12919],[5867,13172],[5870,13173],[5884,13173],[5895,13174],[5901,13175],[5902,13160],[5908,13176],[5921,13177],[5926,13177],[5929,12876],[5939,13178],[5967,13179],[5971,13180],[5975,13181],[5984,13175],[5986,13010],[6260,13169],[6262,13167],[6271,12895],[6276,13180],[6287,13175],[6301,13182],[6304,13183],[6306,13183],[6308,13183],[6606,13184],[6614,13173],[6618,13185],[6619,13172],[6621,13186],[6634,13172],[6639,13160],[6645,13167],[6649,13186],[6651,12972],[6652,13187],[6653,13187],[6656,13186],[6657,13186],[6658,13187],[6659,13187],[6668,13163],[6669,13188],[6677,13189],[6678,13110],[6680,13110],[6681,13189],[6682,12794],[6684,12980],[6689,13190],[6691,13173],[6692,13190],[6694,13190],[6696,13190],[6698,13173],[6699,13190],[6705,13137],[6707,13176],[6708,13178],[6709,13024],[6711,13176],[6712,13176],[6713,13147],[6714,13147],[6715,13147],[6784,13163],[6785,12944],[7060,13061],[7140,13137],[7142,13191],[7296,13192],[7297,13175],[7306,13172],[7307,13172],[7309,13024],[7318,12925],[7319,12925],[7320,13068],[7588,13193],[7589,13193],[7599,13164],[7600,13164],[7601,13164],[7608,12919],[7629,12876],[7667,13175],[7672,13163],[7676,12876],[7681,13194],[7789,12919],[7793,13173],[7797,13187],[8037,12876],[8047,13175],[8049,12876],[8075,13164],[8088,13160],[8090,13147],[8101,13001],[8102,13001],[8187,13195],[8198,13196],[8199,13197],[8200,13197],[8202,13198],[8214,13172],[8217,13090],[8218,13105],[8359,13176],[8360,13176],[8361,13199],[8362,13005],[8364,13199],[8365,13200],[8524,13006],[8526,13164],[8535,13201],[8541,13202],[8544,13203],[8553,13180],[8556,13180],[8563,13188],[8564,13188],[8600,13175],[8609,13189],[8610,13189],[8618,13175],[8632,13026],[8685,12895],[8686,12895],[8691,13174],[8702,13175],[8705,13175],[8714,13204],[8715,13160],[8717,13180],[8729,13180],[8735,13180],[8745,12794],[8756,13180],[8777,13178],[8815,13178],[8826,13205],[8827,13206],[8875,13207],[8900,13180],[8905,13175],[8906,13163],[8943,13160],[8961,12775],[8962,12775],[8963,12775],[8964,12775],[8969,13208],[8970,13073],[8983,13180],[9019,13173],[9027,13013],[9033,13209],[9034,13210],[9036,13211],[9043,13211],[9044,13211],[9046,13197],[9048,13164],[9103,12876],[9142,13169],[9146,12876],[9238,13182],[9293,12876],[9315,13092],[9317,13092],[9340,13195],[9350,13178],[9351,13212],[9353,13212],[9355,13212],[9357,13212],[9359,13212],[9374,13180],[9399,13010],[9403,13176],[9553,13189],[9554,13189],[9872,12980],[10017,13175],[10025,13213],[10045,13163],[10214,13010],[10439,13214],[10453,12876],[10602,13110],[10603,13008],[10609,13215],[10621,13215],[10630,12949],[10631,13215],[10639,13115],[10645,12980],[10648,12980],[10652,13204],[10657,13216],[10659,13217],[10664,12938],[10665,12939],[10666,12939],[10667,12939],[10668,12939],[10669,12939],[10670,12939],[10671,12939],[10672,12939],[10673,12939],[10677,12878],[10681,12878],[10682,12878],[10683,12878],[10684,12878],[10685,12878],[10686,12878],[10687,12878],[10688,12878],[10689,12878],[10690,12878],[10691,12878],[10692,12878],[10693,12878],[10694,12878],[10695,12878],[10696,12878],[10697,12878],[10698,12878],[10699,12878],[10700,12878],[10701,12878],[10702,12878],[10703,12878],[10704,12878],[10705,12878],[10706,12878],[10707,12878],[10708,12878],[10709,12878],[10710,12878],[10711,12878],[10712,12878],[10713,13113],[10714,13114],[10732,12983],[10750,13115],[10752,13115],[10755,13115],[10769,13115],[10801,13115],[10819,13115],[10827,13116],[10829,13116],[10830,13116],[10832,13116],[10835,13116],[10908,12992],[10909,13044],[10910,13045],[10911,13046],[10912,12999],[10913,13096],[10914,12968],[10915,13075],[10968,13218],[10975,12968],[10981,13117],[10982,12968],[11006,12968],[11015,13118],[11017,13118],[11018,13118],[11029,13118],[11048,13119],[11049,13033],[11050,13033],[11051,13122],[11056,13120],[11057,13120],[11072,13219],[11079,13220],[11124,13119],[11142,13219],[11143,13220],[11176,13125],[11178,13125],[11180,13125],[11181,13125],[11245,13033],[11246,13033],[11254,13126],[11266,13126],[11271,13221],[11273,12819],[11277,12773],[11278,12890],[11279,12890],[11280,12890],[11281,12871],[11283,12794],[11287,12773],[11289,12773],[11290,12773],[11292,12773],[11297,12773],[11298,12773],[11299,12888],[11302,12888],[11303,12889],[11304,12895],[11305,12894],[11307,12773],[11308,12794],[11309,12794],[11310,12794],[11311,12794],[11316,13149],[11317,12773],[11320,13150],[11322,12773],[11327,13151],[11328,12773],[11330,12896],[11334,13152],[11335,12773],[11340,12773],[11341,12831],[11342,12831],[11345,12773],[11351,12773],[11352,12773],[11356,12773],[11357,12773],[11358,12819],[11360,12895],[11364,13153],[11365,13090],[11366,13153],[11367,13153],[11369,13154],[11370,13153],[11372,12773],[11373,12773],[11377,12773],[11378,12773],[11382,12773],[11383,12773],[11387,12773],[11388,12773],[11392,12773],[11393,12773],[11395,12903],[11406,12773],[11407,12773],[11409,12822],[11410,12822],[11422,12773],[11425,12773],[11427,12773],[11428,12819],[11432,13154],[11433,13154],[11434,13153],[11435,13154],[11436,13154],[11437,13154],[11438,12789],[11439,12773],[11440,12773],[11441,12773],[11442,12773],[11444,12896],[11445,12894],[11448,12879],[11452,12773],[11454,12773],[11459,12773],[11464,13155],[11465,12773],[11466,12823],[11467,12794],[11470,12773],[11474,12773],[11475,12773],[11479,12773],[11480,12773],[11484,12773],[11485,12773],[11489,12773],[11490,12773],[11494,12794],[11507,12895],[11510,12822],[11515,12794],[11518,12822],[11533,12895],[11534,12895],[11535,12794],[11553,12888],[11554,12888],[11555,12889],[11556,12895],[11557,12894],[11559,12895],[11563,12894],[11564,12895],[11566,12895],[11567,12895],[11568,12888],[11569,12888],[11570,12894],[11575,12894],[11576,12905],[11577,12905],[11578,12905],[11579,12905],[11580,12906],[11581,13197],[11582,13197],[11583,13197],[11584,13069],[11585,13069],[11586,13069],[11590,13052],[11642,12940],[11645,13127],[11665,13141],[11666,13141],[11682,13018],[11685,13019],[11725,12959],[11768,13021],[11801,13022],[11809,13023],[11814,13020],[11840,12959],[11841,12959],[11842,12959],[11843,12959],[11885,13019],[11889,13021],[11895,13128],[11928,13129],[11957,13142],[11958,13142],[11959,13142],[11960,13005],[11963,13005],[11964,13200],[11965,13222],[11966,13223],[11967,13223],[11968,13223],[11969,13223],[11970,13223],[11971,13130],[12002,13143],[12003,13143],[12004,13143],[12005,13143],[12006,13143],[12007,13143],[12008,13143],[12009,13143],[12010,13143],[12011,13143],[12012,13105],[12023,13105],[12028,13105],[12029,13105],[12042,12883],[12043,12883],[12044,12883],[12045,12994],[12046,12994],[12067,12877],[12068,13144],[12069,13144],[12070,13144],[12071,13144],[12074,13145],[12075,12877],[12076,12796],[12077,12796],[12090,12973],[12091,13092],[12092,12975],[12102,13193],[12103,13193],[12113,13195],[12121,13092],[12123,13092],[12129,13195],[12135,13212],[12137,13212],[12139,13212],[12141,13212],[12143,13212],[12149,12989],[12155,13224],[12156,13224],[12160,12824],[12161,12876],[12163,12922],[12164,12824],[12168,12777],[12169,13133],[12170,13133],[12171,12824],[12182,12777],[12190,12777],[12390,12777],[12515,12777],[12642,12792],[12643,12792],[12666,12781],[12667,12781],[12668,12781],[12669,13136],[12670,13135],[12674,12781],[12684,12781],[12737,12800],[12738,12800],[12745,13051]],"b":[[29,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[30,"impl-Add-for-%26ChunkedArray%3CT%3E"],[31,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[32,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[37,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[38,"impl-Add-for-ChunkedArray%3CStringType%3E"],[39,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[40,"impl-Add-for-ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[44,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[45,"impl-AggList-for-ChunkedArray%3CT%3E"],[46,"impl-AggList-for-ChunkedArray%3CListType%3E"],[47,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[49,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[52,"impl-ChunkedArray%3CListType%3E"],[53,"impl-ChunkedArray%3CFixedSizeListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[63,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[64,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CFixedSizeListType%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[75,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[76,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[80,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[81,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CT%3E"],[83,"impl-ChunkedArray%3CBinaryType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[90,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[91,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[92,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[93,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[94,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[95,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[98,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[101,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[102,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[105,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[106,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[107,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[108,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[110,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[111,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[116,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[119,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[120,"impl-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[125,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[127,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[135,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[154,"impl-ChunkedArray%3CStructType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[159,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[162,"impl-Container-for-ChunkedArray%3CT%3E"],[163,"impl-ChunkedArray%3CT%3E"],[183,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[184,"impl-Div-for-ChunkedArray%3CT%3E"],[185,"impl-Div-for-%26ChunkedArray%3CT%3E"],[186,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[193,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[195,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[196,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[197,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[198,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[199,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[200,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[201,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[202,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[203,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[204,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[205,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[211,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[212,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[214,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[218,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[221,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[222,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[223,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[224,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[228,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[229,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[230,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[231,"impl-Debug-for-ChunkedArray%3CListType%3E"],[232,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-Debug-for-ChunkedArray%3CT%3E"],[234,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[236,"impl-ChunkedArray%3CFixedSizeListType%3E"],[237,"impl-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[247,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[249,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[250,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[251,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[252,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[254,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[255,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[256,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[257,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[258,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[259,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[261,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[262,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[263,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[264,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[268,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[269,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[271,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[275,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[276,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[277,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[278,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[279,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[282,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[283,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[284,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[285,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[286,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[287,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[296,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[297,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[298,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[299,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[300,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[301,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[302,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[306,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[307,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[308,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[309,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[310,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[311,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[312,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[313,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[321,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[322,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[324,"impl-ChunkedArray%3CFixedSizeListType%3E"],[325,"impl-ChunkedArray%3CListType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[343,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[344,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[345,"impl-ChunkedArray%3CListType%3E"],[346,"impl-ChunkedArray%3CFixedSizeListType%3E"],[350,"impl-ChunkedArray%3CListType%3E"],[351,"impl-ChunkedArray%3CFixedSizeListType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[361,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[362,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[363,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[369,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[370,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[371,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[373,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[374,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[375,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[376,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[377,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[378,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[379,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[380,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[381,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[382,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[383,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[384,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[385,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[386,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[392,"impl-ChunkedArray%3CListType%3E"],[393,"impl-ChunkedArray%3CFixedSizeListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[412,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-Container-for-ChunkedArray%3CT%3E"],[439,"impl-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[445,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[446,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[447,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[448,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[449,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[450,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[451,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[452,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[453,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[454,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[455,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[456,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[457,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkedArray%3CBooleanType%3E"],[459,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkedArray%3CBooleanType%3E"],[481,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[487,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkedArray%3CBooleanType%3E"],[489,"impl-ChunkedArray%3CT%3E"],[490,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[491,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[493,"impl-Mul-for-ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[498,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[500,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[501,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[502,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[506,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[507,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[508,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[510,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[511,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[512,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[516,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[517,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[519,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[520,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[521,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[522,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[524,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[528,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[530,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[532,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[533,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[534,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[535,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[539,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[541,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[543,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[544,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[545,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[546,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[547,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[548,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[549,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[550,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[551,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[557,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[558,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[559,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[560,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[561,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[562,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[563,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[564,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[565,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[566,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[567,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[568,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[569,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[572,"impl-ChunkCompareEq%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[573,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[574,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[575,"impl-ChunkCompareEq%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[576,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[577,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[578,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[583,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[584,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[586,"impl-ChunkedArray%3CListType%3E"],[587,"impl-ChunkedArray%3CStringType%3E"],[588,"impl-ChunkedArray%3CStringType%3E"],[589,"impl-ChunkedArray%3CListType%3E"],[592,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[593,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[594,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[595,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[596,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[628,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[629,"impl-Rem-for-ChunkedArray%3CT%3E"],[630,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[631,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[641,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[648,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[650,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[653,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[654,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[655,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[656,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[657,"impl-Serialize-for-ChunkedArray%3CBinaryType%3E"],[658,"impl-Serialize-for-ChunkedArray%3CStructType%3E"],[659,"impl-Serialize-for-ChunkedArray%3CStringType%3E"],[660,"impl-Serialize-for-ChunkedArray%3CT%3E"],[661,"impl-Serialize-for-ChunkedArray%3CFixedSizeListType%3E"],[662,"impl-Serialize-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-Serialize-for-ChunkedArray%3CListType%3E"],[664,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[665,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[666,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[673,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[674,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[675,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[676,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[677,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[678,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[679,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[680,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[681,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[682,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[683,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[685,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[686,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[687,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[688,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[689,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[691,"impl-ChunkedArray%3CT%3E"],[692,"impl-Container-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[694,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[695,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[696,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[697,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[698,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[699,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[700,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[701,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[702,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[703,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[704,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[705,"impl-ChunkedArray%3CT%3E"],[706,"impl-Container-for-ChunkedArray%3CT%3E"],[708,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[709,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[710,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[712,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[713,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[714,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[715,"impl-Sub-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkedArray%3CBooleanType%3E"],[718,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[719,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[720,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[721,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[723,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[724,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[727,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[728,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[729,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[730,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[731,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[732,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[733,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[734,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[735,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[736,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[737,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[738,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[743,"impl-ChunkedArray%3CListType%3E"],[744,"impl-ChunkedArray%3CFixedSizeListType%3E"],[745,"impl-ChunkedArray%3CListType%3E"],[746,"impl-ChunkedArray%3CT%3E"],[751,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[752,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[753,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[754,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[755,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[756,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[758,"impl-ChunkedArray%3CListType%3E"],[759,"impl-ChunkedArray%3CFixedSizeListType%3E"],[773,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[774,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[775,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[776,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[777,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[783,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[784,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[785,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[791,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[803,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[804,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[807,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[808,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[809,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[810,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[811,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[812,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[813,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[814,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[815,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[816,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[817,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[854,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[855,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[856,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[858,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[859,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[860,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[861,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[862,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[863,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[864,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[868,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[869,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[1046,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1047,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1323,"impl-Flags-for-MetadataProperties"],[1324,"impl-MetadataProperties"],[1325,"impl-MetadataFlags"],[1326,"impl-Flags-for-MetadataFlags"],[1390,"impl-Metadata%3CT%3E"],[1391,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1416,"impl-Debug-for-MetadataProperties"],[1417,"impl-Octal-for-MetadataProperties"],[1418,"impl-LowerHex-for-MetadataProperties"],[1419,"impl-Binary-for-MetadataProperties"],[1420,"impl-UpperHex-for-MetadataProperties"],[1421,"impl-UpperHex-for-MetadataFlags"],[1422,"impl-Octal-for-MetadataFlags"],[1423,"impl-LowerHex-for-MetadataFlags"],[1424,"impl-Binary-for-MetadataFlags"],[1425,"impl-Debug-for-MetadataFlags"],[1435,"impl-Flags-for-MetadataProperties"],[1436,"impl-MetadataProperties"],[1437,"impl-Flags-for-MetadataFlags"],[1438,"impl-MetadataFlags"],[1449,"impl-Metadata%3CT%3E"],[1450,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1493,"impl-Metadata%3CT%3E"],[1494,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1498,"impl-Metadata%3CT%3E"],[1499,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1577,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1578,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1613,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1614,"impl-ObjectArray%3CT%3E"],[1629,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1630,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1640,"impl-ObjectArray%3CT%3E"],[1641,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1642,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1643,"impl-ObjectArray%3CT%3E"],[1645,"impl-ObjectArray%3CT%3E"],[1646,"impl-Array-for-ObjectArray%3CT%3E"],[1649,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1650,"impl-ObjectChunkedBuilder%3CT%3E"],[1652,"impl-ObjectChunkedBuilder%3CT%3E"],[1653,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2342,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2343,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2344,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2345,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2452,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2453,"impl-Logical%3CDurationType,+Int64Type%3E"],[2455,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2456,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2457,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2458,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2459,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2773,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2774,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2775,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2776,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2777,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2789,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2790,"impl-PartialEq-for-DataType"],[2799,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2800,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2801,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2802,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2803,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[2804,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2843,"impl-Display-for-PlSmallStr"],[2844,"impl-Debug-for-PlSmallStr"],[2848,"impl-Display-for-AnyValue%3C\'_%3E"],[2849,"impl-Debug-for-AnyValue%3C\'a%3E"],[2851,"impl-Display-for-DataType"],[2852,"impl-Debug-for-DataType"],[2855,"impl-Debug-for-TimeUnit"],[2856,"impl-Display-for-TimeUnit"],[2858,"impl-Display-for-ReshapeDimension"],[2859,"impl-Debug-for-ReshapeDimension"],[2862,"impl-From%3C%26str%3E-for-PlSmallStr"],[2863,"impl-From%3CString%3E-for-PlSmallStr"],[2864,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2866,"impl-From%3C%26String%3E-for-PlSmallStr"],[2870,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2871,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2883,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2884,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2886,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2887,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2888,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2890,"impl-From%3CSerializableDataType%3E-for-DataType"],[2892,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2893,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2894,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2896,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2898,"impl-From%3C%26ArrowField%3E-for-Field"],[2924,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2925,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2934,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2935,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2936,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2937,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2938,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2939,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2940,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2941,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2961,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2962,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2963,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2964,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2965,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2968,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2969,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2970,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2971,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2972,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[3010,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3011,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3012,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3013,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3014,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3015,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3128,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3129,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3130,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3131,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3132,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3184,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3185,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3186,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3187,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3188,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3189,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3228,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3229,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3230,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3231,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3232,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3233,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3234,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3235,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3244,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3245,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3246,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3247,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3248,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3249,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3252,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3253,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3275,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3276,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3296,"impl-Logical%3CDurationType,+Int64Type%3E"],[3297,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3304,"impl-Logical%3CDateType,+Int32Type%3E"],[3305,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3306,"impl-Logical%3CTimeType,+Int64Type%3E"],[3322,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3323,"impl-Logical%3CDurationType,+Int64Type%3E"],[3376,"impl-Logical%3CDurationType,+Int64Type%3E"],[3377,"impl-Logical%3CDateType,+Int32Type%3E"],[3378,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3379,"impl-Logical%3CTimeType,+Int64Type%3E"],[3385,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3386,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3712,"impl-Debug-for-ErrString"],[3713,"impl-Display-for-ErrString"],[3714,"impl-Debug-for-PolarsError"],[3715,"impl-Display-for-PolarsError"],[3719,"impl-From%3CError%3E-for-PolarsError"],[3720,"impl-From%3CError%3E-for-PolarsError"],[3721,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3722,"impl-From%3CParquetError%3E-for-PolarsError"],[3723,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3725,"impl-From%3CError%3E-for-PolarsError"],[3726,"impl-From%3CError%3E-for-PolarsError"],[3870,"impl-Debug-for-DataFrame"],[3871,"impl-Display-for-DataFrame"],[3877,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3878,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3904,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3905,"impl-Index%3Cusize%3E-for-DataFrame"],[3906,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3907,"impl-Index%3C%26str%3E-for-DataFrame"],[3908,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3909,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3910,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3911,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3930,"impl-DataFrame"],[3931,"impl-Container-for-DataFrame"],[3990,"impl-Container-for-DataFrame"],[3991,"impl-DataFrame"],[3995,"impl-Container-for-DataFrame"],[3996,"impl-DataFrame"],[4017,"impl-TryExtend%3CResult%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E,+PolarsError%3E%3E-for-DataFrame"],[4018,"impl-TryExtend%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E%3E-for-DataFrame"],[4024,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[4025,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[4067,"impl-Add-for-Column"],[4068,"impl-Add%3CT%3E-for-%26Column"],[4069,"impl-Add%3CT%3E-for-Column"],[4070,"impl-Add-for-%26Column"],[4102,"impl-BitAnd-for-Column"],[4103,"impl-BitAnd-for-%26Column"],[4104,"impl-Column"],[4105,"impl-BitOr-for-%26Column"],[4106,"impl-BitOr-for-Column"],[4107,"impl-Column"],[4108,"impl-BitXor-for-Column"],[4109,"impl-Column"],[4110,"impl-BitXor-for-%26Column"],[4139,"impl-Div-for-Column"],[4140,"impl-Div%3CT%3E-for-%26Column"],[4141,"impl-Div-for-%26Column"],[4142,"impl-Div%3CT%3E-for-Column"],[4167,"impl-From%3CSeries%3E-for-Column"],[4169,"impl-From%3CScalarColumn%3E-for-Column"],[4170,"impl-From%3CPartitionedColumn%3E-for-Column"],[4221,"impl-Mul-for-Column"],[4222,"impl-Mul-for-%26Column"],[4223,"impl-Mul%3CT%3E-for-Column"],[4224,"impl-Mul%3CT%3E-for-%26Column"],[4244,"impl-Rem%3CT%3E-for-%26Column"],[4245,"impl-Rem%3CT%3E-for-Column"],[4246,"impl-Rem-for-%26Column"],[4247,"impl-Rem-for-Column"],[4271,"impl-Sub%3CT%3E-for-%26Column"],[4272,"impl-Sub-for-Column"],[4273,"impl-Sub%3CT%3E-for-Column"],[4274,"impl-Sub-for-%26Column"],[4489,"impl-Display-for-GroupByMethod"],[4490,"impl-Debug-for-GroupByMethod"],[4496,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4497,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4531,"impl-IntoIterator-for-%26GroupsIdx"],[4532,"impl-IntoIterator-for-GroupsIdx"],[4534,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4535,"impl-IntoParallelIterator-for-GroupsIdx"],[5932,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5933,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5937,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5938,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5969,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5970,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5992,"impl-Flags-for-OptFlags"],[5993,"impl-OptFlags"],[6761,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6762,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6763,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6764,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6765,"impl-Default-for-Arc%3CCStr%3E"],[6766,"impl-Default-for-Arc%3Cstr%3E"],[6767,"impl-Default-for-Arc%3CT%3E"],[7103,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7104,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[7105,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[7106,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[7107,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[7353,"impl-Expr"],[7354,"impl-PartialEq-for-Expr"],[7369,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[7370,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[7377,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[7378,"impl-PartialEq-for-Arc%3CT,+A%3E"],[7379,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[7392,"impl-PartialEq-for-StructArray"],[7393,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[7691,"impl-Display-for-Duration"],[7692,"impl-Debug-for-Duration"],[7702,"impl-Debug-for-JoinType"],[7703,"impl-Display-for-JoinType"],[7704,"impl-Display-for-JoinValidation"],[7705,"impl-Debug-for-JoinValidation"],[7722,"impl-Display-for-Expr"],[7723,"impl-Debug-for-Expr"],[7735,"impl-Display-for-Operator"],[7736,"impl-Debug-for-Operator"],[7743,"impl-Display-for-BooleanFunction"],[7744,"impl-Debug-for-BooleanFunction"],[7745,"impl-Display-for-CategoricalFunction"],[7746,"impl-Debug-for-CategoricalFunction"],[7747,"impl-Display-for-TemporalFunction"],[7748,"impl-Debug-for-TemporalFunction"],[7749,"impl-Debug-for-PowFunction"],[7750,"impl-Display-for-PowFunction"],[7751,"impl-Debug-for-Arc%3CT,+A%3E"],[7752,"impl-Pointer-for-Arc%3CT,+A%3E"],[7753,"impl-Display-for-Arc%3CT,+A%3E"],[7754,"impl-Display-for-StringFunction"],[7755,"impl-Debug-for-StringFunction"],[7756,"impl-Debug-for-StructFunction"],[7757,"impl-Display-for-StructFunction"],[7758,"impl-Debug-for-FunctionExpr"],[7759,"impl-Display-for-FunctionExpr"],[7771,"impl-UpperHex-for-OptFlags"],[7772,"impl-Debug-for-OptFlags"],[7773,"impl-LowerHex-for-OptFlags"],[7774,"impl-Binary-for-OptFlags"],[7775,"impl-Octal-for-OptFlags"],[7807,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7808,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7878,"impl-From%3Cbool%3E-for-Expr"],[7879,"impl-From%3Cu64%3E-for-Expr"],[7881,"impl-From%3Cu8%3E-for-Expr"],[7882,"impl-From%3Cf32%3E-for-Expr"],[7883,"impl-From%3Cf64%3E-for-Expr"],[7884,"impl-From%3Ci32%3E-for-Expr"],[7885,"impl-From%3C%26str%3E-for-Expr"],[7886,"impl-From%3Ci8%3E-for-Expr"],[7887,"impl-From%3Ci16%3E-for-Expr"],[7888,"impl-From%3Cu16%3E-for-Expr"],[7889,"impl-From%3CAggExpr%3E-for-Expr"],[7890,"impl-From%3Ci64%3E-for-Expr"],[7891,"impl-From%3Cu32%3E-for-Expr"],[7910,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7911,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7912,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7913,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7914,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7915,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7916,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7917,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7918,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7919,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7928,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7929,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7931,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7932,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7933,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7934,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7935,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7936,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7937,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7938,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7939,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7940,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7941,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7942,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7943,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7944,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7947,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7948,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7950,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7951,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7962,"impl-From%3CString%3E-for-Selector"],[7964,"impl-From%3CExpr%3E-for-Selector"],[7965,"impl-From%3C%26str%3E-for-Selector"],[7966,"impl-From%3CPlSmallStr%3E-for-Selector"],[7978,"impl-From%3Cu16%3E-for-Scalar"],[7979,"impl-From%3Cf32%3E-for-Scalar"],[7980,"impl-From%3Cbool%3E-for-Scalar"],[7981,"impl-From%3Ci8%3E-for-Scalar"],[7982,"impl-From%3Ci16%3E-for-Scalar"],[7983,"impl-From%3Cu64%3E-for-Scalar"],[7984,"impl-From%3Cu32%3E-for-Scalar"],[7985,"impl-From%3CPlSmallStr%3E-for-Scalar"],[7987,"impl-From%3Cf64%3E-for-Scalar"],[7988,"impl-From%3Ci32%3E-for-Scalar"],[7989,"impl-From%3Cu8%3E-for-Scalar"],[7990,"impl-From%3Ci64%3E-for-Scalar"],[8000,"impl-Flags-for-OptFlags"],[8001,"impl-OptFlags"],[8006,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8007,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8015,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8016,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8029,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8030,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[9201,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[9202,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[9203,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[9204,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[9205,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[9282,"impl-Array-for-StructArray"],[9283,"impl-StructArray"],[9289,"impl-Array-for-StructArray"],[9290,"impl-StructArray"],[9568,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[9569,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[9573,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9574,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[10048,"impl-StructArray"],[10049,"impl-Array-for-StructArray"],[10312,"impl-LazyCsvReader"],[10313,"impl-LazyFileListReader-for-LazyCsvReader"],[10314,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10315,"impl-LazyJsonLineReader"],[10361,"impl-LazyFileListReader-for-LazyCsvReader"],[10362,"impl-LazyCsvReader"],[10363,"impl-LazyFileListReader-for-LazyJsonLineReader"],[10364,"impl-LazyJsonLineReader"],[10410,"impl-StructArray"],[10411,"impl-Array-for-StructArray"],[10865,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[10866,"impl-From%3CMemSlice%3E-for-DynByteSource"],[10867,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[11035,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[11036,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[11041,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[11042,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[11910,"impl-Debug-for-RollingFunction"],[11911,"impl-Display-for-RollingFunction"],[11943,"impl-Display-for-RollingFunctionBy"],[11944,"impl-Debug-for-RollingFunctionBy"],[12178,"impl-Add%3CT%3E-for-Series"],[12179,"impl-Add%3CT%3E-for-%26Series"],[12180,"impl-Add-for-%26Series"],[12181,"impl-Add-for-Series"],[12199,"impl-AsSeries-for-Series"],[12200,"impl-SeriesSealed-for-Series"],[12205,"impl-BitAnd%3CSeries%3E-for-%26Series"],[12206,"impl-BitAnd-for-%26Series"],[12207,"impl-BitAnd-for-Series"],[12208,"impl-BitAnd%3C%26Series%3E-for-Series"],[12209,"impl-BitOr-for-Series"],[12210,"impl-BitOr%3CSeries%3E-for-%26Series"],[12211,"impl-BitOr-for-%26Series"],[12212,"impl-BitOr%3C%26Series%3E-for-Series"],[12213,"impl-BitXor%3CSeries%3E-for-%26Series"],[12214,"impl-BitXor-for-Series"],[12215,"impl-BitXor%3C%26Series%3E-for-Series"],[12216,"impl-BitXor-for-%26Series"],[12264,"impl-Div-for-Series"],[12265,"impl-Div%3CT%3E-for-Series"],[12266,"impl-Div%3CT%3E-for-%26Series"],[12267,"impl-Div-for-%26Series"],[12278,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12279,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12280,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12282,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12283,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12284,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12301,"impl-Display-for-Series"],[12302,"impl-Debug-for-Series"],[12307,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[12308,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[12309,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[12310,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[12311,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[12312,"impl-From%3C_SerdeSeries%3E-for-Series"],[12319,"impl-FromIterator%3C%26u64%3E-for-Series"],[12320,"impl-FromIterator%3Cu32%3E-for-Series"],[12321,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[12322,"impl-FromIterator%3Cbool%3E-for-Series"],[12323,"impl-FromIterator%3Ci16%3E-for-Series"],[12324,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[12325,"impl-FromIterator%3C%26i16%3E-for-Series"],[12326,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[12327,"impl-FromIterator%3Ci32%3E-for-Series"],[12328,"impl-FromIterator%3C%26i32%3E-for-Series"],[12329,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[12330,"impl-FromIterator%3C%26str%3E-for-Series"],[12331,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[12332,"impl-FromIterator%3Cu8%3E-for-Series"],[12333,"impl-FromIterator%3C%26u8%3E-for-Series"],[12334,"impl-FromIterator%3Ci64%3E-for-Series"],[12335,"impl-FromIterator%3C%26i64%3E-for-Series"],[12336,"impl-FromIterator%3CString%3E-for-Series"],[12337,"impl-FromIterator%3C%26i8%3E-for-Series"],[12338,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[12339,"impl-FromIterator%3C%26bool%3E-for-Series"],[12340,"impl-FromIterator%3Ci8%3E-for-Series"],[12341,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[12342,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[12343,"impl-FromIterator%3Cf32%3E-for-Series"],[12344,"impl-FromIterator%3Cu16%3E-for-Series"],[12345,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[12346,"impl-FromIterator%3C%26u16%3E-for-Series"],[12347,"impl-FromIterator%3C%26f32%3E-for-Series"],[12348,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[12349,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[12350,"impl-FromIterator%3Cf64%3E-for-Series"],[12351,"impl-FromIterator%3Cu64%3E-for-Series"],[12352,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[12353,"impl-FromIterator%3C%26u32%3E-for-Series"],[12354,"impl-FromIterator%3C%26f64%3E-for-Series"],[12355,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[12356,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[12357,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[12358,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[12359,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[12360,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[12361,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[12362,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[12363,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[12364,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[12365,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[12366,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[12376,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12377,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12378,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12379,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12380,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12381,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12426,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12427,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12428,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12429,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[12430,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[12431,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[12440,"impl-Mul-for-%26Series"],[12441,"impl-Mul%3CT%3E-for-%26Series"],[12442,"impl-Mul%3CT%3E-for-Series"],[12443,"impl-Mul-for-Series"],[12448,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[12449,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[12450,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[12451,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[12452,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[12453,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[12454,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[12455,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[12456,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[12457,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[12458,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[12459,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[12460,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[12461,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[12462,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[12463,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[12464,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[12465,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[12466,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[12467,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[12468,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[12469,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[12470,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[12471,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[12472,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[12473,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[12474,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[12475,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[12476,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[12477,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[12478,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[12479,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[12480,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[12481,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[12482,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[12483,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[12484,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[12485,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[12486,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[12487,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[12488,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[12489,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[12490,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[12491,"impl-NamedFrom%3CT,+T%3E-for-Series"],[12492,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[12493,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[12494,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[12495,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[12496,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[12497,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[12498,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[12499,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[12500,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[12506,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12507,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12508,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12510,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[12511,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[12512,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[12522,"impl-Rem%3CT%3E-for-%26Series"],[12523,"impl-Rem%3CT%3E-for-Series"],[12524,"impl-Rem-for-%26Series"],[12555,"impl-Sub-for-Series"],[12556,"impl-Sub%3CT%3E-for-Series"],[12557,"impl-Sub%3CT%3E-for-%26Series"],[12558,"impl-Sub-for-%26Series"],[12594,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12595,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[12596,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[12597,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAA0AEAAAADoRhRHAEcMRxBHFEcYRxxHMEc8R1BHVEfsRVRU=","e":"OzAAAAEAAEwl2QQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAKAGUABgBvAAYAdwAVAI4AAACQAAAAkgARAKcAAwCsAAIAswANAMIAFQDaAAgA5AAKAPAAAADyAAEA9gAeABsBFQAzARMASQEVAGIBAQBmAQEAaQELAHYBDQCGAQIAjgERAKEBAwCoAQIArAECALABBwC9AR4A4QEHAOsBCAD1ATUALgIVAEUCBABLAgQAUQIFAFsCAgBfAhoAewIHAIcCGACiAhAAtQIMAMMCDwDWAgMA2wIBAN4CAQDjAgAA5QIBAOwCAADwAgcA+gICAP4CDQANAwAADwMoADoDAgA+AyMAZQM1AJwDCACpAxEAvgMCAMIDWgAqBBIASAQHAFEESQCeBA8ArwQBALIEGgDOBAAA0QQOAOMEAgDpBAIA7gQcAAwFCQAXBQoALAUAAC8FAAA0BQ0AQwUPAFcFEwBtBQAAbwUJAHsFAwCBBQEAhQUNAJwFAACeBQAApgUHAK8FBwDEBQEAyAUAAMsFAwDTBQUA2gUEAOQFAADnBQsA+gUEAAEGDQARBgYAGwYHACQGAQAoBhYAQAYIAEoGAABMBgAATgYAAFAGAQBVBhAAZwYAAGoGAwBvBgMAdAYAAHYGCACABgEAgwYFAIsGAQCOBgAAkAYBAJMGAwCYBgQAngYCAKIGAwCoBgAAqwYBALUGAAC6BgAAvQYBAMIGAQDFBgAAyAYBANEGAADXBgMA4AYAAOQGBgDuBhAAAQcIAAwHCAAXBwMAHAcAAB4HAAAgBwAAIgcBACgHBQAxBwIAPQcBAEkHAABLBwEATgcBAFIHAwBXBwAAWwcAAF0HAABiBwwAcQcCAIAHAACCBwcAiwcBAI4HAACSBwAAlAcDAJkHAQCcBwUAqAchAMsHAQDPBwUA1gcDAOwHBADyBwkA/QcEAAQIAgAICAUAEAgAABIIDgAlCAEAKQgAACsIAAAwCAEAMwgAADUIAAA3CAYAPwgAAEEIAABECAEASAgAAEoIAQBNCAAATwgCAFMIDQBiCAAAZAgBAGcIAABpCAEAbAgAAG4IAQBxCAAAcwgBAHYIAwB9CAAAgQgBAIUIAACICAAAiggAAIwIAwCRCAAAlAgIAJ4IAgCjCAMAqAgAAKoIAgCvCAAAsQgCALUIAQC7CAMAwAgBAMMIAADFCAEAyAgAAMoIAQDNCAAAzwgBANIIAADUCAEA1wgAANkIAADcCCcABQkBAAgJFQAfCQMAJAlsAJIJAQCXCYAAGQoGACEKAgAlCq8A1goFAN4KOQAZCxgAMwsAADcLAQBECwEARwsCAEsLAABNCwIAUQsAAFMLAQBtCwEAcQsAAHcLBwCCCwAAhQsCAIkLBQCQCwYAmAsFAJ8LAAChCxwAwwsPANULLwAGDAAANQwJAEAMAABCDAAARAwCAEgMAwBNDAEAUgwAAFQMBwBdDAEAYQwCAGUMAABnDAMAbAwAAG8MCwB9DAIAgwwAAIYMDwCXDAAAmgwLAKcMEAC5DAIAvQwAAL8MDgDPDAAA0gwNAOUMAADnDAEA7QwRAAENAAADDQMACQ0jAC8NAQA1DWwAow01ANoNAQDdDTsAGg4BAB0OCAAnDgAAKQ4BACwOBAAyDgEANw4AADkOAgA9DgoASQ4AAEsOBABSDgQAWA4EAF4OEwBzDhEAhg4AAIgOBACODgUAlw4FAJ4OGAC6DgAAvQ4LAMsOAQDODgAA0A4AANIOAADXDgsA5A4JAPEOEQAEDwAADQ8BABEPAgAVDwAAFw8AAB0PAwAvDwAANg8AADgPAAA6DwEAQQ8MAFQPAgBcDwAAXw8BAGUPAABtDwEAcA8AAH4PAQCCDwAAiQ8AAIwPAQCVDwIAmQ8AAJwPAACeDwEAqA8AAKoPBACyDwgAvQ8KAMkPAADMDwEA0Q8EAN4PAQDhDwYA9Q8HAAAQAgAEEBIAGRAfADsQCwBIEAAAShABAE0QBQBWEAoAYxADAGgQCQBzEAIAeBAUAI8QDQCeEBkAuhABAL4QAgDCECkA7RAJAPgQDwAJEQIADRELABoRAQAdEQMAIhEDACcRCQAyEQcAOxEBAD4RHABcESgAhhEGAJERAQCUEQAAmBEDAJ4RAACiEQcAshENAMERAQDIEQMAzREBANERAgDWEQAA2BEgAPwRDAALEgUAEhIHABsSIwBBEg4AURIOAGESAQBlEgMAbBIFAHYSDgCHEgYAkBIAAJMSCQCeEgIAoxIEAKkSBQCwEgAAtRIJAMASAQDEEgUAyxIAAM0SCgDZEgAA3BIAAN4SCQDpEgIA8RIJAPwSBQAGEwAACRMBABMTAgAaEwAAHRMBACMTCAAtEwAALxMBADMTEQBIEwcAURMBAFQTBABaEwAAXhMEAGYTAgBqEwEAcRMEAHcTAQB6EwgAhBMBAIgTAwCNEwgAlxMAAJkTAgCeEwAAoRMAAKMTAgCoEwIArBMFALMTBQC6EwIAwBMCAMYTAADIEwEAzBMAAM4TBADVEw8A5hMAAOkTAQDsEwMA8hMEAPoTJQAiFAAAJBQBACgUAAAqFAEALhQAADAUAQA0FAAANhQFAD8UAgBEFAAARhQAAEkUAABMFAAAThQCAFIUAgBWFAsAZBQHAG0UAABvFAAAcxQBAHcUAAB5FAAAexQBAH4UAQCBFAEAhhQBAIkUDQCaFAUAoRQHAKsUAgCvFAkAvRQBAMAUAADCFAEAxRQEAMsUBADRFAIA1RQAANcUBADdFAAA3xQGAOcUBADtFAEA8BQCAPQUAQD3FAEA+hQAAPwUAAD+FAAAARUCAAYVAwALFQYAFBUCABsVAQAeFQYAJhUDACwVAAAvFQAAMhUAADQVBAA6FQIAPhUAAEAVAgBEFQAARhUHAE8VCABaFRMAbxUCAHMVFQCMFQEAjxUPAKEVAACjFQIAqBUMALYVAwC9FQEAwBUAAMIVAADGFQgA0BUDANgVBgDgFQkA7BUDAPEVCAD7FQAA/RUDAAMWAQAGFgAAChYFABEWEgAmFgAAKBYBACwWAAAuFgEAMhYAADQWAQA4FgAAOhYEAEEWBABHFgEAShYBAFAWCgBcFgAAXxYGAGgWAgBsFmIA0BYAANIWBgDcFgAA3hYAAOEWBgDqFgAA8RYAAPMWAAD3FgAA+hYAAP8WBQAJFwAADRcAAA8XAAASFwAAFBcAABgXAAAcFwAAKBcCACwXCAA2FwAAOBcBADsXAwBDFwMASBcEAE4XAQBWFwsAZBcAAGkXAABrFwAAbhcEAXQYAwB5GAEAfBgCAIAYAgCGGAAAihgAAI4YAACQGAAAkhgAAJgYAACaGAEAnRgAAKcYQgDrGBwACRnCAM0ZAQDTGQIA2RkCAN8ZCgDuGQYA9hkAAPwZAAD+GQAAABoAAAoaAQAOGgIAEhoAABYaAAAYGgAAGhoBAB0aAAAhGgEALxoBADUaAAA6GgIAQBoAAEIaBQBKGiIAcRoaAY4bAACTGwEAlhtRAOsbAADtGwMA8xsAAPYbCAAAHFkAWxweAIAcAgCGHAAAiBwBAI0cAACPHAAAkRwDAJYcIwC7HBcA1BwZAPEctQCoHQEArR0AAK8dAAC2HQAAuB0BALsdAAC9HQAAwR0AAMUdAADHHQAAyx0AAM4dAADRHQAA2B0AANodAADcHQEA4R0AAOMdBQDqHQIA7h0AAPAdAwD5HQAA+x0AAP0dAQACHm0AdB4AAIAeAQCiHgAAqx4AALweAADHHgEAyh4KANseAADiHgAA5x4JAPseAQAMHwEADx8BABYfAAAbHwAAHR8CACUfAAAnHwAAKx8HADQfAwA/HwAAQR8AAEQfAABHHwEAUB8BAFUfAgBbHwcAZB8CAGgfAQBsHwIAcB8AAHIfAAB0HwAAeR8AAHsfAACAHwAAgx8BAIYfAwCLHwAAjR8CAJQfBwCfHwEAox8AAK4fAACwH0MA9x8EAAAgAAACIAAABCAEAAsgAAANIAAADyABABIgAAAVIAEAGiAAAB0ghQClIAAAqiABAK0gAQAzIQEANyEAADkhBwBEIQUASyEDAFAhAwBWIQAAWCEBAFshAABdIQEAYSEBAGghAABvIQAAcSEBAHYhAgB6IQMAgCEBAIMhAACGIQAAiCEAAI8hAQCSIQIAnCEAAJ8hAQCiIQIAqCECAK4hAQC2IQIAuyEIAMYhAQDKIQIAziEDANQhDgDoIQAA7iEBAPUhAAD4IQUAASIAAAkiBAAUIgAAGSIAACMiAAAqIgEALSICADEiAAA0IgAAOSIAADsiAAA9IgAAQiIAAEYiAABIIgIATyIGAFwiCABqIgAAbCIAAHAiAAB2IgAAeCIEAIEiAQCEIgEAhyIAAIkiAQCMIgEAjyIFAJYiAACYIgAAmiIAAJwiAACgIgAApCIAAKwiAACvIgEAsiIAALciAQC9IgEAwCIEAMsiAgDTIgEA2CIAANsiAgDfIgQA7SIAAO8iBAD1IgUA/CIAAAIjAwAHIwAACSMAAAsjAQAQIwAAEiMAABQjAwAiIwAAJSMBACgjAgAsIwQAMyMIAD0jBQBEIwAARyMAAEkjAABLIwAAUSMAAFcjAQBdIwAAYSMAAGMjAABlIwEAiCMAAI0jAACQIwAAliMDAJsjBACiIwEArSMAAK8jAACxIwQAtyMEAL8jAADBIwEAxCMAAMYjAADII08AGiQAABwkAAAeJAQAJiQAAC8kAAAxJAAAMyQAADskAwBDJAAARSQAAEckAABJJAEATiQAAFAkAABWJAIAWiQEAGAkBwBpJAAAbCQAAG8kAQBzJAAAeSQAAH0kAACDJAAAhyQKAJQkAgCZJAAAnCQCAKckAQC4JAAAuiQAAL0kAgDBJAMAxiQCAMokAADNJAAA0SRiADYlDgBIJQEATSUMAFslAABdJQEAYCWUAPYlgQB7JgAAfiYDAIkmAgCOJhAAoCaAACInAAAsJwAAMScAADMnAAA1JwAAPCcEAEInAgBHJwEASycAAE8nAABVJwEAWCcAAFongQDiJwMA6ycAAO4nAADwJwEA9ScBAPonAQD9JwAABSgAAAkoAQAPKAAAFSgAAB8oAAAmKAIAMigEADooAQBKKAEATygAAFEoAABYKAAAWigBAF0oAwBlKAAAZygAAGkoAAB0KAAAeigAAHwoAACAKAAAgigAAIQoAQCKKAAAjygAAJsoAACfKAEAoigAAKQoAQCsKAIAsigVAMkoBgDVKAEA2CgNAOcoBADtKDAAICkAACIpAAAkKQEAJykBACopBgAyKTYAaykUAIIpAQCGKQAAiCkUAJ8pAQCiKQgArSkFALQpCQC/KQEAwikAAMYpAADIKQMAzSkBANApBQDaKRIA7ikBAPEpAgD2KQAA+ikWABIqFwAuKgQANyoWAE8qAQBSKgAAVCoaAHIqAgB3KgIAeyoKAIoqEgCeKgYAtSoAAMMqAgDZKgAA4CoJAO4qAADwKgwA/ioCAAIrEgAWKwEAGSsPACsrAAAtKwQAMysLAEArAABCKyAAZSsFAHArAAByKwEAdisAAHgrBACCKwAAhSsAAIgrAACMKwAAjisWAKYrAgCrKwAArSsjANUrBADdKxAA7ysHAPgrAwD9KwIAASwAAAQsAwAJLAIADSwEABQsAgAYLAUAICwAACIsDgA1LAEAOSwAADssAABALAEAQywAAEUsAABHLAQATSwAAE8sAABSLAEAViwAAFgsAQBbLAAAXSwCAGEsDQBwLAAAciwBAHUsAAB3LAEAeiwAAHwsAQB/LAAAgSwBAIQsAwCLLAAAjywBAJMsAACWLAAAmCwAAJosAwCfLAAAoiwIAKwsAgCxLAMAtiwAALgsAgC9LAAAvywCAMMsAQDJLAMAziwBANEsAADTLAEA1iwAANgsAQDbLAAA3SwBAOAsAADiLAEA5SwAAOcsAADqLBIA/iwHAAgtAAALLREAHi0IACgtAQArLQgANS0AADctAQA9LQEAQC0EAEktAQBSLQIAWC0AAFotAABkLQAAcy0DAHstCgCHLQAAiS0IAJQt9ACKLgEAjS4cAKsuAQCuLhEAwi4SANYuAADYLiEA+y4BAP8uAAABLwsADi8CABUvAAAlLwMAOy8FAEMvAABHLwEATi8AAFAvAQBXLwYAYi8AAGgvCgB8LwUAgy8AAIUvAwCKLwUAky8EAJovAgCfLwAApS8EAK4vCwC7LwoAyS8CAM0vAADRLwIA1S8DAN0vEwD0LwEA+C8BAPsvAAD9LwAAADACAA0wAwAUMAUAHTABACAwMABTMAAAVTAAAFkwAABbMAAAXTABAGAwAABmMAEAaTADAHEwBQB+MAIAgjAAAIUwAACKMAAAjDACAJAwAACUMAAAmTADAJ4wAAChMCkAzDAJANgwAQDbMAEA4DABAOQwAADmMAAA6jADAPAwAQDzMAAA9jAEAP4wAQABMQAAAzEAAAUxAAAJMQAADDEDABUxAAAcMQAAHzEBACIxAQAvMQcAOzEEAEExAQBHMQAASTEAAE4xAwBYMQAAWzEDAGAxAABkMQsAcTEAAHMxAAB1MQQAezEnAKUxAQCpMRoAxjEBAMoxEADcMQEA3zEFAA=="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNMHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMMMNNNNNNMMNNNNNNMMMMNMNCMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPFPPFPPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIPKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGGPPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNFNNNNNNNNNNNNNNNNNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEECEEEEEFKNHHHHHHHHHHNNHHHNNNHHHHHNNNNHHHHNNNNHHHHHNOHHHHHHCHHHHHHHHHNNNNNHHHHHHNOMSSSSSSSSHHHGPPNNNNNNNNNNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFKSHHHNNHNNNNNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPPPKKKPFPPPIIGKEEEPIIIPPEPPEEEKEEPPPPPKKPPEPGPPFEKPPPFGEEIEPKIGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNMCNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNOFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNNMNNNNNNNMMNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNNNMNNNNNMNNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKFFRNNMNNMNNNNNNCNNNNNNNNNNMNNMNNNNNNNNNNNNNNMNNMNNMNNMNNMNNMNNNNNNNNNNNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","","get","get_any_value","get_any_value_unchecked","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_leaf_array","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_binary","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_binary","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","num_falses","num_trues","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","rechunk_and_trim_to_normalized_offsets","rechunk_validity","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","fixed_size_list","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","","append_values_iter_trusted_len","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","get_list_builder","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_list_builder","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompareEq","ChunkCompareIneq","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_elementwise","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","row_encode","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","get_row_encoding_dictionary","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","fmt","","from","","","","hash","","init","","into","","limit","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","get_strftime_format","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Dimension","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","Infer","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","ReshapeDimension","RevMapping","Second","Specified","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","","agg_list","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","can_have_dtype","cast","","","cast_leaf","cast_unchecked","","","","","","cast_with_options","","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_dictionary","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","enum_","eq","","","","","","","","","","","eq_missing","equal","","","","","","","equal_missing","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","explode_and_offsets","","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","","","","","for_each_amortized","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","","full_null","","","","","","","","full_null_with_dtype","","get","","","get_any_value","","","","","","","","","","get_any_value_unchecked","","","","","","","","","","get_as_series","","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","get_inner","","get_leaf_array","get_object","get_object_unchecked","get_or_infer","get_or_infer_with","get_shape","get_str","get_unchecked","","get_values_size","","","","group_tuples","","","","","","","gt","","","","","gt_eq","","","","","hash","","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_supported_list_arithmetic_input","is_temporal","is_unsigned_integer","","is_view","iter","last","leaf_dtype","lt","","","","","lt_eq","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","materialize_unknown","max","","max_binary","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","","min_binary","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","","","new_dimension","new_empty","new_from_index","","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","","not_equal_missing","","","","","","","num_falses","num_trues","offsets","","oldest","par_iter","","par_iter_indexed","","partial_cmp","","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","rechunk_and_trim_to_normalized_offsets","remainder","","","","","","","","","reverse","","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","","shift_and_fill","","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","","sum","sum_reduce","","take_unchecked","","","","","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_fixed_size_list","to_logical","","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","width","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","zip_and_apply_amortized_same_type","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_dtype_unchecked","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","EnumChunkedBuilder","append_enum","append_null","append_str","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","cast","chrono","num","once_cell","rayon","regex","CastOptionsImpl","SerPrimitive","__clone_box","binary_large_to_binary","binary_to_binview","binary_to_dictionary","binary_to_large_binary","binary_to_list","binary_to_utf8","binview_to_decimal","boolean_to_binaryview","boolean_to_primitive","boolean_to_utf8view","borrow","borrow_mut","cast","cast_default","cast_unchecked","clone","clone_into","clone_to_uninit","date32_to_date64","date64_to_date32","decimal_to_decimal","decimal_to_float","decimal_to_integer","default","deref","deref_mut","drop","f16_to_f32","fixed_size_binary_binary","fixed_size_binary_to_binview","float_to_decimal","fmt","from","","init","int32_to_time32ms","int32_to_time32s","int64_to_time64ns","int64_to_time64us","integer_to_decimal","into","partial","primitive_as_primitive","primitive_map_is_valid","primitive_to_boolean","primitive_to_dictionary","primitive_to_primitive","primitive_to_same_primitive","temporal","time32_to_time64","time32ms_to_time32s","time32s_to_time32ms","time64_to_time32","time64ns_to_time64us","time64us_to_time64ns","timestamp_to_date32","timestamp_to_date64","timestamp_to_timestamp","to_owned","try_from","try_into","type_id","unchecked","utf8_large_to_utf8","utf8_to_binary","utf8_to_dictionary","utf8_to_large_utf8","utf8_to_utf8view","utf8view_to_utf8","vzip","wrapped","write","EPOCH_DAYS_FROM_CE","MICROSECONDS","MICROSECONDS_IN_DAY","MILLISECONDS","MILLISECONDS_IN_DAY","NANOSECONDS","NANOSECONDS_IN_DAY","SECONDS_IN_DAY","time_unit_multiple","utf8_to_naive_timestamp_scalar","utf8_to_timestamp_scalar","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","align_chunks_par","append_record_batch","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clear_columns","clone","","","clone_into","","","clone_to_uninit","","","column","","column_extend_unchecked","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","first_col_n_chunks","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","max_n_chunks","mean_horizontal","min_horizontal","mul","","","n_chunks","new","new_no_checks","new_no_checks_height_from_first","new_no_length_checks","new_with_broadcast","new_with_broadcast_len","new_with_broadcast_no_namecheck","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","rechunk_mut","rechunk_to_record_batch","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","set_height","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_extend","","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Partitioned","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_std","agg_sum","agg_valid_count","agg_var","and_reduce","append","apply_binary_elementwise","apply_broadcasting_binary_elementwise","apply_unary_elementwise","arg_sort","array","as_list","as_materialized_series","","as_partitioned_column","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","","bitxor","","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","implode","init","","into","","into_column","","","into_frame","into_materialized_series","into_nulls","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","lazy_as_materialized_series","len","","list","lt","lt_eq","map_scalar","map_unary_elementwise_to_bool","max_reduce","mean_reduce","median_reduce","min_reduce","mul","","","","n_chunks","n_unique","name","","new","","new_empty","","new_from_index","new_partitioned","new_scalar","not_equal","not_equal_missing","null_count","or_reduce","phys_iter","product","quantile_reduce","rechunk","rem","","","","rename","","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","scalar","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","sort_with","split_at","std_reduce","str","strict_cast","","sub","","","","sum_reduce","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_add_owned","try_apply_binary_elementwise","try_apply_broadcasting_binary_elementwise","try_apply_unary_elementwise","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","try_list","try_map_unary_elementwise_to_bool","try_mul_owned","try_str","try_sub_owned","try_u16","try_u32","try_u64","try_u8","type_id","","u16","u32","u64","u8","unique","unique_stable","unit_scalar_from_series","var_reduce","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","xor_reduce","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow_mut","columns_to_hashes","default","deref","deref_mut","drop","finish","from","init","into","try_from","try_into","type_id","vec_hash","","vec_hash_combine","","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Equiprobable","","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","","Midpoint","","NamedFrom","NamedFromOwned","Nearest","","NewChunkedArray","NoData","NonExistent","Null","","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","QuantileMethod","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","extract","finish","fixed_size_list","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","method","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_cyclic_in","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","materialize_unknown_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompareEq","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","and_reduce","","append","arg_sort","","arg_unique","","arithmetic","array","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","","","bitor","","","","bitxor","","","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","first","","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_chunks","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","last","","len","","limit","","list","list_offsets_and_validities_recursive","list_rechunk_and_trim_to_normalized_offsets","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","or_reduce","","phys_iter","product","quantile_reduce","","rechunk","rechunk_validity","","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","to_arrow","to_float","to_logical_repr_unchecked","to_owned","","to_physical_repr","to_string","try_add_owned","try_array","try_binary","try_binary_offset","try_bool","try_categorical","try_decimal","try_f32","try_f64","try_from","","","","","","","","try_i16","try_i32","try_i64","try_i8","try_idx","try_into","","","","try_list","try_mul_owned","try_new","try_null","try_set_metadata","try_str","try_sub_owned","try_to_compact_string","try_u16","try_u32","try_u64","try_u8","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","xor_reduce","","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","NumericFixedSizeListOp","NumericListOp","Output","__clone_box","","add","","","add_to","","","borrow","","borrow_mut","","checked","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","div","","","divide","","","drop","","execute","","floor_div","","from","","init","","into","","mul","","","multiply","","","rem","","","remainder","","","sub","","","subtract","","","to_owned","","try_from","","try_into","","type_id","","vzip","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","merge_dtypes_many","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[467,"polars_core::chunked_array::arithmetic"],[495,"polars_core::chunked_array::builder"],[604,"polars_core::chunked_array::builder::list"],[759,"polars_core::chunked_array::cast"],[787,"polars_core::chunked_array::collect"],[801,"polars_core::chunked_array::float"],[803,"polars_core::chunked_array::from_iterator_par"],[807,"polars_core::chunked_array::iterator"],[862,"polars_core::chunked_array::iterator::par"],[864,"polars_core::chunked_array::metadata"],[1150,"polars_core::chunked_array::object"],[1227,"polars_core::chunked_array::object::builder"],[1251,"polars_core::chunked_array::object::registry"],[1280,"polars_core::chunked_array::ops"],[1410,"polars_core::chunked_array::ops::arity"],[1446,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1448,"polars_core::chunked_array::ops::gather"],[1451,"polars_core::chunked_array::ops::row_encode"],[1461,"polars_core::chunked_array::ops::search_sorted"],[1490,"polars_core::chunked_array::ops::sort"],[1497,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1498,"polars_core::chunked_array::ops::sort::options"],[1575,"polars_core::chunked_array::temporal"],[1576,"polars_core::chunked_array::temporal::conversion"],[1580,"polars_core::config"],[1584,"polars_core::datatypes"],[3173,"polars_core::datatypes::categorical"],[3316,"polars_core::datatypes::categorical::revmap"],[3370,"polars_core::datatypes::categorical::string_cache"],[3389,"polars_core::datatypes::enum_"],[3407,"polars_core::datatypes::revmap"],[3413,"polars_core::datatypes::string_cache"],[3417,"polars_core::error"],[3484,"polars_core::error::PolarsError"],[3488,"polars_core::error::constants"],[3491,"polars_core::export"],[3499,"polars_core::export::cast"],[3574,"polars_core::export::cast::temporal"],[3585,"polars_core::fmt"],[3615,"polars_core::frame"],[3909,"polars_core::frame::column"],[4178,"polars_core::frame::explode"],[4206,"polars_core::frame::group_by"],[4442,"polars_core::frame::group_by::GroupByMethod"],[4443,"polars_core::frame::group_by::GroupsProxy"],[4445,"polars_core::frame::group_by::aggregations"],[4458,"polars_core::frame::group_by::expr"],[4461,"polars_core::frame::row"],[4557,"polars_core::functions"],[4559,"polars_core::hashing"],[4590,"polars_core::prelude"],[5221,"polars_core::prelude::PolarsError"],[5225,"polars_core::prelude::default_arrays"],[5231,"polars_core::prelude::fixed_size_list"],[5251,"polars_core::prelude::list"],[5274,"polars_core::prelude::null"],[5305,"polars_core::prelude::revmap"],[5311,"polars_core::prelude::slice"],[5314,"polars_core::prelude::string_cache"],[5318,"polars_core::prelude::utf8"],[5322,"polars_core::random"],[5323,"polars_core::scalar"],[5366,"polars_core::scalar::reduce"],[5367,"polars_core::schema"],[5391,"polars_core::series"],[5853,"polars_core::series::amortized_iter"],[5877,"polars_core::series::arithmetic"],[5952,"polars_core::series::arithmetic::checked"],[5960,"polars_core::series::ops"],[5986,"polars_core::utils"],[6195,"polars_core::utils::flatten"],[6200,"dyn_clone::sealed"],[6201,"num_traits"],[6202,"num_traits::cast"],[6203,"polars_error"],[6204,"polars_core::series::arithmetic::borrowed"],[6205,"polars_core::frame::group_by::proxy"],[6206,"core::option"],[6207,"core::iter::traits::iterator"],[6208,"polars_utils::pl_str"],[6209,"core::ops::function"],[6210,"core::marker"],[6211,"alloc::string"],[6212,"polars_core::datatypes::dtype"],[6213,"polars_arrow::array::binview::view"],[6214,"polars_core::datatypes::aliases"],[6215,"polars_core::chunked_array::metadata::md_trait"],[6216,"alloc::boxed"],[6217,"polars_core::series::arithmetic::borrowed::checked"],[6218,"polars_arrow::array"],[6219,"alloc::vec"],[6220,"compact_str"],[6221,"core::iter::traits::double_ended"],[6222,"core::fmt"],[6223,"core::iter::traits::collect"],[6224,"polars_arrow::bitmap::immutable"],[6225,"rayon::iter"],[6226,"polars_arrow::trusted_len"],[6227,"polars_core::datatypes::any_value"],[6228,"polars_utils::index"],[6229,"std::sync::rwlock"],[6230,"polars_core::chunked_array::logical::decimal"],[6231,"core::iter::traits::exact_size"],[6232,"polars_core::series::series_trait"],[6233,"core::slice::iter"],[6234,"core::iter::adapters::map"],[6235,"core::convert"],[6236,"polars_core::chunked_array::metadata::guard"],[6237,"polars_core::chunked_array::metadata::interior_mutable"],[6238,"alloc::sync"],[6239,"core::ops::range"],[6240,"polars_core::datatypes::field"],[6241,"polars_arrow::legacy::kernels::rolling::no_nulls"],[6242,"polars_core::chunked_array::ops::rolling_window"],[6243,"polars_utils::aliases"],[6244,"polars_utils::hashing"],[6245,"ndarray::aliases"],[6246,"either"],[6247,"core::result"],[6248,"core::any"],[6249,"polars_core::chunked_array::arithmetic::numeric"],[6250,"polars_core::chunked_array::builder::string"],[6251,"polars_arrow::array::binview"],[6252,"polars_core::chunked_array::builder::boolean"],[6253,"polars_core::chunked_array::builder::null"],[6254,"polars_core::chunked_array::builder::primitive"],[6255,"core::clone"],[6256,"polars_core::chunked_array::builder::list::anonymous"],[6257,"polars_core::chunked_array::builder::list::boolean"],[6258,"polars_core::chunked_array::builder::list::primitive"],[6259,"polars_core::chunked_array::builder::list::binary"],[6260,"polars_core::chunked_array::builder::list::null"],[6261,"core::hash"],[6262,"polars_arrow::array::boolean"],[6263,"polars_arrow::array::fixed_size_list"],[6264,"polars_core::chunked_array::metadata::env"],[6265,"polars_core::chunked_array::metadata::collect"],[6266,"bitflags::iter"],[6267,"std::fs"],[6268,"std::sync::mutex"],[6269,"polars_arrow::datatypes"],[6270,"polars_arrow::bitmap::utils::iterator"],[6271,"polars_arrow::bitmap::utils::zip_validity"],[6272,"polars_arrow::offset"],[6273,"polars_arrow::array::static_array"],[6274,"core::error"],[6275,"polars_arrow::array::primitive"],[6276,"polars_row::row"],[6277,"polars_arrow::array::binary"],[6278,"polars_arrow::legacy::array::slice"],[6279,"chrono::naive::datetime"],[6280,"alloc::borrow"],[6281,"polars_arrow::array::static_array_collect"],[6282,"bytemuck::zeroable"],[6283,"polars_core::chunked_array::logical::categorical"],[6284,"polars_core::chunked_array::logical::categorical::merge"],[6285,"polars_core::chunked_array::logical"],[6286,"polars_core::datatypes::time_unit"],[6287,"polars_arrow::datatypes::reshape"],[6288,"core::cmp"],[6289,"polars_arrow::datatypes::physical_type"],[6290,"polars_arrow::types"],[6291,"core::borrow"],[6292,"polars_arrow::pushable"],[6293,"polars_core::datatypes::into_scalar"],[6294,"polars_core::chunked_array::logical::categorical::builder"],[6295,"polars_core::chunked_array::logical::categorical::revmap"],[6296,"polars_core::chunked_array::logical::categorical::string_cache"],[6297,"polars_core::chunked_array::logical::enum_"],[6298,"polars_error::warning"],[6299,"polars_arrow::types::offset"],[6300,"polars_arrow::array::dictionary"],[6301,"polars_arrow::array::list"],[6302,"polars_arrow::array::utf8"],[6303,"polars_arrow::types::native"],[6304,"num_traits::identities"],[6305,"polars_compute::cast"],[6306,"num_traits::float"],[6307,"polars_arrow::array::fixed_size_binary"],[6308,"polars_compute::cast::primitive_to"],[6309,"chrono::offset"],[6310,"polars_row"],[6311,"polars_arrow::record_batch"],[6312,"polars_arrow::datatypes::schema"],[6313,"polars_core::series::from"],[6314,"polars_core::chunked_array::ndarray"],[6315,"polars_arrow::array::struct_"],[6316,"polars_core::frame::column::scalar"],[6317,"polars_core::series::iterator"],[6318,"polars_utils::idx_vec"],[6319,"rayon::iter::plumbing"],[6320,"polars_core::frame::group_by::into_groups"],[6321,"core::iter::adapters::copied"],[6322,"core::iter::adapters::zip"],[6323,"polars_arrow::legacy::kernels::rolling"],[6324,"polars_utils::float"],[6325,"polars_core::frame::group_by::aggregations::agg_list"],[6326,"polars_core::frame::row::av_buffer"],[6327,"polars_core::hashing::identity"],[6328,"polars_core::hashing::vector_hasher"],[6329,"core::alloc"],[6330,"std::os::fd::owned"],[6331,"std::os::fd::raw"],[6332,"std::path"],[6333,"std::ffi::os_str"],[6334,"core::mem::maybe_uninit"],[6335,"polars_arrow::legacy::kernels::time"],[6336,"core::default"],[6337,"core::ffi::c_str"],[6338,"polars_arrow::scalar"],[6339,"std::io::error"],[6340,"regex::error"],[6341,"simdutf8::basic"],[6342,"alloc::collections"],[6343,"alloc::ffi::c_str"],[6344,"polars_arrow::legacy::array::default_arrays"],[6345,"polars_arrow::buffer::immutable"],[6346,"polars_core::named_from"],[6347,"polars_core::chunked_array::ops::aggregate"],[6348,"polars_core::chunked_array::ops::aggregate::quantile"],[6349,"polars_arrow::legacy::index"],[6350,"core::pin"],[6351,"core::io::borrowed_buf"],[6352,"std::io"],[6353,"polars_core::chunked_array::ops::aggregate::var"],[6354,"alloc::collections::btree::map"],[6355,"polars_arrow::legacy::array::fixed_size_list"],[6356,"polars_arrow::legacy::array::list"],[6357,"polars_arrow::legacy::array::null"],[6358,"polars_arrow::bitmap::mutable"],[6359,"polars_schema::schema"],[6360,"alloc::rc"],[6361,"polars_core::series::arithmetic::list"],[6362,"polars_core::series::arithmetic::fixed_size_list"],[6363,"polars_core::utils::supertype"],[6364,"polars_arrow::legacy::utils"],[6365,"polars_arrow::legacy::trusted_len::rev"],[6366,"core::iter::sources::repeat"],[6367,"core::iter::adapters::take"],[6368,"polars_core::chunked_array::object::extension"],[6369,"polars_error::constants"],[6370,"polars_compute"],[6371,"polars_compute::cast::binary_to"],[6372,"polars_compute::cast::utf8_to"],[6373,"polars_compute::cast::binview_to"],[6374,"polars_compute::cast::boolean_to"],[6375,"polars_compute::cast::decimal_to"],[6376,"polars_arrow::temporal_conversions"],[6377,"polars_compute::cast::temporal"],[6378,"polars_core::frame::horizontal"],[6379,"polars_arrow::legacy::prelude"],[6380,"polars_arrow::legacy::array"],[6381,"polars_arrow::legacy::array::utf8"],[6382,"polars_core::utils::any_value"],[6383,"polars_core::utils::schema"],[6384,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kn000l0000000000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`0000000100000000000`0000000000000000000000000000000000001000001000000000000000000`00000000000000000000000000000`0000000000000000000000000000000000000000000000000000000000``00000000000000000000000000000000000000000000000000000000000`00000000000000000000000001001001000000010000000000000000000000000000000000000000000000`A@d00000000000000000000000000````````A@hA@lA@nAA`A@f432140043143214321432143214321432143214321044AAdAAf543`6543AAh00076547654`7654365476547654765476547654````````AAj0AAlAAnAB`ABb43ABdABf4ABh4773437621504421214476215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Fj00000000000000000000000000``ABlABn1000101000`AC```ACbACd````AChAClACn21021021021021021021021021210210`210210210210210``ADlJbGh0If`3Ld22````````42110Lf4AD`43434343434344334343215604321560431150431504315043ADb054542654332671543267154541Ff7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````AE`00000Ij1111`111111110011111111111111111111``111111101111111110Il2222222222`AEn0000000000000000000000````AFb00AFd00000001```00`0`10000AGh````````````````````````````0AFn``AGjAHj33333CGn4044AFj4AG`055AGb0AGd`88AGf00999999977AGl0`AH`AHb`<<`AHdAHf`AHh0<<????AHlAHn>><<AI`==:AIbAGj0:2AIdAIf`AIh0`0AIjAIl`AGb0AInAFjAJ`AJbAJdAGh000AGd61`AJf`AK`AJlAJh```````````````````````````````````````````````AKl00`0`00000000000000000`00000`````AKn0````EjF`101010101010101010101011001011001010101010101010221010101010101010010010`````````ANf`IbEbCd```````21AEb`2``3`0320```32````3`````200`2`3200``0`20`3230```00`40320``320```BCn`2CH`CHb````B@d``8``764``764``764``764``4`555444BD`875``4``5B@fANj1010A`;:8`;:`;``939```````````BAd``35`=<;`<`9;99```90`<;9``<;9``<;9``<;9``9;9`99AJj0;0ANbANd?ANf?ANhMn8ANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fEfJhGl0Dd00Fb00IbjBhJfLnLlMbMfD`DbDnDhAnEdEfGlDdFbAF`33545433432104545ALhALj543543437665432654324543AKh65406543ALl0ALn0Eb8Ib1MnAM`AJj>======ANbCHdC`jBhJfIhANd;ANf=ANh<ANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fANbCHdC`jBhJfIhANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fEb`IbAN`012EdEfGlDdFbAKh6Jh654321`JfLnLlMbMfD`DbANbANdIbANfEbANhMnANjANlANn?>AO`AOb?>=<AOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fANbANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fANbANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@f3MnB@j0005Eb400`IbANf26ANb0CHdC`jBhJfIhANd98:ANh=ANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fANb0CHdC`jBhJfIhANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fJhjBhJfLnLlMbMfD`DbANbCHdC`;:9IhANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fAN`JhIbMn0`1ANfEb0ANh3ANj;:985EdEfGlDd0Fb04321100::8877669955B@b0B@d0AEb0B@f087ANb7565AF`AMn;:871ANdIb0ANfEb0ANhMnANj0=<<;:EdEf;CHdC`jBhJfIh>======<;;;;:99988ANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEb00B@fEbEf000GlDd0Fb0AF`32104432211AKh01432154433225432143214AJj00Ed76542310765423071<;JhAN`02987645100298764529CdjBhJfIhANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`EdEf1AF`0B@d0EbIbBB`AJj76DdAKh98Gl2Fb2913300133006ANf8MnANj;AEbB@f;;<ANbCHdC`jBhJfIhANdIb=EbANh>=ANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fEdEfEb4ANbCHdC`jBhJfIhANdIbANf:ANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fANbBBb0EdEfGlDdFbAKhAF`BBdJh9IbEb0010000101000010>101010>00010000010>AJj019887798877``1ANf2:28:98:ALhALj10`<4:<;:<6jBhJfLnLlMbMfD`DbDdFbMn0CH`CHbBCh55554444AF`04B@bB@d02EdEfGl;:AKh666ANbANh33543>>==543>>==335404>4>IbANj93Jh4ALhALj1089jBhJfLnLlMbMfD`DbEdEfGlDdFbAKhAF``JhANb65465465477Mn9876543987654376547654ALhALjIb0`5jBhJfLnLlMbMfD`DbGl0FbEd0Ef0Dd033EbMnANj203AEb6505ANbANdIbANf7ANh76ANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fEb2JhANbIb3ANj7Fb2EfEd100ALl0ALn0B@j00078CHdC`jBhJfIhANd>ANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@b0B@dAEbB@fANbCHdC`jBhJfIhANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fIbEb10ANj5EfANbCHdC`jBhJfIhANd;ANf;ANhMn<ANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@f1GlDdFbAF`AJj0Eb1ALhALj7BBjBBlB@nBBnBC`BCbBCdBCfBBb:9?>AKh>Gl:98765432<;DdFb3AF`ANbCHdC`jBhJfIhANdIbANfEbANhMnANjANlANnLnLlAO`AObMbMfD`DbAOdAOfDnDhAOhAnAOjAOlAOnB@`B@bB@dAEbB@fEdCH`CHbBChElAJjIbEf7`````BCn`BD`10`AMl00BCj10010BDbBCl32103`3333021032103221033333333AMn31321444444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BDh0000`00`0000000`0`BDj0000000000000000`8787`````BDnALd000Ah`112101```11111112BDl3030`3003030`300300`3030`0``````0303003030CHfCHh10`````````````BFb``````````00```000`````0000````0000`````00````````````````00000``````00BG`````````````BGd00000000000`````00`````00000BHb`0BH`11``0``01BDf000000000000000000000BIfBIh34210342222342342342`222421034210342222103422222222224222442`22222223422103422222222222222222`222422222222222222103422103421022222222222222222222222210222222222222222222`222222222222222222210222222222222222222234222222221034222221034221034222222210342222222``En0`0BJh11111111111111111111111111011110111111111111101010101011101010111010111111010101111111111111101011101111111110111111110101BGn1222112222222211222212222222222212121222222222222222212221222122222222221222222221222212212222222222221222222122222222221222222212221222222`BJn00000000000000000000000000`BKd0``0``````BKlAl`2`22222222210`222BK`1BHj40`1023BLfBKhBKf4537621045374537453745373456210045376210453731621044537454455`643445377`62104445537445335BL`04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CHjCHl0``````````BM`BMb0`BMd0BMfBMh``101010101010`10101010BHh211210210210210210`0210210210000022110`2102102121021```210210210210210`````````BMj0`00000000000BMl000111111`````````BJb````````````ALd00`0Bj0CAlCHnNdAh6```BCn`326```````6```4BD``43``````14343``43`7`5BOd```381``````BLl```71`````99`99``9``9`9``0``8OjBNnLhNf>BAf:5BO`BOb84444????4?44ALdBj08766CAl6BJb6Nd<65=43;:928170<65=`98BNl04<;:9281=76>4<;:9281=76>4<;:9281=76>4:B@j0005;66``8;;5;;;;:392`655=<;;4:392>87?65=<;4:392>87?;`;;;65=<;;4:392>87?995=;;;:392>87?55==;;339922??<AMn`<7766>=<<<;4:3?98BOd<8888877777??>==================6<5;4BLl;:1CAdCAhCAj;;;;;;;;LhCI`0000111==<=CAn222Gb3?3=BAf=9Oj55`ALdBj2BNn8CAlNfBJb7NdBLlBO`BObBOd;8:9;8Lh876=5432100000:9<=0<0BHf1`1``1CBf0CBhBAf6;2204CBjCBl6266666666666`OjBNnBj999````;7799699999`9`AKn0:CCh3`;994243;NfBJb9NdBLlBO`BObBOdALd:LhB@j0002<>=11CAl:9BAf987654>OjBNn53=<2;:987CBj666666667Bj77803275?>4=<;:97`CCh914386NfBJb7NdBLlBO`BObBOd?66<ALdLh:::0CHfCHh10```CAdCAhCAj`CDb000000000000000000`CDd000000000000000000000`CDh00000000000000000000000000000`BCnBD`10``AKn0``````CIbCId``Lb000000000000000000000000000000000`0000000`CEh0`````BGhCEd101012101010101Kb0``00```BJj11````01AfCBb0111111`0010000`110001001001111111111111111CEl342034211122221122121122421424222203422034222222034211114222222222442222221121114222034222222222222222222222222222222222222222221221111111122222214222222`2034203422220BIj322333322003333222322333333333322223222232233332232223333333333333333333333333333333333333323133333332`2233222223332333252233332223312332223222233333333223322223335333333333333145333333333314533333333333331453333322322222145333223``Cl000000000000000000000`````CF`CFbCFd210CFfAj03232`32323232324321003232323232324321004321004321003232323232``BNlFl0100CFh0`00000000000000000000000CFj0``````````0CFlCG````````211````22222222CGhAL`43210432CFn543543543``CGb06``6653322654322654632654``636533665565`6666653265546666226CGf337333````4764376577743765375BIn6888383``3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{Bh}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{Bh}}}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}54{{{f{Bl{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{Cd{}{{Bn{C`}}{Cb{C`}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Ch{B`}{{Cf{B`}}}}Cj}}{{{f{{l{j}}}}c}{{l{j}}}{{Cn{Cl}{{Cf{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{{l{Bh}}}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Cn{Cl}{{Cf{Af}}}}}}{{{f{{l{D`}}}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{{l{Db}}}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Ch{}{{Cf{}}}}Cj}}{{{f{{l{c}}}}e}DdCd{{Cn{{f{BlDf}}}}}}{{{f{{l{c}}}}{f{Ch}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Ch}}}{{l{e}}}A`Cd}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Cn{{f{{Dl{Dj}}}}}{{Cf{{f{{Dl{Dj}}}}}}}}}}{{{f{{l{Dn}}}}c}{{l{Dn}}}{{Cn{{f{E`}}}{{Cf{{f{E`}}}}}}}}{{{f{Bl{l{c}}}}e}bA`{{Ch{}{{Cf{}}}}Cj}}{{{f{{l{c}}}}Ebg}{{l{i}}}Cd{}{{Cn{}{{Cf{e}}}}}Cd}{{{f{{l{Bh}}}}{f{Ch}}}{{Ah{Ed}}}}{{{f{{l{j}}}}{f{Ch}}}{{Ah{Ef}}}}{{{f{{l{c}}}}g{f{Bl{Dl{e}}}}}bA`{}{{Ch{B`{f{e}}}{{Cf{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Ch{}{{Cf{}}}}Cj}}{{{f{{l{Dn}}}}c}{{l{Dn}}}{{Cn{Eh{f{E`}}}{{Cf{Eh}}}}Cj}}{{{f{{l{c}}}}Ej}ElA`}{{{f{{l{c}}}}{f{{Dl{En}}}}{f{F`}}}{{Ah{El}}}A`}{{{f{{l{c}}}}}{{Ah{El}}}A`}`{{{f{{l{Dn}}}}}Fb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Cd}{{{f{{l{c}}}}}{{f{Eb}}}Cd}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}CdCd{{Cn{{B`{Cl}}B`B`}{{Cf{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eFd{}}00{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{{{f{{l{c}}}}}{{Fh{Ff}}}Cd}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Ch{}{{Cf{}}}}Cj}A`}{{{f{{l{c}}}}{f{Eb}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Eb}}Fj}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Fl}{{{f{{l{c}}}}e}{{Ah{Af}}}FlAd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fn}}}}}}}Cd}{{{f{{l{c}}}}}G`Cd}{{{f{{l{c}}}}}{{f{{Gd{Gb}}}}}Cd}{{{f{Bl{l{c}}}}}{{f{Bl{Gd{Gb}}}}}Cd}{{{f{{l{c}}}}}{{l{c}}}Cd}0{{f{f{Blc}}}b{}}{fb}`{{{f{Bl{l{c}}}}}b{CdA`}}`{fGf}{{{f{{l{c}}}}}{{Ah{{f{Dl}}}}}A`}{{{f{Bl{l{c}}}}{f{{l{c}}}}Gh}bCd}{{{f{Bl{l{c}}}}{f{{l{e}}}}Gh}bCdCd}{{{f{{l{c}}}}}{{`{{Gj{}{{Bb{{f{Dl}}}}}}}}}A`}{{}{{l{c}}}Cd}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{Fnb}{{{f{Bl{l{c}}}}}bCd}1{{{f{{l{c}}}}}{{l{c}}}Cd}{{{f{{l{c}}}}}{{f{Eb}}}Cd}{{{f{{l{c}}}}e}GlA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}10{{{f{Bl{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gl}}}{{Ah{{l{c}}}}}{{Cd{}{{Gn{C`}}{Cb{C`}}}}}}{{{f{{l{c}}}}}B`Cd}{{{f{{l{c}}}}}{{B`{Fn}}}Cd}`{{{f{{l{An}}}}{f{BlH`}}}Hb}{{{f{{l{c}}}}{f{BlH`}}}HbA`}{{{f{{l{c}}}}e}bCd{{Cn{B`}}}}{{{f{{l{Bh}}}}c}b{{Cn{{B`{Cl}}}}}}{{{f{{l{j}}}}c}b{{Cn{{B`{Cl}}}}}}{cc{}}{c{{l{e}}}Hd{{Cd{}{{Hf{c}}}}}}1{{Bjc}{{l{e}}}Hh{{Cd{}{{Hf{}}}}Cd}}{{{f{{l{c}}}}e}{{l{c}}}{{Cd{}{{Hf{}}}}Cd}Hh}{{Bj{Gd{Gb}}}{{l{c}}}Cd}{{Bj{Gd{Gb}}Eb}{{l{c}}}Cd}{c{{l{e}}}{{Hh{}{{Bb{{Hl{Gd{B`{Hj}}}}}}}}}A`}{c{{l{e}}}{{Hh{}{{Bb{B`}}}}}A`}{c{{l{An}}}{{Hh{}{{Bb{{B`{d}}}}}}}}{{Bjc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}21{{Bjc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hn{}{{Bb{B`}}}}}A`}{{Bj{f{Dl}}}{{l{c}}}A`}{{Bj{f{{Dl{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{I`{}{{Bb{B`}}}}}A`}{{BjGd}{{l{c}}}A`}{{BjGd{B`{Hj}}}{{l{c}}}A`}{{BjFn}{{l{c}}}A`}0{{{f{{l{c}}}}Fn}{{l{c}}}Cd}{{BjFn{f{Eb}}}Ef}{{BjFn{f{Eb}}Fn}Ed}{{{f{{l{c}}}}Fn}B`Cd}{{{f{{l{c}}}}Fn}{{Ah{Ib}}}A`}{{{f{{l{c}}}}Fn}IbA`}{{{f{{l{Bh}}}}Fn}{{B`{Af}}}}{{{f{{l{j}}}}Fn}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{Id}}}Cd}{{{f{{l{c}}}}}dCd}{{{f{{l{c}}}}}IfCd}{{{f{{l{j}}}}}Af}{{{f{{l{Bh}}}}}Af}0{{{f{{l{c}}}}}B`Cd}0{{{f{{l{{Ih{c}}}}}}Fn}{{B`{{f{Ij}}}}}Il}0;{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FndFn}AlFd}{{{f{{l{c}}}}e}GlA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}019{{{f{{l{c}}}}{B`{Fn}}}{{l{c}}}Cd}{{}Fn}0{{FnIn{B`{J`}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Eb}}}}{{{f{{l{Bh}}}}}{{f{Eb}}}}{{{f{{l{c}}}}}{{Jd{{Jb{c}}}}}Cd}{{}c{}}0{{}En}{{{l{Jf}}{B`{Fn}}Fn}{{Ah{Jh}}}}{{{l{Jf}}{B`{Fn}}Fn}Jh}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JjJl{Jn{}{{Bb{}}}}GjI`}}}A`}{{{l{c}}}AfCd}{{{f{{l{c}}}}}dCd}{{{f{{l{c}}}}}GlK`}000{{{f{{l{c}}}}}GlCd}02{{{f{{l{c}}}}}KbCd}{{{f{{l{c}}}}}{{`{{Kd{}{{Bb{B`}}}}}}}Cd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}Cd}{{{f{{l{c}}}}}{{Kj{{Kf{Gb}}{Kh{{f{Gb}}}{{Cf{{B`{{f{Hj}}}}}}}}}}}Cd}`{{fc}Gf{{Kl{E`}}}}{{{f{{l{c}}}}}B`Cd}{{{f{{l{c}}}}}{{B`{Fn}}}Cd}{{{f{{l{c}}}}}{{Kn{c}}}Cd}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FnCd}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbL`}}00{{{f{{l{c}}}}Fn}{{l{c}}}Cd}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}{{{f{{l{c}}}}e}GlA`Ad}10{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{Dh}}}}}{{B`{{f{{Dl{Dj}}}}}}}}{{{f{{l{c}}}}}LbA`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}Fd}{{{f{{l{c}}}}}LbFd}{{{f{Bl{l{c}}}}{Jb{c}}}bCd}`{{{f{{l{c}}}}}{{Ld{c}}}Cd}{{{f{{l{c}}}}}{{f{{Lh{{Lf{c}}}}}}}Cd}{{{f{{l{c}}}}}{{B`{{Lj{Ff}}}}}Cd}{{{f{Bl{l{c}}}}}{{f{Bl{Lh{{Lf{c}}}}}}}Cd}{{{f{{l{c}}}}}{{Lh{{Lf{c}}}}}Cd}=<;{{{f{{l{c}}}}}{{B`{Hl}}}A`};{{Bj{f{{Dl{Dj}}}}FnFn}{{l{An}}}}{{Bj{f{Dl}}}{{l{c}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FnCd}{{{f{{l{c}}}}}{{Ah{Fn}}}A`}{{{f{{l{c}}}}}{{f{Bj}}}Cd}{{Bjc}{{l{An}}}{{Kl{{Dl{{B`{d}}}}}}}}{{Bjc}{{l{Ll}}}{{Kl{{Dl{J`}}}}}}{{Bjc}{{l{Ln}}}{{Kl{{Dl{{B`{M`}}}}}}}}{{Bjc}{{l{Dh}}}{{Kl{{Dl{{Gd{Dj}}}}}}}}{{Bjc}{{l{Ll}}}{{Kl{{Dl{{B`{J`}}}}}}}}{{Bjc}{{l{Dh}}}{{Kl{{Dl{{B`{{Gd{Dj}}}}}}}}}}{{Bjc}{{l{Mb}}}{{Kl{{Dl{{B`{Md}}}}}}}}{{Bjc}{{l{Mf}}}{{Kl{{Dl{{B`{Mh}}}}}}}}{{Bjc}{{l{Jf}}}{{Kl{{Dl{{B`{Mj}}}}}}}}{{Bjc}{{l{D`}}}{{Kl{{Dl{{B`{In}}}}}}}}{{Bjc}{{l{An}}}{{Kl{{Dl{d}}}}}}{{Bjc}{{l{Ln}}}{{Kl{{Dl{M`}}}}}}{{Bjc}{{l{Db}}}{{Kl{{Dl{{B`{n}}}}}}}}{{Bjc}{{l{Dn}}}{{Kl{{Dl{Df}}}}}}{{Bj{Ml{Md}}}{{l{Mb}}}}{{Bj{Ml{J`}}}{{l{Ll}}}}{{Bj{Ml{M`}}}{{l{Ln}}}}{{Bjc}{{l{Dn}}}{{Kl{{Dl{{B`{Df}}}}}}}}{{Bjc}{{l{Db}}}{{Kl{{Dl{n}}}}}}{{Bjc}{{l{D`}}}{{Kl{{Dl{In}}}}}}{{Bjc}{{l{Jf}}}{{Kl{{Dl{Mj}}}}}}{{Bjc}{{l{Mf}}}{{Kl{{Dl{Mh}}}}}}{{Bjc}{{l{Mb}}}{{Kl{{Dl{Md}}}}}}{{Bj{Ml{Mh}}}{{l{Mf}}}}{Bj{{l{{Ih{c}}}}}Il}{{{f{{l{c}}}}FnFn}{{l{c}}}A`}{{Bj{Gd{c}}}{{l{{Ih{c}}}}}Il}{{Bj{Gd{c}}Hj}{{l{{Ih{c}}}}}Il}{{BjGd}{{l{c}}}A`}{{{Lh{Mn}}{Gd{Gb}}IdId}{{l{c}}}Cd}{{{f{{l{c}}}}}{{l{c}}}K`}{{{f{{l{c}}}}{f{{l{c}}}}}GlA`}{{{f{{l{c}}}}e}GlA`Ad}10{{{f{{l{c}}}}}FnCd}{{{f{{l{An}}}}}Fn}0``{{{f{{l{j}}}}}{{`{{N`{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dn}}}}}{{`{{N`{}{{Bb{{B`{{f{E`}}}}}}}}}}}}{{{f{Bl{l{j}}}}}{{`{{Nb{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dn}}}}}{{`{{Nb{}{{Bb{{B`{{f{E`}}}}}}}}}}}}{{{f{{l{c}}}}}LbA`}{{{f{Bl{l{c}}}}}bCd}{{{f{{l{c}}}}nNd}{{Ah{{B`{n}}}}}Fd}{{{f{{l{c}}}}nNd}{{Ah{Lb}}}Fd}{{BjFnn}{{Ah{{l{An}}}}}}{{BjFnnn}{{Ah{{l{c}}}}}A`}{{BjFn}{{l{c}}}A`}{{BjFnnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Cd}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{c}}}}}{{B`{Hj}}}Cd}{{{f{{l{c}}}}}{{f{Mn}}}Cd}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bl{l{c}}}}Bj}bCd}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Ch}}Nf}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fne}{{Ah{{l{c}}}}}K`{{Cn{{f{Bl{l{c}}}}}{{Cf{B`}}}}}}{{{f{{l{c}}}}ndd{B`{J`}}}{{Ah{{l{c}}}}}Cd}{{{f{{l{c}}}}Fndd{B`{J`}}}{{Ah{{l{c}}}}}Cd}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hh{}{{Bb{Id}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hh{}{{Bb{Id}}}}}{{Ch{B`}{{Cf{B`}}}}}}{{{f{{l{c}}}}{f{Gl}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bl{l{j}}}}}b}{{{f{Bl{l{c}}}}d}bCd}{{{f{Bl{l{j}}}}Eb}b}{{{f{Bl{l{c}}}}Id}bCd}{{{f{Bl{l{c}}}}Kb}bCd}{{{f{{l{c}}}}Mh}{{l{c}}}A`}{{{f{{l{c}}}}MhB`}{{l{c}}}A`}{{{f{Bl{l{c}}}}}bCd}{{{f{{l{c}}}}MhFn}{{l{c}}}Cd}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ej}{{l{c}}}A`}{{{f{{l{c}}}}Mh}{{Hl{{l{c}}{l{c}}}}}Cd}0{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}LbFd}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{An}}}}}{{B`{Id}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}LbA`}{{{f{{l{c}}}}{B`{Fn}}}{{l{c}}}Cd}{{{f{{l{c}}}}{f{El}}}{{Ah{{l{c}}}}}Cd}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}Cd{{Kl{{Dl{Id}}}}Nh}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Cd{}{{Gn{C`}}{Nj{C`}}{Bn{C`}}}}Cd}{{Kl{{Dl{Id}}}}Nh}}{{{f{{l{c}}}}{f{El}}}{{l{c}}}{{Cd{}{{Gn{C`}}{Nj{C`}}{Bn{C`}}}}Cd}}`{{{f{{l{c}}}}dNl}{{Gd{{Gd{Nn}}}}}Cd}{{{f{{l{c}}}}}{{l{c}}}K`}{{{f{{l{Dn}}}}Fn}{{Ah{Af}}}}{{{f{Bl{l{j}}}}Eb}b}{{{f{Bl{l{Bh}}}}Eb}b}{{{f{{l{j}}}}}{{Ah{O`}}}}{{{f{{l{c}}}}}{{Ah{Ob}}}A`}{fc{}}{{{f{{l{Dh}}}}}Dd}{{{f{{l{c}}}}}{{Gd{B`}}}A`}{{{f{{l{c}}}}}{{Od{Gd{Gd{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{{l{Bh}}}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{{l{Bh}}}}c}{{Ah{{l{Bh}}}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{{l{Bh}}}}c}{{Ah{Ef}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{{l{c}}}}g}{{Of{Dde}}}Cd{}{{Cn{{f{BlDf}}}{{Cf{{Of{be}}}}}}}}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{}{}{{Cn{}{{Cf{{Of{eg}}}}}}}Cd}{c{{Of{e}}}{}{}}0{{Bjg}{{Of{{l{i}}e}}}Hd{}{{Hh{}{{Bb{{Of{ce}}}}}}}{{Cd{}{{Hf{c}}}}Cd}}{{}{{Of{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{Ah{{B`{Af}}}}}}}}}}{fOh}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}Cd}{{{f{Bl{l{c}}}}}bCd}{{{f{{l{c}}}}Fn}{}Cd}{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}LbFd}{{}c{}}0{{{f{{l{Bh}}}}}Fn}{{Bjc}{{l{e}}}Hd{{Cd{}{{Hf{c}}}}Cd}}{{{f{{l{e}}}}c}{{l{e}}}Hd{{Cd{}{{Hf{c}}}}Cd}}{{{f{{l{c}}}}{Gd{Gb}}}{{l{c}}}Cd}{{{l{c}}Bj}{{l{c}}}Cd}{{{f{{Dl{Oj}}}}e}c{}{{Ol{{f{El}}}{{Cf{c}}}}}}{{{f{{l{c}}}}Kb}{{l{c}}}Cd}{{{l{c}}}eA`{}}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}3201{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}453201543267452301543201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}{{{f{{l{Bh}}}}{f{{l{c}}}}e}{{l{Bh}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gl}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{Cd{}{{Nj{C`}}}}}}````{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}e{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}c}e{}{}{}}{{c{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}e{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}g{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}c}g{}{}{}}{{c{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}g{}{}{}}{{{A@d{}{{On{c}}{A@`{e}}{A@b{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BlA@f}}}b}{{{f{Bl{A@h{c}}}}}b{A@jNh}}{{{f{BlA@l}}}b}{{{f{BlA@n}}}b}{{{f{Bl{AA`{c}}}}}bA`}{{{f{Bl{A@h{c}}}}{B`{e}}}b{A@jNh}{{Kl{c}}}}{{{f{BlA@f}}{B`{c}}}b{}}{{{f{BlA@f}}c}b{}}{{{f{Bl{A@h{c}}}}e}b{A@jNh}{{Kl{c}}}}{{{f{BlA@l}}d}b}5{f{{f{c}}}{}}000{{{f{Bl}}}{{f{Blc}}}{}}000{{{f{{A@h{c}}}}}{{A@h{c}}}{A@jNh}}{{{f{A@l}}}A@l}{{{f{A@n}}}A@n}{{{f{{AA`{c}}}}}{{AA`{c}}}{A`AAb}}{{f{f{Blc}}}b{}}000{fb}000{Fn{{f{c}}}{}}000{Fn{{f{Blc}}}{}}000{Fnb}000{A@f{{l{c}}}Cd}{{{A@h{E`}}}Dd}{{{A@h{{Dl{Dj}}}}}Fb}{AAdDd}{AAfFb}{A@lGl}`{{{AA`{c}}}{{l{c}}}A`}`{cc{}}000{{Bje}AAh{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bje}AAh{}{{Bf{}{{Bb{c}}}}}}{{Bj{f{{Dl{c}}}}}AAh{}}{{Bj{f{{Dl{{B`{c}}}}}}}AAh{}}{{}Fn}000{{}c{}}000`{{BjFn}{{A@h{c}}}{A@jNh}}{{BjFn}A@l}{{BjFn}A@n}{{BjFn}{{AA`{c}}}A`}{{{f{BlA@f}}}b}{{{f{BlA@l}}}b}{{{f{BlA@n}}}b}{{{f{Bl{AA`{c}}}}}bA`}{fc{}}000{c{{Of{e}}}{}{}}000{{}{{Of{c}}}{}}000{fOh}000<<<<````````{{{f{BlAAj}}{f{Hd}}}b}{{{f{BlAAj}}}b}{{{f{BlAAl}}}b}{{{f{BlAAn}}c}b{{Bf{}{{Bb{{B`{d}}}}}}I`}}{{{f{Bl{AB`{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}I`}}{{{f{BlABb}}}b}43{{{f{BlABd}}}b}{{{f{BlABf}}}b}{{{f{BlAAn}}}b}{{{f{BlABh}}}b}{{{f{Bl{AB`{c}}}}}bA`}{{{f{BlAAj}}{B`{{f{Hd}}}}}b}{{{f{BlAAj}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BlABb}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bl{AB`{c}}}}{B`{{f{Dl}}}}}bA`}{{{f{BlABb}}{f{Af}}}{{Ah{b}}}}{{{f{BlAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BlAAl}}{f{Af}}}{{Ah{b}}}}{{{f{BlABd}}{f{Af}}}{{Ah{b}}}}{{{f{BlABf}}{f{Af}}}{{Ah{b}}}}{{{f{BlAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BlABh}}{f{Af}}}{{Ah{b}}}}{{{f{Bl{AB`{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bl{AB`{c}}}}{f{Dl}}}bA`}{{{f{BlABd}}c}b{{Bf{}{{Bb{{B`{{f{E`}}}}}}}}I`}}{{{f{BlABf}}c}b{{Bf{}{{Bb{{B`{{f{{Dl{Dj}}}}}}}}}}I`}}{{{f{BlABd}}c}b{{Bf{}{{Bb{{f{E`}}}}}}}}{{{f{BlABf}}c}b{{Bf{}{{Bb{{f{{Dl{Dj}}}}}}}}}}{{{f{Bl{AB`{c}}}}e}bA`{{Bf{}{{Bb{}}}}}}{{{f{Bl{AB`{c}}}}e}bA`{{Bf{}{{Bb{}}}}I`}}{f{{f{c}}}{}}000000{{{f{Bl}}}{{f{Blc}}}{}}000000`{{}AAj}{{}AAl}{Fn{{f{c}}}{}}000000{Fn{{f{Blc}}}{}}000000{Fnb}000000{{{f{ABd}}}d}{{{f{ABf}}}d}{{{f{AAn}}}d}{{{f{{AB`{c}}}}}dA`}{{{f{ABb}}}d}{{{f{ABd}}}{{f{Mn}}}}{{{f{ABf}}}{{f{Mn}}}}{{{f{AAn}}}{{f{Mn}}}}{{{f{{AB`{c}}}}}{{f{Mn}}}A`}{{{f{ABb}}}{{f{Mn}}}}{{{f{BlAAj}}}Ef}{{{f{BlAAl}}}Ef}{{{f{BlABh}}}Ef}{{{f{BlABb}}}Ef}{cc{}}000000{{{f{Eb}}FnFnBj}{{Fh{ABb}}}}{{}Fn}000000{{{f{BlABd}}}Gb}{{{f{BlABf}}}Gb}{{{f{BlAAn}}}Gb}{{{f{Bl{AB`{c}}}}}GbA`}{{{f{BlABb}}}Gb}{{}c{}}000000{{BjFn{B`{Eb}}}AAj}{{BjFn{B`{Eb}}}AAl}{{BjFnFn}ABd}{{BjFnFn}ABf}{{BjFnFn}AAn}{{BjFn}ABh}{{BjFnFnEb}{{AB`{c}}}A`}{{BjFnFnEbEb}{{AB`{c}}}A`}{c{{Of{e}}}{}{}}000000{{}{{Of{c}}}{}}000000{fOh}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Fj}}}Fj}{{f{f{Blc}}}b{}}{fb}{{}Fj}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{Fj}}{f{Fj}}}d}{{f{f{c}}}d{}}0{{{f{Fj}}{f{BlH`}}}Hb}{cc{}}{{{f{Fj}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{{{f{Fj}}}d}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}5``{{ABlBj}{{l{c}}}Cd}{{ABn{f{{l{c}}}}}{{l{c}}}Cd}10{{ABnBjEb}{{l{c}}}Cd}0{{ABlBj}{{Of{{l{c}}e}}}Cd{}}{{ABn{f{{l{c}}}}}{{Of{{l{c}}e}}}Cd{}}10{{ABnBjEb}{{Of{{l{c}}e}}}Cd{}}0`{AC`AC`}``{{ACbBjEb}e{}{{ACd{c}}}}{{eBjEb}ACd{}{{Hn{}{{Bb{c}}}}}}````{f{{f{c}}}{}}00{{{f{Bl}}}{{f{Blc}}}{}}00{Fn{{f{c}}}{}}00{Fn{{f{Blc}}}{}}00{Fnb}00{cc{}}00{{}Fn}00{{}c{}}00000{{{f{ACf}}}ACh}{{{f{ACj}}Eb}ACl}{{{f{BlACh}}}{{B`{c}}}{}}{{{f{BlACl}}}{{B`{c}}}{}}{{{f{Bl{ACn{c}}}}}{{B`{e}}}Bf{}}21{{{f{Bl{ACn{c}}}}}{{B`{e}}}Gj{}}`{{{f{ACh}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{ACl}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{{ACn{c}}}}}{{Hl{Fn{B`{Fn}}}}}Bf}{c{{Of{e}}}{}{}}00{{}{{Of{c}}}{}}00{fOh}00<<<`````````````````````````{{fh}b}0000{{}Gh}{{}If}{{GhGh}Gh}{{IfIf}If}{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}3210{{{f{Gh}}}M`}0{{{f{If}}}Dj}05432{f{{f{c}}}{}}000000{{{f{Bl}}}{{f{Blc}}}{}}000000{{{f{{Lf{c}}}}}{{Fh{Ff}}}Cd}{{{f{{Lf{c}}}}}{{Lf{c}}}Cd}{{{f{{Jb{c}}}}}{{Jb{c}}}Cd}{{{f{AD`}}}AD`}{{{f{Gh}}}Gh}{{{f{If}}}If}{{f{f{Blc}}}b{}}0000{fb}0000{{{f{BlADb}}}b}0{GhGh}{IfIf}{{{f{Gh}}Gh}d}{{{f{If}}If}d}{{}{{Lf{c}}}Cd}{{}{{Jb{c}}}Cd}{{}Gh}{{}If}{Fn{{f{c}}}{}}{{{f{{Ld{c}}}}}{{f{e}}}Cd{}}111111{Fn{{f{Blc}}}{}}000000{{GhGh}Gh}{{IfIf}If}{{}d}{{{f{Ff}}}{{B`{Id}}}}{{{f{{Jb{c}}}}}{{B`{Id}}}Cd}{{{Jb{c}}Id}{{Jb{c}}}Cd}{{{Jb{c}}{B`{Id}}}{{Jb{c}}}Cd}{Fnb}000000<;5{{{f{Gh}}{f{Gh}}}d}{{{f{If}}{f{If}}}d}7{{{f{BlGh}}c}b{{Hh{}{{Bb{Gh}}}}}}{{{f{BlIf}}c}b{{Hh{}{{Bb{If}}}}}}{{{Jb{c}}d}{{Jb{c}}}Cd}{{{Jb{c}}{B`{d}}}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}Gh}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}Gh}{{Jb{e}}}CdCd}{{{Jb{c}}If}{{Jb{c}}}Cd}{{{Jb{c}}{B`{If}}}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}{f{BlH`}}}HbCd}{{{f{AD`}}{f{BlH`}}}Hb}{{{f{Gh}}{f{BlH`}}}Hb}0000{{{f{If}}{f{BlH`}}}Hb}0000{cc{}}000000{M`{{B`{Gh}}}}{Dj{{B`{If}}}}{M`Gh}0{DjIf}010{cGh{{Hh{}{{Bb{Gh}}}}}}{cIf{{Hh{}{{Bb{If}}}}}}{{{f{E`}}}{{B`{Gh}}}}{{{f{E`}}}{{B`{If}}}}{{{f{{Jb{c}}}}}{{B`{Id}}}Cd}{{{f{{Jb{c}}}}}dCd}{{{f{If}}}d}{{{f{Ff}}}If}{{{f{{Jb{c}}}}}IfCd}0{{{f{{Jb{c}}}}}{{B`{f}}}Cd}0{{{f{Bl{Lf{c}}}}}{{f{Bl{Jb{c}}}}}Cd}{{{f{If}}}Kb}{{}Fn}000000{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}{{GhGh}Gh}{{IfIf}If}{{{f{Gh}}Gh}d}{{{f{If}}If}d}{{}c{}}000000{Ghc{}}{Ifc{}}{{{f{Gh}}}d}{{{f{If}}}d}{{{f{{Jb{c}}}}}dCd}21{{{f{{Jb{c}}}}}KbCd}111{{{f{Gh}}}{{ADd{Gh}}}}{{{f{If}}}{{ADd{If}}}}{{{f{Gh}}}{{ADf{Gh}}}}{{{f{If}}}{{ADf{If}}}}{{}d}{{}{{f{{ADj{ADh}}}}}}{{{f{Ff}}}{{B`{Lb}}}}{{{f{{Jb{c}}}}}{{B`{Lb}}}Cd}{{{Jb{c}}}{{Jb{c}}}Cd}{{{Jb{c}}B`}{{Jb{c}}}Cd}{{{f{{Jb{c}}}}{Jb{c}}}{{ADl{c}}}Cd}4231{{{Jb{c}}}{{Lf{c}}}Cd}{GhGh}{IfIf}{{{f{{Lf{c}}}}}{{Lj{{Jb{c}}}}}Cd}{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}{{{f{BlGh}}Ghd}b}{{{f{BlIf}}Ifd}b}{{{f{Bl{Jb{c}}}}{B`{Id}}}bCd}{{{f{Bl{Jb{c}}}}d}bCd}{{{f{BlIf}}d}b}{{{f{Bl{Jb{c}}}}If}bCd}{{{f{Bl{Jb{c}}}}B`}bCd}033{{{f{Bl{Jb{c}}}}Kb}bCd}{{{f{BlIf}}Kb}b}{{{Jb{c}}Kb}{{Jb{c}}}Cd}{{{Jb{c}}{B`{Kb}}}{{Jb{c}}}Cd}{{GhGh}Gh}{{IfIf}If}>=10{{{Lf{c}}}{{Jb{c}}}Cd}{fc{}}0000{{{f{BlGh}}Gh}b}{{{f{BlIf}}If}b}{c{{Of{e}}}{}{}}000000{{}{{Of{c}}}{}}000000{{{f{{Lf{c}}}}}{{B`{{Lj{{Jb{c}}}}}}}Cd}{{{f{{Lf{c}}}}}{{B`{{Jd{{Jb{c}}}}}}}Cd}{fOh}000000:9{{{f{{Lf{c}}}}}{{f{{ADn{Ff}}}}}Cd}{{}c{}}000000{ADbADb}0{{{f{{Lf{c}}}}}{{Jd{{Jb{c}}}}}Cd}````{{fh}b}{{{f{{AE`{c}}}}Fn}{{Hl{{AE`{c}}{AE`{c}}}}}Il}{e{{AE`{c}}}Il{{Hh{}{{Bb{{f{c}}}}}}}}{e{{AE`{c}}}Il{{Hh{}{{Bb{{B`{{f{c}}}}}}}}}}{{AEbe}g{}{{Hh{}{{Bb{c}}}}}{}}0{{{f{Ij}}}{{f{AEd}}}}{{{f{{AE`{c}}}}}{{f{AEd}}}Il}{{{f{Bl{AE`{c}}}}}{{f{BlAEd}}}Il}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}`{{{f{{AE`{c}}}}Fn}dIl}{{{f{{AE`{c}}}}}{{AE`{c}}}{IlAAb}}{{f{f{Blc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{{AE`{c}}}}}{{f{AEb}}}Il}{{{f{{f{Ij}}}}{f{{f{Ij}}}}}d}{{{f{Ij}}{f{Ij}}}d}{{{f{{AE`{c}}}}{f{BlH`}}}Hb{IlAEf}}{{{Gd{c}}}{{AE`{c}}}Il}{cc{}}{{FnAEb}{{AE`{c}}}Il}{{{f{{AE`{c}}}}Fn}{{B`{{f{c}}}}}Il}{{}AEb}{{{f{Hj}}{f{{AE`{c}}}}{f{{AE`{c}}}}}{{AE`{c}}}Il}{{AEb{f{Hj}}cc}{{AE`{e}}}{}Il}{{{f{Hj}}{f{{AE`{c}}}}e}{{AE`{c}}}Il{}}{{{f{Hj}}c{f{{AE`{e}}}}}{{AE`{e}}}{}Il}{{}Fn}{{}c{}}{{{f{{AE`{c}}}}}eIl{}}{{{f{{AE`{c}}}}Fn}dIl}{{fFn}d}1{{{f{{AE`{c}}}}}{{AEl{{f{c}}{AEh{c}}AEj}}}Il}{{{f{{AE`{c}}}}}{{AEl{egAEj}}}Il{}{}}{{{f{{AE`{c}}}}}FnIl}0`{db}{{{f{Bl{AE`{c}}}}{B`{Hj}}}bIl}{{{f{Bl{AE`{c}}}}FnFn}bIl}{{fFnFn}c{}}01{{{f{{AE`{c}}}}Fn}{{Hl{{Fh{Hd}}{Fh{Hd}}}}}Il}0{{{f{Ij}}}{{Fh{Ij}}}}{{{f{{AE`{c}}}}}{{Fh{Hd}}}Il}{fc{}}{g{{Of{{AE`{c}}e}}}Il{}{{Hh{}{{Bb{{Of{{B`{{f{c}}}}e}}}}}}}}{g{{Of{{AE`{c}}e}}}Il{}{{Hh{}{{Bb{{Of{{f{c}}e}}}}}}}}{{AEbg}{{Of{ie}}}{}{}{{Hh{}{{Bb{{Of{ce}}}}}}}{}}0{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{Ij}}}{{f{E`}}}}{{}{{f{E`}}}}{{{f{{AE`{c}}}}}{{B`{{f{Hj}}}}}Il}{{{f{{AE`{c}}}}Fn}{{f{c}}}Il}0{{{f{{AE`{c}}}}Fn}eIl{}}{{{f{{AE`{c}}}}}{{AEh{c}}}Il}{{{f{{AE`{c}}}}}eIl{}}{{}c{}}{{{f{{AE`{c}}}}{B`{Hj}}}{{Fh{Hd}}}Il}{{{AE`{c}}{B`{Hj}}}{{AE`{c}}}Il}0`{{{f{Bl{AEn{c}}}}}bIl}0{{{f{Bl{AEn{c}}}}{B`{c}}}bIl}{{{f{Bl{AEn{c}}}}c}bIl}{{{f{Bl{AEn{c}}}}{f{AEd}}}bIl}{{{f{Bl{AEn{c}}}}{f{AEd}}}{{Ah{b}}}Il}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{}{{AEn{c}}}Il}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{AEn{c}}}{{AF`{c}}}Il}{cc{}}{{{f{{AEn{c}}}}BjFnFn}{{Fh{ABb}}}Il}{{}Fn}{{}c{}}{{BjFn}{{AEn{c}}}Il}{{{f{Bl{AEn{c}}}}}AfIl}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}5````{{{f{BlAFb}}}b}{{{f{BlAFb}}{B`{{f{AEd}}}}}b}{{{f{BlAFb}}{f{AEd}}}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}`{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{AFd}}{f{BlH`}}}Hb}{cc{}}{{{f{AFb}}BjFnFn}{{Fh{ABb}}}}{{BjFn}{{Fh{AFb}}}}{{}AFf}{{}AEb}{{}Fn}{{}c{}}{{}d}`{{AFhAFfAEb}b}{{{f{BlAFb}}}Af}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}6````````````````````````````````````````````{{fh}b}{{{f{AFj}}}n}{{{f{{AFn{}{{AFl{c}}}}}}g}{{AFn{}{{AFl{c}}}}}{}{}{{Ch{{B`{e}}}{{Cf{{B`{c}}}}}}Cj}}{{{f{AG`}}{f{Ch}}}AG`}{{{f{AG`}}{f{Ch}}}{{l{c}}}Cd}{{{f{{AFn{}{{AFl{c}}}}}}i{f{Bl{Dl{g}}}}}b{}{}{}{{Ch{{B`{e}}{f{g}}}{{Cf{g}}}}}}{{{f{{AFn{}{{AFl{c}}}}}}g}{{AFn{}{{AFl{c}}}}}{}{}{{Ch{e}{{Cf{c}}}}Cj}}{{{f{AGb}}Ej}El}{{{f{AGb}}{f{{Dl{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{AGd}}}{{Ah{El}}}}`{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{AGf}}{f{Eb}}}{{Ah{Af}}}}0{{{f{AGf}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{AGh}}}AGh}{{f{f{Blc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{AGh}}{f{AGh}}}d}{{{f{{AGj{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGl}}}{{Ah{Af}}}}{{{f{AGl}}}{{Ah{{Hl{Af{AGn{Mh}}}}}}}}`{{{f{AH`}}c}{{Ah{AH`}}}{}}{{{f{AHb}}{f{Gl}}}{{Ah{{l{c}}}}}Cd}`{{{f{AGh}}{f{BlH`}}}Hb}{cc{}}`{{BjcFn}AHd{}}{{BjFn}AHf}`{{{f{AHh}}Fn}{{Ah{Ib}}}}{{{f{AHh}}Fn}Ib}{{{f{{AHj{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGh}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{{{f{AGh}}}d}{{{f{AHl}}}{{Ah{Gl}}}}{{{f{AHn}}}{{Ah{Gl}}}}66{{{f{AFj}}}{{B`{c}}}{}}{{{f{AFj}}}{{B`{n}}}}{{{f{AI`}}}{{B`{c}}}{}}2{{{f{AFj}}}{{B`{{Hl{cc}}}}}{}}{{{f{AGd}}}{{Ah{Fn}}}}{{{f{AIb}}FnFn}{{l{c}}}Cd}{{{f{{AGj{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGl}}}{{Ah{{AGn{Mh}}}}}}{{{f{AI`}}nNd}{{Ah{{B`{c}}}}}{}}{{{f{AId}}}AId}{{{f{AIf}}{f{Ch}}Nf}{{Ah{Af}}}}`{{{f{AIh}}c{B`{e}}}{{Ah{AIh}}}{{Hh{}{{Bb{Id}}}}}{}}{{{f{AIh}}ci}{{Ah{AIh}}}{{Hh{}{{Bb{Id}}}}}{}{}{{Ch{{B`{e}}}{{Cf{{B`{g}}}}}}}}`{{{f{AIh}}{f{Gl}}{B`{c}}}{{Ah{AIh}}}{}}{{{f{AIj}}Mh}{{l{c}}}Cd}{{{f{AIl}}Mhc}{{l{e}}}{}Cd}`{{{f{AGb}}d}{{l{c}}}Cd}{{{f{AGb}}Ej}{{l{c}}}Cd}{{{f{AIn}}Dj}{{B`{n}}}}{{{f{AFj}}}{{B`{c}}}{}}{{{f{AJ`}}{f{c}}}{{Ah{AJ`}}}Nh}{{{f{AJb}}{f{c}}}AJbNh}{{{f{AJd}}}{{Gd{{f{{Dl{Dj}}}}}}}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{AGd}}}{{Ah{AGd}}}}9{{}c{}}`{{{f{AJf}}{f{Gl}}{f{{l{c}}}}}{{Ah{{l{c}}}}}Cd}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}CdCd{{Ch{ff}{{Cf{}}}}}{{Ch{f}{{Cf{}}}}}{{Ch{f}{{Cf{}}}}}Cd}{{{l{c}}{l{e}}gik}{{l{m}}}CdCd{{Ch{}{{Cf{}}}}}{{Ch{}{{Cf{}}}}}{{Ch{}{{Cf{}}}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CdCdHd{{Cn{ff}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}CdCd{{AJh{B`B`}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}g}bCdCd{{Cn{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}DdCdCd{{Cn{{f{BlDf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}CdCd{}{{Cn{}{{Cf{g}}}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}iBj}{{l{k}}}CdCd{HdAJj}{{Cn{ff}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBj}{{l{k}}}CdCdHd{{Cn{ff}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}CdCdHd{{Cn{}{{Cf{g}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}CdCd{{Cn{ff}{{Cf{{Fh{Hd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}CdCd{{Cn{ff}{{Cf{{Fh{Hd}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Of{{l{m}}i}}}CdCd{}{}{{Cn{B`B`}{{Cf{{Of{{B`{g}}i}}}}}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}CdCdCd{{AJl{B`B`B`}}}Cd}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Of{{l{m}}i}}}CdCdHdAJn{{Cn{ff}{{Cf{{Of{gi}}}}}}}{{Cd{}{{Hf{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBj}{{Of{{l{m}}i}}}CdCdHdAJn{{Cn{ff}{{Cf{{Of{gi}}}}}}}{{Cd{}{{Hf{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Of{{l{c}}g}}}CdCdAJn{{Cn{ff}{{Cf{{Of{{Fh{Hd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Of{{l{o}}k}}}CdCdCd{}{}{{Cn{B`B`B`}{{Cf{{Of{{B`{i}}k}}}}}}}Cd}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{}{}{{Cn{B`}{{Cf{{Of{{B`{e}}g}}}}}}}Cd}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{}{}{{Cn{}{{Cf{{Of{eg}}}}}}}Cd}{{{f{{l{c}}}}i}{{Of{{l{k}}g}}}Cd{HdAJj}AJn{{Cn{f}{{Cf{{Of{eg}}}}}}}{{Cd{}{{Hf{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Cd{{AK`{B`}}}Cd}{{{f{{l{c}}}}e}{{l{g}}}CdAK`Cd}{{{f{{l{c}}}}g}{{l{i}}}CdHd{{Cn{f}{{Cf{e}}}}}{{Cd{}{{Hf{e}}}}}}{{{l{c}}g}{{l{i}}}CdHd{{Cn{}{{Cf{e}}}}}{{Cd{}{{Hf{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Cd{HdAJj}{{Cn{f}{{Cf{e}}}}}{{Cd{}{{Hf{e}}}}}}0{{{f{{l{c}}}}}FnA`}0{{KbKb}Kb}{{{f{El}}Id}{{Ah{b}}}}{{{f{{AKb{Id}}}}Id}{{Ah{b}}}}{{{f{{Dl{En}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AKd}}}}{{{f{{Dl{En}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{{AKf{Mh}}}}}}{{Bj{f{{Dl{En}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AKh}}}}{{Bj{f{{Dl{Af}}}}}{{Ah{AKh}}}}{{{f{Af}}}{{Ah{Gb}}}}{{{f{{Dl{Af}}}}}{{Ah{AKd}}}}{{{f{{Dl{Af}}}}}{{Ah{AKh}}}}00{{{f{Eb}}}{{B`{AKj}}}}````{{fh}b}{{{f{{l{c}}}}eAKld}{{Gd{Id}}}Cd{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{AKl}}}AKl}{{f{f{Blc}}}b{}}{fb}{{}AKl}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{AKl}}{f{AKl}}}d}{{f{f{c}}}d{}}0{{{f{AKl}}{f{BlH`}}}Hb}{cc{}}{{{f{AKl}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{{{f{{Dl{f}}}}cIde}{{Gd{Id}}}{{Bf{}{{Bb{B`}}}}}{{Ch{fFnf}{{Cf{d}}}}}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}5`{{Fn{f{Bl{Gd{d}}}}}b}```{{{f{AKn}}FnFn}AKn}0{{Fn{f{{Dl{En}}}}{f{BlF`}}}{{Ah{{AL`{El}}}}}}```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{{{f{Ej}}}Ej}{{{f{F`}}}F`}{{f{f{Blc}}}b{}}0{fb}0{{}Ej}{{}F`}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0``{Fnb}0{{{f{Ej}}{f{Ej}}}d}{{{f{F`}}{f{F`}}}d}{{f{f{c}}}d{}}000{{{f{Ej}}{f{BlH`}}}Hb}{{{f{F`}}{f{BlH`}}}Hb}{cc{}}{{{f{F`}}}Ej}1{{{f{Ej}}}F`}{{{f{Ej}}{f{Blc}}}bABj}{{{f{F`}}{f{Blc}}}bABj}{{}Fn}0{{}c{}}0``````{{}Ej}{{}F`}``{{{f{AKn}}FnFn}AKn}0{fc{}}0{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{fOh}077{{Ejd}Ej}{{F`d}F`}1010{{F`c}F`{{Hh{}{{Bb{d}}}}}}210{EjEj}{F`F`}`{ALbMh}00{{{f{E`}}{f{Eb}}}{{Ah{Df}}}}{{}d}{{}Fn}01````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}0000000000000000000000000000000{{{f{Ef}}}d}{{{f{Jh}}{f{Jh}}}c{}}{{{f{Gl}}{f{Gl}}}c{}}{{GlGl}c{}}{{{f{Dd}}{f{Dd}}}c{}}{{{f{Dd}}{f{E`}}}c{}}{{DdDd}c{}}{{{f{Fb}}{f{Fb}}}c{}}{{{f{Fb}}{f{{Dl{Dj}}}}}c{}}{{FbFb}c{}}{{{f{Ib}}{f{Ib}}}Ib}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALd}}}{}}000000{{{f{Dd}}{f{Af}}}{{Ah{Af}}}}{{{f{Fb}}{f{Af}}}{{Ah{Af}}}}{{{f{Gl}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Al}}}Af}{{{f{Ef}}{f{Al}}}Af}{{{f{Gl}}{f{Al}}}Af}{{{f{Dd}}{f{Al}}}Af}{{{f{Fb}}{f{Al}}}Af}{{{f{{AF`{c}}}}{f{Al}}}AfIl}{{{f{Gl}}}d}{{{f{Gl}}}{{B`{d}}}}{{{f{Ed}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Ef}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Ed}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{Ef}}Bj}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}54{{{f{Ef}}c}Ef{{Ch{{B`{Af}}}{{Cf{{B`{Af}}}}}}Cj}}{{{f{Gl}}c}Gl{{Ch{{B`{d}}}{{Cf{{B`{d}}}}}}Cj}}{{{f{Dd}}c}Dd{{Ch{{B`{{f{E`}}}}}{{Cf{{B`{{ALf{E`}}}}}}}}Cj}}{{{f{Fb}}c}Fb{{Ch{{B`{{f{{Dl{Dj}}}}}}}{{Cf{{B`{{ALf{{Dl{Dj}}}}}}}}}}Cj}}{{{f{{AF`{c}}}}e}{{AF`{c}}}Il{{Ch{{B`{{f{c}}}}}{{Cf{{B`{c}}}}}}Cj}}{{{f{Ef}}c}Ef{{Cn{Cl}{{Cf{Af}}}}}}{{{f{Ed}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{Ef}}e}{{l{g}}}{}{{Cn{{B`{Cl}}}{{Cf{{B`{c}}}}}}Cj}Cd}{{{f{Ed}}c}Ed{{Cn{Cl}{{Cf{Af}}}}}}{{{f{ALh}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{ALj}}c}Af{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{Gl}}{f{Ch}}}Gl}{{{f{Dd}}{f{Ch}}}Dd}{{{f{Fb}}{f{Ch}}}Fb}{{{f{Gl}}{f{Ch}}}{{l{c}}}Cd}{{{f{Dd}}{f{Ch}}}{{l{c}}}Cd}{{{f{Fb}}{f{Ch}}}{{l{c}}}Cd}{{{f{Dd}}c}Dd{{Cn{{f{E`}}}{{Cf{{f{E`}}}}}}}}{{{f{Fb}}c}Fb{{Cn{{f{{Dl{Dj}}}}}{{Cf{{f{{Dl{Dj}}}}}}}}}}{{{f{Ed}}{f{Ch}}}{{Ah{Ed}}}}{{{f{Ef}}{f{Ch}}}{{Ah{Ef}}}}{{{f{Ef}}e{f{Bl{Dl{c}}}}}b{}{{Ch{{B`{Af}}{f{c}}}{{Cf{c}}}}}}{{{f{Gl}}e{f{Bl{Dl{c}}}}}b{}{{Ch{{B`{d}}{f{c}}}{{Cf{c}}}}}}{{{f{Dd}}e{f{Bl{Dl{c}}}}}b{}{{Ch{{B`{{f{E`}}}}{f{c}}}{{Cf{c}}}}}}{{{f{Fb}}e{f{Bl{Dl{c}}}}}b{}{{Ch{{B`{{f{{Dl{Dj}}}}}}{f{c}}}{{Cf{c}}}}}}{{{f{{AF`{c}}}}g{f{Bl{Dl{e}}}}}bIl{}{{Ch{{B`{{f{c}}}}{f{e}}}{{Cf{e}}}}}}{{{f{Ef}}c}Ef{{Ch{Af}{{Cf{Af}}}}Cj}}{{{f{Gl}}c}Gl{{Ch{d}{{Cf{d}}}}Cj}}{{{f{Dd}}c}Dd{{Ch{{f{E`}}}{{Cf{{ALf{E`}}}}}}Cj}}{{{f{Fb}}c}Fb{{Ch{{f{{Dl{Dj}}}}}{{Cf{{ALf{{Dl{Dj}}}}}}}}Cj}}{{{f{{AF`{c}}}}e}{{AF`{c}}}Il{{Ch{{f{c}}}{{Cf{c}}}}Cj}}{{{f{Dd}}c}Dd{{Cn{Eh{f{E`}}}{{Cf{Eh}}}}Cj}}{{{f{Gl}}Ej}El}{{{f{Dd}}Ej}El}{{{f{Fb}}Ej}El}{{{f{AKh}}Ej}El}{{{f{Gl}}{f{{Dl{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{Dd}}{f{{Dl{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{Fb}}{f{{Dl{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{AKh}}{f{{Dl{En}}}}{f{F`}}}{{Ah{El}}}}{{{f{Gl}}}{{Ah{El}}}}{{{f{Dd}}}{{Ah{El}}}}{{{f{Fb}}}{{Ah{El}}}}{{{f{{AF`{c}}}}}{{Ah{El}}}Il}{eALl{}{{Hh{}{{Bb{c}}}}}}0{{AEbe}ALn{}{{Hh{}{{Bb{c}}}}}}0{{{f{Eb}}}{{B`{{f{Eb}}}}}}{{{f{Dd}}}Fb}{{{f{Ib}}}Ib}{{{f{Eb}}}{{f{Eb}}}}{{{f{Mn}}}{{f{Eb}}}}{{{f{AM`}}}{{f{Eb}}}}{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}}{{B`{{f{{Dl{c}}}}}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Ef}}{f{{l{c}}}}{f{{l{e}}}}g}EfCdCd{{Cn{{B`{Cl}}B`B`}{{Cf{{B`{Af}}}}}}}}{{{f{Gl}}{f{Gl}}}c{}}{{GlGl}c{}}0101{f{{f{c}}}{}}0000000000000000000000000000000000000{{{f{Bl}}}{{f{Blc}}}{}}0000000000000000000000000000000000000{Eb{{Fh{Eb}}}}{{{f{AMl}}{f{AMl}}c}{{Ah{AMl}}}AMn}{{{f{Ib}}{f{Eb}}}d}{{{f{AN`}}{f{Eb}}}{{Ah{Af}}}}0{{{f{Ib}}{f{Eb}}}Ib}{{{f{Eb}}Eb}Eb}{{{f{Ed}}{f{Eb}}}{{Ah{Af}}}}{{{f{Ef}}{f{Eb}}}{{Ah{Af}}}}{{{f{Gl}}{f{Eb}}}{{Ah{Af}}}}{{{f{Dd}}{f{Eb}}}{{Ah{Af}}}}{{{f{Fb}}{f{Eb}}}{{Ah{Af}}}}{{{f{AKh}}{f{Eb}}}{{Ah{Af}}}}{{{f{AN`}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Jh}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Ed}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Ef}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Gl}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Dd}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Fb}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{AKh}}{f{Eb}}Fj}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Of{AfALd}}}{}}0000{{{f{ALh}}{f{Af}}}{{Ah{Af}}}}{{{f{ALj}}{f{Af}}}{{Ah{Af}}}}{{{f{{ANb{ce}}}}}{{ANb{ce}}}CdCd}{{{f{ANd}}}ANd}{{{f{Ib}}}Ib}{{{f{ANf}}}ANf}{{{f{Eb}}}Eb}{{{f{ANh}}}ANh}{{{f{Mn}}}Mn}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{Ln}}}Ln}{{{f{Ll}}}Ll}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{Mb}}}Mb}{{{f{Mf}}}Mf}{{{f{D`}}}D`}{{{f{Db}}}Db}{{{f{AOd}}}AOd}{{{f{AOf}}}AOf}{{{f{Dn}}}Dn}{{{f{Dh}}}Dh}{{{f{AOh}}}AOh}{{{f{An}}}An}{{{f{AOj}}}AOj}{{{f{AOl}}}AOl}{{{f{AOn}}}AOn}{{{f{B@`}}}B@`}{{{f{B@b}}}B@b}{{{f{B@d}}}B@d}{{{f{AEb}}}AEb}{{{f{B@f}}}B@f}{{f{f{Blc}}}b{}}0000000000000000000000000000000{fb}0000000000000000000000000000000{{{f{B@b}}{f{B@b}}}B@h}{{{f{BlMn}}Eb}b}{B@je{}{{ALl{c}}AJj}}0{{B@jAEb}e{}{{ALn{c}}AJj}}0{{f{f{c}}}B@h{}}{{{f{Eb}}}d}{{{f{AEb}}}d}11{B@lEb}{{}Ib}{{}ANf}{{}Eb}{{}AEb}{{{f{{ANb{ce}}}}}{{f{g}}}CdCd{}}{Fn{{f{c}}}{}}0000000000000000000000000000000000000{Fn{{f{Blc}}}{}}{{{f{Bl{ANb{ce}}}}}{{f{Blg}}}CdCd{}}1111111111111111111111111111111111111{{{f{Jh}}{f{Jh}}}c{}}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALd}}}{}}000000{Fnb}0000000000000000000000000000000000000{{{f{AN`}}}{{f{Eb}}}}{{{f{Jh}}}{{f{Eb}}}}{{{f{Ib}}}Eb}{{{f{Mn}}}{{f{Eb}}}}``{{{f{Ib}}{f{Ib}}}d}{{{f{ANf}}{f{ANf}}}d}{{{f{Eb}}{f{AEb}}}d}{{{f{Eb}}{f{Eb}}}d}{{{f{ANh}}{f{ANh}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{ANj}}{f{ANj}}}d}{{{f{B@b}}{f{B@b}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{AEb}}{f{AEb}}}d}{{{f{B@f}}{f{B@f}}}d}{{{f{Ib}}{f{Ib}}d}d}{{{f{Ed}}{f{Ed}}}Gl}{{{f{Ef}}{f{Ef}}}Gl}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{E`}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Fb}}{f{{Dl{Dj}}}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}6543210{{f{f{c}}}d{}}0000000000000000000{{{f{Ed}}}{{Ah{{Hl{Af{AGn{Mh}}}}}}}}{{{f{Ef}}}{{Ah{{Hl{Af{AGn{Mh}}}}}}}}{{{f{{ANb{ce}}}}}MnCdCd}{{{f{Gl}}d}{{Ah{Gl}}}}{{{f{Fb}}{f{{Dl{Dj}}}}}{{Ah{Fb}}}}{{{f{Dd}}{f{Gl}}}{{Ah{{l{Dn}}}}}}{{{f{Fb}}{f{Gl}}}{{Ah{{l{Dh}}}}}}{{{f{{AF`{c}}}}{f{Gl}}}{{Ah{{l{{Ih{c}}}}}}}Il}{{AMn{f{B@n}}{f{B@n}}}{{Ah{B@n}}}}{{{f{Ed}}{f{BlH`}}}Hb}{{{f{Ef}}{f{BlH`}}}Hb}{{{f{Dd}}{f{BlH`}}}Hb}{{{f{Fb}}{f{BlH`}}}Hb}{{{f{{AF`{c}}}}{f{BlH`}}}HbIl}{{{f{ANd}}{f{BlH`}}}Hb}{{{f{Ib}}{f{BlH`}}}Hb}0{{{f{ANf}}{f{BlH`}}}Hb}{{{f{Eb}}{f{BlH`}}}Hb}0{{{f{ANh}}{f{BlH`}}}Hb}{{{f{Mn}}{f{BlH`}}}Hb}{{{f{ANj}}{f{BlH`}}}Hb}0{{{f{B@b}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{B@d}}{f{BlH`}}}{{Of{bBA`}}}}0{{{f{AEb}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{B@f}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{Ed}}c}b{{Cn{{B`{Cl}}}}}}{{{f{Ef}}c}b{{Cn{{B`{Cl}}}}}}{cc{}}0000000{{{f{{Dl{Dj}}}}}Ib}1{{{f{E`}}}Ib}{{{B`{c}}}Ib{{BAb{Ib}}}}{dIb}{cIbBAd}5{IbEb}6{{{f{Ib}}}Eb}{{{f{AEb}}}Eb}88{{{f{Ib}}}Mn}{{{f{BAf}}}Mn}:{{{f{B@f}}}ANj};;;;;;;;;;;;;;;;;;;;;;{BAhAEb}<{BAjAEb}={{{f{AEb}}d}Eb}{cEf{{Hh{}{{Bb{{B`{{Fh{Hd}}}}}}}}}}{cEf{{Hh{}{{Bb{{B`{Af}}}}}}}}{cEf{{Hh{}{{Bb{{B`{En}}}}}}}}{eEf{{BAl{Af}}}{{Hh{}{{Bb{c}}}}}}{cGl{{Hh{}{{Bb{d}}}}}}{eDd{{Kl{E`}}}{{Hh{}{{Bb{{B`{c}}}}}}}}{eDd{{`{E`}}}{{Hh{}{{Bb{c}}}}}}{eFb{{`{{Dl{Dj}}}}}{{Hh{}{{Bb{c}}}}}}{eFb{{Kl{{Dl{Dj}}}}}{{Hh{}{{Bb{{B`{c}}}}}}}}{e{{AF`{c}}}Il{{Hh{}{{Bb{{B`{c}}}}}}}}{{Bjc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bje}Dd{{Kl{E`}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bje}Fb{{Kl{{Dl{Dj}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bje}{{AF`{c}}}Il{{Bf{}{{Bb{{B`{c}}}}}}}}:<97856{eAKh{{`{{Dl{Dj}}}}}{{Hh{}{{Bb{c}}}}}}{eAKh{{Kl{{Dl{Dj}}}}}{{Hh{}{{Bb{{B`{c}}}}}}}}6{{Bjc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bje}Dd{{Kl{E`}}}{{Bf{}{{Bb{c}}}}}}{{Bje}Fb{{Kl{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{{Bje}{{AF`{c}}}Il{{Bf{}{{Bb{c}}}}}}{cEf{{Hn{}{{Bb{{B`{Af}}}}}}}}{cGl{{Hn{}{{Bb{{B`{d}}}}}}}}{cGl{{Hn{}{{Bb{d}}}}}}{eDd{{`{E`}}JjJlBAn}{{Hn{}{{Bb{c}}}}}}{eDd{{Kl{E`}}JjJl}{{Hn{}{{Bb{{B`{c}}}}}}}}{eFb{{`{{Dl{Dj}}}}JjJlBAn}{{Hn{}{{Bb{c}}}}}}{eFb{{Kl{{Dl{Dj}}}}JjJl}{{Hn{}{{Bb{{B`{c}}}}}}}}{{cBjEb}Ef{{Hn{}{{Bb{{B`{Af}}}}}}}}{{Bj{f{{Dl{d}}}}}Gl}{{Bj{f{{Dl{c}}}}}Dd{{Kl{E`}}}}{{Bj{f{{Dl{c}}}}}Fb{{Kl{{Dl{Dj}}}}}}{{Bj{f{{Dl{c}}}}}{{AF`{c}}}Il}{{Bj{f{{Dl{{B`{d}}}}}}}Gl}{{Bj{f{{Dl{{B`{c}}}}}}}Dd{{Kl{E`}}}}{{Bj{f{{Dl{{B`{c}}}}}}}Fb{{Kl{{Dl{Dj}}}}}}{{Bj{f{{Dl{{B`{c}}}}}}}{{AF`{c}}}Il}{cGl{{I`{}{{Bb{{B`{d}}}}}}}}{{{Gd{c}}AEb}{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{Gd{c}}AEb}{{AJj{}{{AMb{e}}{AMd{c}}{AMf{g}}}}}{AMh{AMj{e}}}AAb{{Gj{}{{Bb{e}}}}I`JjJl}}{{FncAEb}{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{Bj{f{Af}}Fn}Ed}{{Bj{f{Af}}Fn}Ef}{{BjdFn}Gl}{{Bj{f{E`}}Fn}Dd}{{Bj{f{{Dl{Dj}}}}Fn}Fb}{{Bj{f{{Dl{Dj}}}}Fn}AKh}{{BjcFn}{{AF`{c}}}Il}{{FnAEb}{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{BjFn}Ed}{{BjFn}Ef}{{BjFn}Gl}{{BjFn}Dd}{{BjFn}Fb}{{BjFn}AKh}{{BjFn}{{AF`{c}}}Il}{{BjFn{f{Eb}}Fn}Ed}{{BjFn{f{Eb}}}Ef}{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}Fn}{{B`{c}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{B@bJ`}{B@d{{B`{J`}}}}{{{f{Jh}}Fn}{{Ah{Ib}}}}{{{f{AN`}}Fn}{{Ah{Ib}}}}0{{{f{Ed}}Fn}{{Ah{Ib}}}}{{{f{Ef}}Fn}{{Ah{Ib}}}}{{{f{Gl}}Fn}{{Ah{Ib}}}}{{{f{Dd}}Fn}{{Ah{Ib}}}}{{{f{Fb}}Fn}{{Ah{Ib}}}}{{{f{AKh}}Fn}{{Ah{Ib}}}}{{{f{{AF`{c}}}}Fn}{{Ah{Ib}}}Il}{{{f{Jh}}Fn}Ib}{{{f{AN`}}Fn}Ib}0{{{f{Ed}}Fn}Ib}{{{f{Ef}}Fn}Ib}{{{f{Gl}}Fn}Ib}{{{f{Dd}}Fn}Ib}{{{f{Fb}}Fn}Ib}{{{f{AKh}}Fn}Ib}{{{f{{AF`{c}}}}Fn}IbIl}{{{f{Ed}}Fn}{{B`{Af}}}}{{{f{Ef}}Fn}{{B`{Af}}}}{{}Eb}000000000000000000000000{{{f{Ed}}}Af}{{{f{Ef}}}Af}1{{{f{{AF`{c}}}}Fn}{{B`{{f{Ij}}}}}Il}0{{B@dJ`}J`}{{B@dc}J`{{Ch{}{{Cf{J`}}}}}}{{{f{Eb}}}{{B`{{Gd{Fn}}}}}}{{{f{Ib}}}{{B`{{f{E`}}}}}}{{{f{BB`}}Fn}Ib}{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}Fn}{{B`{c}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Ed}}}Fn}{{{f{Ef}}}Fn}{{{f{Dd}}}Fn}{{{f{AKh}}}Fn}{{{f{Ed}}dd}{{Ah{Al}}}}{{{f{Ef}}dd}{{Ah{Al}}}}{{{f{Gl}}dd}{{Ah{Al}}}}{{{f{Dd}}dd}{{Ah{Al}}}}{{{f{Fb}}dd}{{Ah{Al}}}}{{{f{AKh}}dd}{{Ah{Al}}}}{{{f{{AF`{c}}}}dd}{{Ah{Al}}}Il}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{E`}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}{{{f{Fb}}{f{{Dl{Dj}}}}}Gl}43210{{{f{Ib}}{f{Blc}}}bABj}{{{f{ANf}}{f{Blc}}}bABj}{{{f{Eb}}{f{Blc}}}bABj}{{{f{Mn}}{f{Blc}}}bABj}{{{f{ANj}}{f{Blc}}}bABj}{{{f{B@d}}{f{Blc}}}bABj}{{{f{AEb}}{f{Blc}}}bABj}{{{f{B@f}}{f{Blc}}}bABj}{{{f{Ib}}{f{Blc}}d}bABj}{{{f{Ib}}}Id}{EbEb}{{}Fn}0000000000000000000000000000000000000{{{f{Ed}}}{{f{Eb}}}}{{{f{Ef}}}{{f{Eb}}}}{{{f{Eb}}}{{B`{{f{Eb}}}}}}{{{f{AEb}}}{{B`{{f{AEb}}}}}}{{}c{}}0000000000000000000000000000000000000{{}En}{{BBb{B`{Fn}}Fn}{{Ah{Jh}}}}{{BBb{B`{Fn}}Fn}Jh}{{{f{Ed}}}c{}}{{{f{Ef}}}c{}}{{{f{Gl}}}c{}}{{{f{Dd}}}c{}}{{{f{Fb}}}c{}}{{{f{AKh}}}c{}}{{{f{{AF`{c}}}}}eIl{}}{{BBdEb}{{Ah{Lb}}}}{JhAf}{BBbAf}{IbIb}{{{f{Eb}}}d}00{{{f{Ib}}}d}1111010111101{{{f{AEb}}}d}1212120222122222120{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}}{{AEl{cgAEj}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}}{{B`{c}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Eb}}}{{f{Eb}}}}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{E`}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Fb}}{f{{Dl{Dj}}}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}42310{{{f{AMl}}{f{AMl}}}{{Ah{{Hl{AMlAMl}}}}}}{{EfEf}{{Ah{{Hl{EfEf}}}}}}{{{f{Eb}}{f{Eb}}}{{Ah{d}}}}{{{f{ANf}}}{{B`{Eb}}}}{{{f{Eb}}}{{Ah{Eb}}}}{{{f{Gl}}}{{B`{d}}}}{{{f{Eb}}}{{Ah{Lb}}}}{{{f{Fb}}}{{B`{{f{{Dl{Dj}}}}}}}}{{{f{Gl}}}Lb}{{{f{Dd}}}Lb}{{{f{Fb}}}Lb}{{{f{Gl}}}{{B`{n}}}}{{{f{ALh}}}{{B`{In}}}}{{{f{ALj}}}{{B`{n}}}}{{{f{ALh}}}Lb}{{{f{ALj}}}Lb}{{{f{Eb}}{f{Eb}}}{{Ah{Eb}}}};:9876{{Bj{f{{Dl{Dj}}}}FnFn}Gl}{{{f{Jh}}{f{Jh}}}c{}}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALd}}}{}}000000{{{f{Dd}}}{{Ah{Fn}}}}{{{f{Fb}}}{{Ah{Fn}}}}{{{f{Mn}}}{{f{Bj}}}}`{{}c{}}00{{Bjc}Dd{{Kl{{Dl{{ALf{E`}}}}}}}}{{Bjc}Dd{{Kl{{Dl{{f{E`}}}}}}}}{{Bjc}Dd{{Kl{{Dl{{B`{{f{E`}}}}}}}}}}{{Bjc}Dd{{Kl{{Dl{{B`{{ALf{E`}}}}}}}}}}{{Bjc}Fb{{Kl{{Dl{{B`{{ALf{{Dl{Dj}}}}}}}}}}}}{{Bjc}Fb{{Kl{{Dl{{ALf{{Dl{Dj}}}}}}}}}}{{Bjc}Fb{{Kl{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bjc}Fb{{Kl{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bje}{{AF`{c}}}Il{{Kl{{Dl{{B`{c}}}}}}}}{{Bj{f{{Dl{c}}}}}{{AF`{c}}}Il}{{BjEb}Mn}{J`B@b}{MhB@d}{J`B@d}{Bj{{AF`{c}}}Il}{{{f{Ed}}FnFn}Ed}{{{f{Ef}}FnFn}Ef}{{{f{Gl}}FnFn}Gl}{{{f{Dd}}FnFn}Dd}{{{f{Fb}}FnFn}Fb}{{{f{AKh}}FnFn}AKh}{{{f{{AF`{c}}}}FnFn}{{AF`{c}}}Il}{{Bj{Gd{c}}}{{AF`{c}}}Il}{{Bj{Gd{c}}Hj}{{AF`{c}}}Il}{{{l{c}}}{{ANb{ec}}}CdCd}{{}ANh}{Glc{}}{{{f{Gl}}}c{}}{{{f{Ed}}{f{Ed}}}Gl}{{{f{Ef}}{f{Ef}}}Gl}{{{f{Gl}}{f{Gl}}}Gl}{{{f{Dd}}{f{Dd}}}Gl}{{{f{Dd}}{f{E`}}}Gl}{{{f{Fb}}{f{Fb}}}Gl}{{{f{Fb}}{f{{Dl{Dj}}}}}Gl}{{{f{Ed}}{f{Ed}}}c{}}654312{{{f{Gl}}}Fn}0{{{f{Ed}}}{{Ah{{AGn{Mh}}}}}}{{{f{Ef}}}{{Ah{{AGn{Mh}}}}}}={{{f{Ef}}}{{`{{N`{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Dd}}}{{`{{N`{}{{Bb{{B`{{f{E`}}}}}}}}}}}}{{{f{BlEf}}}{{`{{Nb{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Dd}}}{{`{{Nb{}{{Bb{{B`{{f{E`}}}}}}}}}}}}{{{f{Ib}}{f{Ib}}}{{B`{B@h}}}}{{{f{ANj}}{f{ANj}}}{{B`{B@h}}}}{{{f{B@b}}{f{B@b}}}{{B`{B@h}}}}{{{f{{ANb{ce}}}}}{{f{{l{e}}}}}CdCd}{{{f{Jh}}}{{B`{Fn}}}}{{{f{{ANb{AOjJf}}}}}{{B`{Fn}}}}{{{f{ALh}}nNd}{{Ah{{B`{In}}}}}}{{{f{ALj}}nNd}{{Ah{{B`{n}}}}}}{{{f{ALh}}nNd}{{Ah{Lb}}}}{{{f{ALj}}nNd}{{Ah{Lb}}}}{{BjFnn}{{Ah{Gl}}}}{{{f{Ef}}}Ef}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALd}}}{}}000000{{{f{Ed}}}Ed}4{{{f{Gl}}}Gl}{{{f{Dd}}}Dd}{{{f{Fb}}}Fb}{{{f{AKh}}}AKh}{{{f{{AF`{c}}}}}{{AF`{c}}}Il}`{{{f{Jh}}}Fn}{{{f{{ANb{AOjJf}}}}}Fn}{{{f{Gl}}c{B`{d}}}{{Ah{Gl}}}{{Hh{}{{Bb{Id}}}}}}{{{f{Dd}}c{B`{{f{E`}}}}}{{Ah{Dd}}}{{Hh{}{{Bb{Id}}}}}}{{{f{Fb}}c{B`{{f{{Dl{Dj}}}}}}}{{Ah{Fb}}}{{Hh{}{{Bb{Id}}}}}}{{{f{Gl}}ce}{{Ah{Gl}}}{{Hh{}{{Bb{Id}}}}}{{Ch{{B`{d}}}{{Cf{{B`{d}}}}}}}}{{{f{Dd}}ce}{{Ah{Dd}}}{{Hh{}{{Bb{Id}}}}}{{Ch{{B`{{f{E`}}}}}{{Cf{{B`{Df}}}}}}}}{{{f{Fb}}ce}{{Ah{Fb}}}{{Hh{}{{Bb{Id}}}}}{{Ch{{B`{{f{{Dl{Dj}}}}}}}{{Cf{{B`{{Gd{Dj}}}}}}}}}}{{{f{Gl}}{f{Gl}}{B`{d}}}{{Ah{Gl}}}}{{{f{Dd}}{f{Gl}}{B`{{f{E`}}}}}{{Ah{Dd}}}}{{{f{Fb}}{f{Gl}}{B`{{f{{Dl{Dj}}}}}}}{{Ah{Fb}}}}{{{f{BlEf}}}b}{{{f{BlEf}}Eb}b}{{{f{BlMn}}Bj}b}{{{f{Ed}}Mh}Ed}{{{f{Ef}}Mh}Ef}{{{f{Gl}}Mh}Gl}{{{f{Dd}}Mh}Dd}{{{f{Fb}}Mh}Fb}{{{f{AKh}}Mh}AKh}{{{f{{AF`{c}}}}Mh}{{AF`{c}}}Il}{{{f{Ed}}Mh{B`{{f{Af}}}}}Ed}{{{f{Ef}}Mh{B`{{f{Af}}}}}Ef}{{{f{Gl}}Mh{B`{d}}}Gl}{{{f{Dd}}Mh{B`{{f{E`}}}}}Dd}{{{f{Fb}}Mh{B`{{f{{Dl{Dj}}}}}}}Fb}{{{f{AKh}}Mh{B`{{f{{Dl{Dj}}}}}}}AKh}{{{f{{AF`{c}}}}Mh{B`{{Ih{c}}}}}{{l{{Ih{c}}}}}Il}{{{f{Gl}}d}Gl}{{{f{Dd}}d}Dd}{{{f{Fb}}d}{{l{Dh}}}}{{{f{AKh}}d}AKh}{{{f{Gl}}Ej}{{l{An}}}}{{{f{Dd}}Ej}{{l{Dn}}}}{{{f{Fb}}Ej}{{l{Dh}}}}{{{f{AKh}}Ej}AKh}{{{f{ALh}}Dj}Lb}{{{f{ALj}}Dj}Lb}{{{f{Ib}}}{{ALf{E`}}}}{{{f{Ib}}{f{Eb}}}{{B`{Ib}}}}`{{{f{Jh}}{f{Jh}}}c{}}{{{f{Ef}}{f{Af}}}{{Ah{Af}}}}{{{f{Ed}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Of{AfALd}}}{}}000000{{{f{Gl}}}{{B`{Id}}}}{{{f{Gl}}}Lb}{{{f{Fb}}}Lb}{{{f{Ed}}{f{El}}}Ed}{{{f{Ed}}{f{c}}}Ed{{Kl{{Dl{Id}}}}Nh}}{{{f{Ef}}{f{El}}}Ef}{{{f{Ef}}{f{c}}}Ef{{Kl{{Dl{Id}}}}Nh}}{{{f{Dd}}{f{c}}}Dd{{Kl{{Dl{Id}}}}Nh}}{{{f{Dd}}{f{El}}}Dd}{{{f{Fb}}{f{El}}}Fb}{{{f{Fb}}{f{c}}}Fb{{Kl{{Dl{Id}}}}Nh}}{{{f{Eb}}ANh}AEb}{{{f{Mn}}ANh}BAf}{ANjB@f}{{{f{Eb}}BjANh}BAf}{ANj{{f{E`}}}}{{{f{Dd}}Fn}{{Ah{Af}}}}{{AEbFnd}AEb}{{{f{BlEd}}Eb}b}{{{f{BlEf}}Eb}b}{{{f{AEb}}}{{f{AEb}}}}{{{f{Ef}}}{{Ah{O`}}}}{fc{}}0000000000000000000000000000000{{{f{Eb}}}Eb}{{{f{AEb}}}BBf}{{{f{Jh}}Fn}{{Ah{{ALf{Jh}}}}}}{{{f{{ANb{AOjJf}}}}Fn}{{Ah{{ALf{{ANb{AOjJf}}}}}}}}{fDf}000{{{f{Fb}}}Dd}{{{f{Ib}}{f{Ib}}}d}{{{f{Ef}}c}{{Ah{Ef}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{Ed}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{Ef}}e}{{Ah{{l{g}}}}}{}{{Cn{{B`{Cl}}}{{Cf{{Ah{{B`{c}}}}}}}}Cj}Cd}{{{f{Ed}}c}{{Ah{Ed}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{{{f{Ed}}c}{{Ah{Ef}}}{{Cn{Cl}{{Cf{{Ah{Af}}}}}}}}{g{{Of{ALle}}}{}{}{{Hh{}{{Bb{{Of{ce}}}}}}}}0{{AEbg}{{Of{ALne}}}{}{}{{Hh{}{{Bb{{Of{ce}}}}}}}}0{B@j{{Of{eg}}}{}{{ALl{c}}AJj}{}}0{{B@jAEb}{{Of{eg}}}{}{{ALn{c}}AJj}{}}0{{{f{Ib}}}{{Ah{c}}}L`}{c{{Of{e}}}{}{}}0000000000000000000000000000000000{Mh{{Of{B@b}}}}111{{}{{Of{c}}}{}}0000000000000000000000000000000000000{{{f{Ib}}{f{Eb}}}{{Ah{Ib}}}}{{{f{Eb}}ANh}{{Ah{AEb}}}}{f{{Of{GfBBh}}}}000{{{f{Ef}}{f{{l{c}}}}e}{{Ah{Ef}}}Cd{{Cn{{B`{Cl}}B`}{{Cf{{Ah{{B`{Af}}}}}}}}}}{fOh}0000000000000000000000000000000000000{{{f{AEb}}}AEb}{{{f{Gl}}}{{Ah{Gl}}}}{{{f{Dd}}}{{Ah{Dd}}}}{{{f{Fb}}}{{Ah{Fb}}}}{{{f{{AF`{c}}}}}{{Ah{{l{{Ih{c}}}}}}}Il}{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}Fn}cAAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}0{{{f{Eb}}Ib}d}{{{f{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}}}gAAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{ALh}}Dj}Lb}{{{f{ALj}}Dj}Lb}{{{f{Gl}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBj}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBl}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{B@n}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBn}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BC`}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BCb}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BCd}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BCf}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{BBb}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{ALh}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{ALj}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{Dd}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{Fb}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{AKh}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{{AF`{c}}}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}Il}{{{f{Gl}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BBj}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BBl}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{B@n}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BBn}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BC`}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BCb}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BCd}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BCf}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{BBb}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{ALh}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{ALj}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{Dd}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{Fb}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{AKh}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{{f{{AF`{c}}}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}Il}{{}c{}}0000000000000000000000000000000000000{{{f{Ed}}}Fn}{Fnc{}}0{Fn{{BCh{ce}}}{}{}}{{{f{{Dl{Oj}}}}e}c{}{{Ol{{f{El}}}{{Cf{c}}}}}}{{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}{B`{Hj}}}{{AJj{}{{AMb{c}}{AMd{e}}{AMf{g}}}}}AAb{AMh{AMj{c}}}{{Gj{}{{Bb{c}}}}I`JjJl}}{{{f{Eb}}}Ib}{{{f{Ef}}{f{{l{c}}}}e}EfCd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}{{{f{Ed}}{f{{l{c}}}}e}EdCd{{Cn{{B`{Cl}}B`}{{Cf{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AMl}}}d}{{AMld}AMl}{{{f{BlBCj}}{B`{{f{E`}}}}}b}{{{f{BlAMl}}{f{AMl}}}{{Ah{b}}}}{{{f{BlBCj}}}b}{{{f{BlBCj}}{f{E`}}}b}{{{f{AMl}}Ej}El}{f{{f{c}}}{}}000{{{f{Bl}}}{{f{Blc}}}{}}000{{{f{AMl}}{f{AMl}}c}{{Ah{AMl}}}AMn}{{{f{AMl}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{AMl}}}AMl}{{f{f{Blc}}}b{}}{fb}{{}BCl}{Fn{{f{c}}}{}}000{Fn{{f{Blc}}}{}}000{{BCjc}AMl{{Hh{}{{Bb{{B`{{f{E`}}}}}}}}}}{Fnb}000{{{f{AMl}}}{{f{Eb}}}}{{{f{AMl}}{f{Dd}}}c{}}{{{f{AMl}}{f{E`}}}c{}}{{{f{AMl}}{f{AMl}}}c{}}102{{AMn{f{B@n}}{f{B@n}}}{{Ah{B@n}}}}{BCjAMl}{BCl{{Lh{BCn}}}}{cc{}}000{{B@nEb}AMl}{{B@n{Lh{BCn}}dBD`}AMl}{{B@nBD`}AMl}{{{f{Dd}}{f{B@l}}BD`}{{Ah{AMl}}}}{{BjdFnBD`}AMl}{{{f{AMl}}Fn}{{Ah{Ib}}}}{{{f{AMl}}Fn}Ib}{{{f{AMl}}}{{f{{Lh{BCn}}}}}}<=>><={{}Fn}000{{}c{}}000{{}En}1{AMlAf}{{{f{AMl}}}d}0{{{f{AMl}}}BDb}{{{f{AMl}}}Fn}{{{f{AMl}}{f{AMl}}}c{}}{{{f{AMl}}{f{Dd}}}c{}}{{{f{AMl}}{f{E`}}}c{}}021{{{f{AMl}}{f{AMl}}}{{Ah{{Hl{AMlAMl}}}}}}{{EfEf}{{Ah{{Hl{EfEf}}}}}}{{{f{AMl}}}Lb}{{{f{BlBCl}}{f{{Lh{BCn}}}}}{{Ah{b}}}}1{{{f{AMl}}}{{Ah{Fn}}}}{{{f{AMl}}}{{f{Bj}}}}{{BjFnBD`}BCj}{{{Lh{BCn}}}BCl}{{{f{BlBDb}}}{{B`{c}}}{}};:9:;9<{{{f{AMl}}}{{f{B@n}}}}{{{f{BlBCj}}{f{E`}}}{{Hl{M`d}}}}`{{{f{BDb}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{AMl}}d}AMl}{{{f{AMl}}Ej}AMl}`{{{f{AMl}}ANhd}Gb}{{{f{AMl}}{f{B@l}}BDd}AMl}{{{f{AMl}}}{{Ah{AMl}}}}{{{f{AMl}}}AMl}{fc{}}{c{{Of{e}}}{}{}}000{{}{{Of{c}}}{}}000{fOh}0005{{{f{AMl}}}d}{{{f{AMl}}}{{Ah{BDf}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{B@lBCn}{{{f{BD`}}}BD`}{{{f{BCn}}}BCn}{{f{f{Blc}}}b{}}0{fb}0{{}BD`}{{}BCn}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0{Fnb}0{{{f{BD`}}{f{BD`}}}d}{{{f{BCn}}{f{E`}}}{{B`{M`}}}}{{{f{BD`}}{f{BlH`}}}Hb}{{{f{BCn}}{f{BlH`}}}Hb}{cc{}}0{{{f{BCn}}M`}{{f{E`}}}}{{{f{BCn}}}{{f{B@l}}}}{{{f{BCn}}M`}{{B`{{f{E`}}}}}}{{}Fn}0{{}c{}}0{{{f{BCn}}}d}0{{{f{BCn}}}Fn}{{{f{BCn}}{f{BCn}}}d}{fc{}}0{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{fOh}077`{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{}BDh}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{{}b}{{{f{BlBDh}}}b}{Fnb}2{cc{}}6{{}Fn}{{}c{}}=<;{{}d}1`{{{f{BlBDj}}M`{f{BCn}}}{{Ah{{f{BlBDj}}}}}}{{{f{BlBDj}}}{{f{BlBDj}}}}{{{f{BlBDj}}{f{E`}}}{{Ah{{f{BlBDj}}}}}}>=;:7{BDjAMl}765{{BjFn{Lh{BCn}}BD`d}BDj}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}9```````>>8````````````````````````{{{f{BDl}}}{{f{E`}}}}{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0`{Fn{{f{c}}}{}}0{{{f{BDl}}}f}{Fn{{f{Blc}}}{}}0{Fnb}0`{{{f{BDn}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{BDl}}{f{BlH`}}}{{Of{bBA`}}}}0{cc{}}0{cBDl{{BAb{{ALf{E`}}}}}}{{}{{Kh{{f{E`}}BDn}{{Cf{b}}}}}}{{}Fn}0{{}c{}}0{cALdAJn}{{{f{E`}}}BDl}````{{{Kh{{f{E`}}BDn}{{Cf{b}}}}}b}{cALdBE`}{fDf}{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{f{{Of{GfBBh}}}}{fOh}099`````````````````{{fh}b}{{{f{{AKf{Mh}}}}AEb}{{Of{{AKf{Md}}ALd}}}}{{{f{{AKf{c}}}}}{{BEb{{Dl{Dj}}}}}BEd}{{{f{{AKf{c}}}}}{{Of{{BEf{e}}ALd}}}BEdBEh}{{{f{{AKf{Md}}}}AEb}{{AKf{Mh}}}}{{{f{{AKf{c}}}}AEb}{{BEj{c}}}BEd}{{{f{{AKf{c}}}}AEb}{{Of{{BEl{c}}ALd}}}BEd}{{{f{{BEb{{Dl{Dj}}}}}}{B`{Fn}}Fn}{{AKb{Mj}}}}{{{f{ACf}}}{{BEb{{Dl{Dj}}}}}}{{{f{ACf}}}{{AKb{c}}}{BEnBF`}}{{{f{ACf}}}{{BEb{E`}}}}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Hd}}{f{AEb}}BFb}{{Of{{Fh{Hd}}ALd}}}}{{{f{Hd}}{f{AEb}}}{{Of{{Fh{Hd}}ALd}}}}0{{{f{BFb}}}BFb}{{f{f{Blc}}}b{}}{fb}{{{f{{AKb{Md}}}}}{{AKb{Mh}}}}{{{f{{AKb{Mh}}}}}{{AKb{Md}}}}{{{f{{AKb{Mj}}}}FnFn}{{AKb{Mj}}}}{{{f{{AKb{Mj}}}}}{{AKb{c}}}{BEnBFd}}{{{f{{AKb{Mj}}}}}{{AKb{c}}}{BEnL`}}{{}BFb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{{AKb{BFf}}}}}{{AKb{In}}}}{{{f{BFh}}AEb}{{AKf{c}}}BEd}{{{f{BFh}}}{{BEb{{Dl{Dj}}}}}}{{{f{{AKb{c}}}}FnFn}{{AKb{Mj}}}{BEnBFdAd}}{{{f{BFb}}{f{BlH`}}}{{Of{bBA`}}}}{FjBFb}{cc{}}{{}Fn}{{{f{{AKb{Md}}}}}{{AKb{Md}}}}0{{{f{{AKb{Mh}}}}}{{AKb{Mh}}}}0{{{f{{AKb{c}}}}FnFn}{{AKb{Mj}}}{BEn{BFj{Mj}}}}{{}c{}}`{{{f{{AKb{e}}}}{f{AEb}}}{{AKb{c}}}BEn{BEn{BFj{c}}}}{{{f{{AKb{c}}}}eAEb}{{AKb{c}}}BEn{{Ch{c}{{Cf{d}}}}}}{{{f{{AKb{c}}}}AEb}ACfBEn}{{{f{{AKb{c}}}}}{{Of{{BEf{e}}ALd}}}{BEnBFlBFn}BEh}{{{f{{AKb{c}}}}{f{AEb}}}{{AKb{e}}}{BEnL`}{BEnL`}}{{{f{{AKb{c}}}}{f{AEb}}}{{AKb{c}}}BEn}`{{{f{{AKb{Md}}}}B@fB@f}{{AKb{Mh}}}}::{{{f{{AKb{Mh}}}}B@fB@f}{{AKb{Md}}}}::{{{f{{AKb{Mh}}}}B@f}{{AKb{Md}}}}{{{f{{AKb{Mh}}}}B@f}{{AKb{Mh}}}}{{{f{{AKb{Mh}}}}B@fB@f{f{{B`{Bj}}}}}{{AKb{Mh}}}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{}BFb}{{{f{{BEl{Mh}}}}}{{Of{{BEl{Md}}ALd}}}}{{{f{{BEl{c}}}}AEb}{{AKf{c}}}BEd}{{{f{{BEl{c}}}}}{{Of{{BEf{e}}ALd}}}BEdBEh}{{{f{{BEl{Md}}}}}{{BEl{Mh}}}}{{{f{{BEl{c}}}}}{{BEb{E`}}}BEd}{{{f{{BEb{E`}}}}}{{BEl{c}}}BEd}{{}c{}}`{{{f{Bl{Gd{Dj}}}}BG`}Fn}````````{B@fMh}{{{f{E`}}{f{E`}}{f{B@f}}}{{B`{Mh}}}}{{{f{E`}}{f{E`}}{f{c}}{f{B@f}}}{{B`{Mh}}}BGb}```{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{BGd}}}BGd}{{f{f{Blc}}}b{}}{fb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{cc{}}{{}BGf}{{}BGd}{{}{{B`{Fn}}}}{{}Df}{{}d}{{}Fn}{{}c{}}{{{B`{BGf}}}b}{BGdb}{{{B`{Fn}}}b}2{{{B`{d}}}b}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}8```````````{{fh}b}00{{{f{BlBDf}}{Gd{En}}{f{BGh}}}{{Ah{b}}}}{{{f{BlBDf}}{Gd{Af}}{f{BGh}}}{{Ah{b}}}}{{{f{BDf}}{f{Ch}}}{{Gd{En}}}}0{{{f{BDf}}{f{Gl}}}{{Ah{BDf}}}}{{Fn{Gd{En}}}BDf}{{{f{BDf}}{f{{Dl{Bj}}}}}{{Ah{BDf}}}}0{{{f{BDf}}{f{{Dl{Bj}}}}{f{BGh}}d}{{Ah{BDf}}}}{{{f{BDf}}MhFn}BDf}{{{f{BDf}}}BDf}{{{f{BDf}}{f{BDf}}}c{}}{{BDf{f{Af}}}c{}}{{{f{BDf}}{f{Af}}}c{}}{{{f{BlBDf}}}{{f{BlBDf}}}}0{{{f{BlBDf}}{BGl{BGj}}}{{Ah{b}}}}{{{f{BlBDf}}{f{E`}}e}{{Ah{{f{BlBDf}}}}}BGn{{Ol{{f{En}}}{{Cf{c}}}}}}{{{f{BlBDf}}Fne}{{Ah{{f{BlBDf}}}}}BGn{{Ol{{f{En}}}{{Cf{c}}}}}}33{f{{f{c}}}{}}0000{{{f{Bl}}}{{f{Blc}}}{}}0000{{{f{BDf}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}:{{{f{BlBDf}}}b}{{{f{BH`}}}BH`}{{{f{BHb}}}BHb}={{f{f{Blc}}}b{}}00{fb}00`{{{f{BDf}}{f{E`}}}{{Ah{{f{En}}}}}}{{{f{BlBDf}}c}b{{Bf{}{{Bb{En}}}}}}{{{f{BDf}}e}{{Ah{{Gd{{f{En}}}}}}}{{Kl{E`}}}{{Hh{}{{Bb{c}}}}}}{{}BHb}{{}BDf}{Fn{{f{c}}}{}}0000{Fn{{f{Blc}}}{}}0000{{BDf{f{Af}}}c{}}{{{f{BDf}}{f{Af}}}c{}}{{{f{BDf}}{f{BDf}}}c{}}{Fnb}0000{{{f{BDf}}{f{E`}}}{{Ah{BDf}}}}{{{f{BlBDf}}{f{E`}}}{{Ah{En}}}}{{{f{BDf}}e}BDf{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDf}}{f{{BHd{Bj}}}}}BDf}{{{f{BDf}}{B`{{f{{Dl{c}}}}}}}{{Ah{BDf}}}{}}{{{f{BDf}}}{{Gd{Eb}}}}<{{{f{BHf}}}BDf}{{{f{BGh}}}BDf}{{{f{BHb}}{f{BHb}}}d}{{{f{BDf}}{f{BDf}}}d}00{{f{f{c}}}d{}}0{{{f{BDf}}}Fn}`{{{f{BDf}}e}{{Ah{BDf}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDf}}{Gd{En}}}{{Ah{BDf}}}}{{{f{BlBDf}}{f{BDf}}}{{Ah{b}}}}{{{f{BDf}}}{{Gd{Mn}}}}{{{f{BDf}}AGh}{{Ah{BDf}}}}{{{f{BDf}}{f{Gl}}}{{Ah{BDf}}}}6{{{f{BH`}}{f{BlH`}}}Hb}{{{f{BHb}}{f{BlH`}}}Hb}{{{f{BDf}}{f{BlH`}}}Hb}0{cc{}}0000{cBDf{{Hh{}{{Bb{En}}}}}}{cBDf{{Hh{}{{Bb{Af}}}}}}{{{f{{Dl{BHh}}}}}{{Ah{BDf}}}}{{{f{{Dl{BHh}}}}{f{BGh}}}{{Ah{BDf}}}}{{c{f{BGh}}}{{Ah{BDf}}}{{Bf{}{{Bb{{f{BHh}}}}}}}}{{{f{BDf}}Fn}{{B`{{Gd{Ib}}}}}}{{{f{BDf}}{f{E`}}}{{B`{Fn}}}}{{{f{BDf}}}{{Gd{{f{Bj}}}}}}{{{f{BDf}}}{{Gd{Bj}}}}{{{f{BDf}}}{{Gd{{f{E`}}}}}}{{{f{BDf}}}{{f{{Dl{En}}}}}}{{{f{BlBDf}}}{{f{Bl{Gd{En}}}}}}{{{f{BDf}}Fn}{{Ah{BHh}}}}{{{f{BDf}}Fn{f{BlBHh}}}{{Ah{b}}}}{{{f{BDf}}Fn{f{BlBHh}}}b}{{{f{BDf}}}{{B`{{Ah{Eb}}}}}}`{{{f{BDf}}e}{{Ah{BHj}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}0{{{f{BDf}}{Gd{En}}dd}{{Ah{BHj}}}}{{{f{BHb}}{f{Blc}}}bABj}{{{f{BlBDf}}{B`{Nl}}}{{Ah{BBn}}}}{{{f{BDf}}{B`{Fn}}}BDf}{{{f{BDf}}}Fn}{{{f{BDf}}{f{{Dl{En}}}}}{{Ah{BDf}}}}{{{f{BlBDf}}{f{{Dl{En}}}}}{{Ah{{f{BlBDf}}}}}}{{{f{BlBDf}}{f{{Dl{En}}}}}{{f{BlBDf}}}}{{{f{BDf}}{Ml{Fn}}}{{f{c}}}{}}{{{f{BDf}}{BHl{Fn}}}{{f{c}}}{}}{{{f{BDf}}{BHn{Fn}}}{{f{c}}}{}}{{{f{BDf}}BI`}{{f{c}}}{}}{{{f{BDf}}{BIb{Fn}}}{{f{c}}}{}}{{{f{BDf}}{BId{Fn}}}{{f{c}}}{}}{{{f{BDf}}{f{E`}}}{{f{c}}}{}}{{{f{BDf}}Fn}{{f{c}}}{}}{{}Fn}0000{{{f{BlBDf}}Fnc}{{Ah{{f{BlBDf}}}}}BGn}{{}c{}}000000{{{f{BDf}}}{{Ah{Gl}}}}{{{f{BDf}}}d}1{{{f{BDf}}}{{`{{Jn{}{{Bb{{f{Af}}}}}}}}}}{{{f{BDf}}ANhd}BIf}{{{f{BDf}}}{{`{{Bf{}{{Bb{BDf}}}}}}}}{{{f{BDf}}}BIh}{{{f{BDf}}}Fn}4{{{f{BDf}}}{{Ah{{B`{En}}}}}}1{{{f{BDf}}BH`}{{Ah{{B`{Af}}}}}}1{{BDf{f{Af}}}c{}}{{{f{BDf}}{f{Af}}}c{}}{{{f{BDf}}{f{BDf}}}c{}}5{{{Gd{En}}}{{Ah{BDf}}}}{{Fn{Gd{En}}}BDf}{{{Gd{En}}}BDf}22{{{Gd{En}}Fn}{{Ah{BDf}}}}0{{{f{BlBIf}}}{{B`{c}}}{}}{{{f{BlBIh}}}{{B`{c}}}{}}{{{f{BDf}}}BDf}{{{f{BDf}}}{{`{{N`{}{{Bb{{f{Af}}}}}}}}}}{{{f{BDf}}ed}{{Ah{{Gd{BDf}}}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}0{{BDfe}{{Ah{c}}}{}{{Ch{BDf}{{Cf{{Ah{c}}}}}}}}{{{f{BlBDf}}e}{{Ah{c}}}{}{{Ch{{f{BlBDf}}}{{Cf{{Ah{c}}}}}}}}{{BDfgc}{{Ah{e}}}{}{}{{Ch{BDfc}{{Cf{{Ah{e}}}}}}}}{{{f{BlBDf}}}{{B`{En}}}}{{{f{BlBDf}}}b}{{BDfANh}{{BGl{{Fh{Hd}}}}}}{{{f{BDf}}{f{Af}}}c{}}{{{f{BDf}}{f{BDf}}}c{}}{{BDf{f{Af}}}c{}}{{{f{BlBDf}}{f{E`}}Bj}{{Ah{{f{BlBDf}}}}}}{{{f{BlBDf}}{f{E`}}c}{{Ah{{f{BlBDf}}}}}BIj}{{{f{BlBDf}}Fnc}{{Ah{{f{BlBDf}}}}}BGn}{{{f{BlBDf}}Bjc}{{Ah{{f{BlBDf}}}}}BIj}?`{{{f{BDf}}{f{Af}}dd{B`{J`}}}{{Ah{BDf}}}}0{{{f{BDf}}Fndd{B`{J`}}}{{Ah{BDf}}}}{{{f{BDf}}}BGh}{{{f{BDf}}{f{BDf}}}{{Ah{b}}}}{{{f{BDf}}e}{{Ah{BDf}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDf}}Fn}{{B`{{f{En}}}}}}{{{f{BDf}}c}{{Ah{BDf}}}{{BIl{Fn}}}}{{{f{BDf}}c}{{Ah{{Gd{En}}}}}{{BIn{Bj}}}}3{{{f{BDf}}e{f{BJ`}}}{{Ah{BDf}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BDf}}e{f{BGh}}}{{Ah{BDf}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BlBDf}}e}{{Ah{b}}}{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{BlBDf}}Fn}b}{{{f{BDf}}}{{Hl{FnFn}}}}{{{f{BDf}}Mh}BDf}{{{f{BDf}}}d}{{{f{BlBDf}}}b}{{{f{BDf}}}Fn}{{{f{BIf}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{BIh}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{BDf}}MhFn}BDf}00{{{f{BDf}}cF`}{{Ah{BDf}}}{{BIn{Bj}}}}{{{f{BlBDf}}cF`}{{Ah{{f{BlBDf}}}}}{{BIn{Bj}}}}{{{f{BDf}}Mh}{{Hl{BDfBDf}}}}0{{{f{BlBDf}}}{{`{{Bf{}{{Bb{BDf}}}}}}}}{{BDfFnd}{{Gd{BDf}}}}{{{f{BDf}}{f{Af}}}c{}}{{{f{BDf}}{f{BDf}}}c{}}{{BDf{f{Af}}}c{}}{{{f{BDf}}BH`}{{Ah{{B`{Af}}}}}}{{{f{BDf}}{B`{Fn}}}BDf}{{{f{BDf}}{f{El}}}{{Ah{BDf}}}}{BDf{{Gd{En}}}}{{{f{BDf}}{f{El}}}BDf}{{{f{BDf}}{f{El}}d}BDf}{{{f{BDf}}BJb}{{Ah{O`}}}}{fc{}}00{fDf}{{{f{BlBDf}}{B`{{f{E`}}}}{B`{{Od{Df{Gd{Df}}}}}}}{{Ah{BDf}}}}{{{f{BlBDf}}{B`{{f{E`}}}}{B`{{Od{Bj{Gd{Bj}}}}}}}{{Ah{BDf}}}}{{{f{BlBDf}}{f{E`}}e}{{Ah{{f{BlBDf}}}}}BGn{{Ol{{f{Af}}}{{Cf{{Ah{c}}}}}}}}{{{f{BlBDf}}Fne}{{Ah{{f{BlBDf}}}}}BGn{{Ol{{f{En}}}{{Cf{{Ah{c}}}}}}}}{{{f{BlBDf}}c}{{Ah{b}}}{{Hh{}{{Bb{{BGl{{Fh{Hd}}}}}}}}}}{{{f{BlBDf}}c}{{Ah{b}}}{{Hh{}{{Bb{{Ah{{BGl{{Fh{Hd}}}}}}}}}}}}{c{{Of{e}}}{}{}}0000{BJd{{Ah{BDf}}}}{{{Hl{BJf{f{BHf}}}}}{{Ah{BDf}}}}{{c{f{BGh}}}{{Ah{BDf}}}{{Bf{}{{Bb{{Ah{{f{BHh}}}}}}}}}}{{{f{BDf}}{f{E`}}}{{Ah{Fn}}}}{{}{{Of{c}}}{}}0000{f{{Of{GfBBh}}}}{fOh}0000{{{f{BDf}}{B`{{f{{Dl{Df}}}}}}BHb{B`{{Hl{MhFn}}}}}{{Ah{BDf}}}}{{{f{BDf}}d{B`{{Gd{Bj}}}}BHb{B`{{Hl{MhFn}}}}}{{Ah{BDf}}}}1{{{f{BDf}}{f{BDf}}}{{Ah{BDf}}}}{{{f{BlBDf}}{f{BDf}}}{{Ah{{f{BlBDf}}}}}}{{{f{BlBDf}}{f{BDf}}}b}{{}c{}}0000{{{f{BDf}}}Fn}{{{f{BlBDf}}c}{{Ah{{f{BlBDf}}}}}BGn}{{{f{BlBDf}}c{f{BGh}}}{{Ah{{f{BlBDf}}}}}BGn}{{{f{BlBDf}}En}{{f{BlBDf}}}}{{{f{BDf}}Bj{B`{Id}}}{{Ah{BDf}}}}{{{f{BlBDf}}Bj{B`{Id}}}{{f{BlBDf}}}}``````{{fh}b}0{{{f{En}}c}e{AbL`}{}}{{Enc}e{AbL`}{}}{{EnEn}c{}}{{{f{En}}{f{En}}}c{}}{{{f{En}}{f{Al}}}En}0000000{{{f{En}}{f{Al}}nNd}En}{{{f{En}}{f{Al}}Dj}En}220{{{f{En}}}{{Ah{Lb}}}}{{{f{BlEn}}{f{En}}}{{Ah{{f{BlEn}}}}}}{{{f{En}}{f{En}}ceg}En{{Ch{{f{Af}}{f{Af}}}{{Cf{Af}}}}}{{Ch{{f{Lb}}{f{Af}}}{{Cf{Af}}}}}{{Ch{{f{Af}}{f{Lb}}}{{Cf{Af}}}}}}{{{f{En}}{f{En}}c}{{Ah{En}}}{{Ch{{f{Af}}{f{Af}}}{{Cf{Af}}}}}}{{{f{En}}c}En{{Ch{{f{Af}}}{{Cf{Af}}}}}}{{{f{En}}Ej}El}{{{f{En}}}{{Ah{{f{Ed}}}}}}{{{f{En}}}Ef}{{{f{BJh}}}{{f{Af}}}}{{{f{En}}}{{f{Af}}}}{{{f{En}}}{{B`{{f{`}}}}}}{{{f{En}}}{{B`{{f{BJh}}}}}}{{{f{En}}}{{B`{{f{Af}}}}}}{{{f{BJh}}}Af}{{{f{En}}}{{Ah{{f{Fb}}}}}}{{{f{En}}}{{Ah{{f{AKh}}}}}}{{{f{En}}}{{B`{BJj}}}}{{{f{En}}{f{En}}}{{Ah{En}}}}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}012102{{{f{En}}}{{Ah{{f{Gl}}}}}}{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0{{{f{BJh}}{f{Eb}}}{{Ah{BJh}}}}{{{f{En}}{f{Eb}}}{{Ah{En}}}}10{{{f{BJh}}{f{Eb}}Fj}{{Ah{BJh}}}}{{{f{En}}{f{Eb}}Fj}{{Ah{En}}}}{{{f{En}}}{{Ah{{f{AMl}}}}}}{{{f{En}}}En}{{{f{BJh}}}BJh}1{{f{f{Blc}}}b{}}0{fb}0{{{f{En}}}{{Ah{{f{Jh}}}}}}{{}En}{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0{{{f{En}}c}e{AbL`}{}}{{Enc}e{AbL`}{}}{{EnEn}c{}}{{{f{En}}{f{En}}}c{}}{{{f{En}}{f{En}}}{{Ah{En}}}}{Fnb}0<={{{f{BJh}}}{{f{Eb}}}}{{{f{En}}}{{f{Eb}}}}{{{f{En}}{f{En}}}d}{{{f{En}}{f{En}}}{{Ah{Gl}}}}011{{{f{En}}}{{Ah{En}}}}{{{f{BlEn}}{f{En}}}{{Ah{{f{BlEn}}}}}}{{{f{En}}IbFn}{{Ah{En}}}}{{{f{En}}}{{Ah{{f{ALh}}}}}}{{{f{En}}}{{Ah{{f{ALj}}}}}}{{{f{En}}}{{ALf{Mn}}}}{{{f{En}}AGh}{{Ah{En}}}}{{{f{En}}{f{Gl}}}{{Ah{En}}}}{{{f{BJh}}{f{BlH`}}}Hb}{{{f{En}}{f{BlH`}}}Hb}{cc{}}{AfEn}{BJhEn}2{{AfFn}BJh}{{BjFn{f{Eb}}}En}{{{f{En}}FnFn}En}{{{f{En}}Fn}{{Ah{Ib}}}}{{{f{En}}}If}{{{f{En}}}{{B`{{Fh{Ff}}}}}}{{{f{En}}Fn}{{B`{{f{Ij}}}}}}{{{f{En}}Fn}Ib}{{{f{En}}{f{En}}}{{Ah{Gl}}}}0{{{f{BJh}}}d}{{{f{En}}}d}{{{f{En}}{B`{Fn}}}En}{{{f{En}}}{{Ah{{f{BCb}}}}}}{{{f{En}}}{{Ah{{f{BCd}}}}}}{{{f{En}}}{{Ah{{f{BCf}}}}}}{{{f{En}}}{{Ah{{f{BC`}}}}}}{{{f{En}}}{{Ah{{f{El}}}}}}{{{f{En}}}{{Ah{Ef}}}}{{}Fn}0{{}c{}}0{BGnEn}{BJhEn}{EnEn}{EnBDf}{{{f{BlEn}}}{{f{BlAf}}}}{BJhBJh}{{{f{BJh}}}d}{{{f{En}}}d}{{{f{En}}}{{Ah{Gl}}}}000{{{f{En}}}Gl}0{{{f{En}}}Kb}{{{f{BJh}}}{{B`{{f{Af}}}}}}{{{f{BJh}}}Fn}{{{f{En}}}Fn}{{{f{En}}}{{Ah{{f{Ef}}}}}}{{{f{En}}{f{En}}}{{Ah{Gl}}}}0{{{f{BlBJh}}c}b{{Ch{Lb}{{Cf{Lb}}}}}}{{{f{En}}c}Gl{{Ch{{f{Af}}}{{Cf{Gl}}}}}}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}}Lb}11{{{f{En}}c}e{AbL`}{}}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{Enc}e{AbL`}{}}:{{{f{En}}}{{Ah{Fn}}}}{{{f{BJh}}}{{f{Bj}}}}{{{f{En}}}{{f{Bj}}}}{{BjLbFn}BJh}{{Bjc}En{}}{{BjEb}BJh}{{Bj{f{Eb}}}En}{{{f{En}}FnFn}En}{{BjLbFn}En}0{{{f{En}}{f{En}}}{{Ah{Gl}}}}0{{{f{En}}}Fn}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}}BJl}1{{{f{En}}nNd}{{Ah{Lb}}}}{{{f{En}}}En}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{{f{En}}c}e{AbL`}{}}{{Enc}e{AbL`}{}}{{{f{BlBJh}}Bj}{{f{BlBJh}}}}{{{f{BlEn}}Bj}b}{{{f{En}}{f{{Dl{B@d}}}}}{{Ah{En}}}}0{{{f{BJh}}Fn}BJh}8{{{f{En}}ndd{B`{J`}}}{{Ah{En}}}}{{{f{En}}Fndd{B`{J`}}}{{Ah{En}}}}{{{f{BJh}}}{{f{Lb}}}}{{{f{BlEn}}Kb}b}{{{f{En}}Mh}En}{{{f{BlEn}}}b}{{{f{En}}{B`{J`}}}En}{{{f{En}}MhFn}En}{{{f{En}}Ej}{{Ah{En}}}}0{{{f{En}}Mh}{{Hl{EnEn}}}}{{{f{En}}Dj}{{Ah{Lb}}}}{{{f{En}}}{{Ah{{f{Dd}}}}}}{{{f{BJh}}{f{Eb}}}{{Ah{BJh}}}}{{{f{En}}{f{Eb}}}{{Ah{En}}}}{{{f{En}}{f{En}}}c{}}{{EnEn}c{}}{{Enc}e{AbL`}{}}{{{f{En}}c}e{AbL`}{}}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}{B`{Fn}}}En}{{{f{En}}{f{El}}}{{Ah{En}}}}{BJhAf}{EnAf}{{{f{En}}{f{{Dl{Id}}}}}{{Ah{En}}}}{{{f{En}}{f{{Dl{Id}}}}}En}{{{f{En}}{f{El}}}En}{fc{}}0{{{f{En}}}En}{{{f{BJh}}}Af}{{EnEn}{{Ah{En}}}}{{{f{En}}{f{En}}ceg}{{Ah{En}}}{{Ch{{f{Af}}{f{Af}}}{{Cf{{Ah{Af}}}}}}}{{Ch{{f{Lb}}{f{Af}}}{{Cf{{Ah{Af}}}}}}}{{Ch{{f{Af}}{f{Lb}}}{{Cf{{Ah{Af}}}}}}}}{{{f{En}}{f{En}}c}{{Ah{En}}}{{Ch{{f{Af}}{f{Af}}}{{Cf{{Ah{Af}}}}}}}}{{{f{En}}c}{{Ah{En}}}{{Ch{{f{Af}}}{{Cf{{Ah{Af}}}}}}}}{{{f{En}}}{{B`{{f{Ed}}}}}}{{{f{En}}}{{B`{{f{Fb}}}}}}{{{f{En}}}{{B`{{f{AKh}}}}}}{{{f{En}}}{{B`{{f{Gl}}}}}}{{{f{En}}}{{B`{{f{AMl}}}}}}{{{f{En}}}{{B`{{f{Jh}}}}}}{{{f{En}}}{{B`{{f{ALh}}}}}}{{{f{En}}}{{B`{{f{ALj}}}}}}{c{{Of{e}}}{}{}}0{{{f{En}}}{{B`{{f{BCb}}}}}}{{{f{En}}}{{B`{{f{BCd}}}}}}{{{f{En}}}{{B`{{f{BCf}}}}}}{{{f{En}}}{{B`{{f{BC`}}}}}}{{{f{En}}}{{B`{{f{El}}}}}}{{}{{Of{c}}}{}}0{{{f{En}}}{{B`{{f{Ef}}}}}}{{{f{En}}c}{{Ah{Gl}}}{{Ch{{f{Af}}}{{Cf{{Ah{Gl}}}}}}}}{{EnEn}{{Ah{En}}}}{{{f{En}}}{{B`{{f{Dd}}}}}}1{{{f{En}}}{{B`{{f{BBl}}}}}}{{{f{En}}}{{B`{{f{B@n}}}}}}{{{f{En}}}{{B`{{f{BBn}}}}}}{{{f{En}}}{{B`{{f{BBj}}}}}}{fOh}0{{{f{En}}}{{Ah{{f{BBl}}}}}}{{{f{En}}}{{Ah{{f{B@n}}}}}}{{{f{En}}}{{Ah{{f{BBn}}}}}}{{{f{En}}}{{Ah{{f{BBj}}}}}}{{{f{En}}}{{Ah{En}}}}0{AfBJh}{{{f{En}}Dj}{{Ah{Lb}}}}{{{f{En}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}{{{f{En}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}{{}c{}}0{{EnBj}En}{{{f{En}}c}En{AbL`}}{{{f{En}}}{{Ah{Lb}}}}{{{f{En}}{f{Gl}}{f{En}}}{{Ah{En}}}}{{{f{En}}{f{{l{An}}}}{f{En}}}{{Ah{En}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{BJn}}}BJn}{{f{f{Blc}}}b{}}{fb}{{}BJn}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{BJn}}{f{BJn}}}d}{{f{f{c}}}d{}}0{{{f{BJn}}{f{BlH`}}}Hb}{cc{}}{{{f{BJn}}{f{Blc}}}bABj}`{{}Fn}{{}c{}}`{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}``4````````````````````````````````{{fh}b}000{{{f{BHj}}}{{Ah{BDf}}}}`{{{f{BK`}}}{{f{{Dl{BKb}}}}}}{{{f{BHj}}c}{{Ah{BDf}}}{{Cn{BDf}{{Cf{{Ah{BDf}}}}}}JjJl}}{{{f{Al}}}Ef}{f{{f{c}}}{}}0000000{{{f{Bl}}}{{f{Blc}}}{}}0000000{{{f{BK`}}}BK`}{{{f{Al}}}Al}{{{f{BHj}}}BHj}{{{f{BKd}}}BKd}{{f{f{Blc}}}b{}}000{fb}000;{{}BK`}{{}Al}{Fn{{f{c}}}{}}000{{{f{BKf}}}{{f{c}}}{}}1111{Fn{{f{Blc}}}{}}0000000`{{BKhe}{}{}{{BKj{c}}}}{Fnb}0000{{{f{BlBK`}}}b}111{{{f{BK`}}{f{BK`}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}000`{{{f{BKl}}}Id}{{{f{BK`}}}{{f{{Dl{Id}}}}}}{{{f{BHj}}}{{Ah{BDf}}}}{{{f{BlBK`}}}{{f{Bl{Gd{Id}}}}}}{{{f{BK`}}{f{BlH`}}}Hb}{{{f{Al}}{f{BlH`}}}Hb}{{{f{BHj}}{f{BlH`}}}Hb}{{{f{BKd}}{f{BlH`}}}Hb}0{{{f{E`}}BKd}Bj}{cc{}}000{{{Gd{BKn}}}BK`}1{{{Gd{{Gd{BKn}}}}}BK`}{BK`Al}333{cBK`{{Hh{}{{Bb{BKn}}}}}}{cBK`{{Hn{}{{Bb{BKn}}}}}}{{{f{Al}}Fn}BKl}{{{f{BHj}}}{{f{Al}}}}{{{f{BlBHj}}}{{f{BlAl}}}}{{{f{Al}}}El}{{{f{BL`}}dd}{{Ah{Al}}}}0{{{f{BHj}}}{{Ah{BDf}}}}{{{f{BlAl}}}{{f{BlBK`}}}}{{}Fn}0000000{{}c{}}0000000{AlBK`}1{{{f{BK`}}}c{}}{BK`c{}}310{{{f{BKl}}}d}{{{f{Al}}}d}{{{f{BK`}}}d}{{{f{BK`}}}{{BLd{{BLb{{Kf{Id}}}}{Kf{BKb}}}}}}{{{f{Al}}}BLf}{{{f{BHj}}}{{Gd{En}}}}{{{f{BHj}}{B`{{Hl{MhFn}}}}}{{Gd{En}}}}={{{f{BKl}}}Fn}{{{f{Al}}}Fn}?????{{{Gd{Id}}{Gd{BKb}}d}BK`}{{{f{BDf}}{Gd{En}}Al{B`{{Gd{Bj}}}}}BHj}{{{f{BlBLf}}}{{B`{c}}}{}}{{{f{BlBLf}}Fn}{{B`{c}}}{}}{{{f{BHj}}c}{{Ah{BDf}}}{{Ch{BDf}{{Cf{{Ah{BDf}}}}}}JjJl}}{f}{{{f{Al}}}BKh}{{{f{BHj}}nNd}{{Ah{BDf}}}}{{BHje}BHj{{BAb{Bj}}}{{Hh{}{{Bb{c}}}}}}{{{f{Al}}MhFn}BKf}{{{f{BlBK`}}}b}{{{f{BlAl}}}b}{{{f{BHj}}Dj}{{Ah{BDf}}}}{{{f{BHj}}}{{Ah{BDf}}}}{Al{{Gd{Id}}}}0{BHjAl}{{{f{BlBHj}}}Al}{fc{}}000{fDf}{c{{Of{e}}}{}{}}0000000{{}{{Of{c}}}{}}0000000{f{{Of{GfBBh}}}}{fOh}0000000{AlAl}{{{f{Al}}}{{f{BK`}}}}{{{f{Al}}}{{f{BLh}}}}={{}c{}}0000000`````{{{f{BK`}}c}Af{{Ch{{Hl{Id{f{BKb}}}}}{{Cf{B`}}}}JjJl}}{{{f{BK`}}c}Af{{Ch{{Hl{Id{f{BKb}}}}}{{Cf{}}}}JjJl}}{{{f{{Dl{{BLj{Id}}}}}}c}Af{{Ch{{BLj{Id}}}{{Cf{B`}}}}JjJl}}{{{f{{Dl{{BLj{Id}}}}}}c}Af{{Ch{{BLj{Id}}}{{Cf{}}}}JjJl}}{{{f{{Dl{c}}}}e{B`{BLl}}}{{AKb{c}}}{BLnBEn}{{Bf{}{{Bb{{Hl{IdId}}}}}}I`}}{{{f{{Dl{c}}}}{f{Hj}}e{B`{BLl}}}{{AKb{c}}}{BLnBEn}{{Bf{}{{Bb{{Hl{IdId}}}}}}I`}}{{{f{{l{c}}}}IdId}{{l{c}}}Cd}{{{f{BLh}}{f{{Dl{Gb}}}}}d}{{{f{BM`}}{f{Al}}}Af}{{BMbBMb}BMb}0`{{{f{BMd}}{f{BDf}}{f{Al}}}{{Ah{Af}}}}{{{f{BMd}}}{{Ah{{f{Bj}}}}}}```````````````````````{{fh}b}00{{{f{BlBMf}}Ib}{{B`{b}}}}{{{f{BlBMh}}{f{Ib}}}b}0{f{{f{c}}}{}}00{{{f{Bl}}}{{f{Blc}}}{}}00{{{f{BMf}}}BMf}{{{f{BMh}}}BMh}{{{f{BHh}}}BHh}{{f{f{Blc}}}b{}}00{fb}00{{{f{{Dl{c}}}}}Eb{{BAl{Eb}}}}{{}BHh}{Fn{{f{c}}}{}}00{Fn{{f{Blc}}}{}}00{Fnb}00{{{f{BHh}}{f{BHh}}}d}{{f{f{c}}}d{}}0{{{f{BHh}}{f{BlH`}}}Hb}{cc{}}{{{Hl{{f{Eb}}Fn}}}BMf}1{{{Hl{{f{Eb}}Fn}}}BMh}2{{gFn}BGh{{BAb{Bj}}}{{BAb{Eb}}}{{Bf{}{{Bb{{Gd{{Hl{ce}}}}}}}}}}{{}Fn}00{{}c{}}00{BMfAf}{BMhAf}{{{f{Eb}}Fn}BMf}{{{f{Eb}}Fn}BMh}{{{Gd{Ib}}}BHh}{{{f{BlBMf}}Fn}Af}{{{f{BlBMh}}Fn}Af}{{{f{{Dl{BHh}}}}{B`{Fn}}}{{Ah{BGh}}}}0{{{f{{Dl{BHh}}}}{B`{Fn}}}{{Ah{{Gd{Eb}}}}}}{fc{}}00{c{{Of{e}}}{}{}}00{{}{{Of{c}}}{}}00{fOh}00==={{{f{{Dl{BDf}}}}}{{Ah{BDf}}}}{{{f{{Dl{BDf}}}}d}{{Ah{BDf}}}}````{{J`J`}J`}{{{f{{Dl{BDf}}}}{B`{Nl}}}{{Ah{{Hl{{Gd{BBn}}Nl}}}}}}{{{f{{AKf{Mh}}}}Nl{f{Bl{Gd{J`}}}}}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{{Dl{En}}}}{B`{Nl}}{f{Bl{Gd{J`}}}}}{{Ah{Nl}}}}{{}BMj}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{BMj}}}J`}{cc{}}{{}Fn}{{}c{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{BMl}}Nl{f{Bl{Gd{J`}}}}}{{Ah{b}}}}0{{{f{BMl}}Nl{f{Bl{Dl{J`}}}}}{{Ah{b}}}}05{{{f{BlBMj}}{f{{Dl{Dj}}}}}b}{{{f{BlBMj}}Md}b}{{{f{BlBMj}}Mh}b}{{{f{BlBMj}}M`}b}{{{f{BlBMj}}J`}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Lh{ce}}}}}{{f{e}}}NhBMn}{{{f{{Lh{c}}}}}BN`{BNbNh}}{{{f{{Lh{ce}}}}}{}NhBMn}{{{f{{Lh{c}}}}}MdBNd}{{{f{Bj}}}{{f{E`}}}}{{{f{Bj}}}{{f{BNf}}}}{{{f{Bj}}}{{f{{Dl{Dj}}}}}}{{{f{Bj}}}{{f{BNh}}}}{{{f{{Lh{ce}}}}}{{f{c}}}NhBMn}4{{{Lh{{BNj{c}}e}}}{{Lh{ce}}}{}BMn}{{{Lh{{Dl{{BNj{c}}}}e}}}{{Lh{{Dl{c}}e}}}{}BMn}{f{{f{c}}}{}}700030000000000{{{f{Bl}}}{{f{Blc}}}{}}0000000000000{{{f{AMl}}{f{AMl}}c}{{Ah{AMl}}}AMn}{{{f{{Lh{c}}}}}{{B`{{f{AJn}}}}}{AJnNh}}`{{{f{BNl}}{f{Af}}}{{Ah{Af}}}}{{{f{BNl}}c}{{Ah{Af}}}Ad}{{{f{Bj}}}Bj}{{{f{Oj}}}Oj}{{{f{BNn}}}BNn}{{{f{{Lh{ce}}}}}{{Lh{ce}}}Nh{BMnAAb}}{{{f{Nf}}}Nf}{{{f{BJb}}}BJb}{{{f{BAf}}}BAf}{{{f{Nd}}}Nd}{{{f{BLl}}}BLl}{{{f{BO`}}}BO`}{{{f{BOb}}}BOb}{{{f{BOd}}}BOd}{{f{f{Blc}}}b{}}00000000000{fb}00000000000{{{f{Bj}}{f{Bj}}}B@h}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}B@h{BOfNh}BMn}{B@je{}{{ALl{c}}AJj}}0{{B@jAEb}e{}{{ALn{c}}AJj}}0{{f{f{c}}}B@h{}}0{{ALdBDl}ALd}{ALdALd}{{{f{Hd}}{f{AEb}}}{{Fh{Hd}}}}``{{}b}{cbBMn}{{}Bj}{{}{{Lh{c}}}BOh}{{}{{Lh{E`}}}}{{}{{Lh{BOj}}}}{{}{{Lh{{Dl{c}}}}}{}}{{}Nf}{{}BJb}{{}BAf}{{}Nd}`{Fn{{f{c}}}{}}{{{f{Bj}}}f}111{{{f{{Lh{ce}}}}}{{f{c}}}NhBMn}2222222222{Fn{{f{Blc}}}{}}0000000000000{{{f{{Lh{c}}}}}{{f{E`}}}{AJnNh}}`{{{Lh{AEdc}}}{{Of{{Lh{ec}}{Lh{AEdc}}}}}BMn{AEdJjJl}}{{{Lh{AEdc}}}{{Lh{ec}}}BMn{AEdJjJl}}{{{f{{Lh{ce}}}}}{{BOl{ce}}}Nh{AAbBMn}}{Fnb}0000{{{f{Bl{Lh{ce}}}}}bNhBMn}111111111{{{f{BAf}}}{{f{AEb}}}}`{{{f{Bj}}{f{c}}}d{{Kl{E`}}Nh}}{{{f{Oj}}{f{Oj}}}d}{{{f{{Lh{Hd}}}}{f{Hd}}}d}{{{f{{Lh{BOn}}}}{f{BOn}}}d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{C@`Nh}BMn}{{{f{Nf}}{f{Nf}}}d}{{{f{BJb}}{f{BJb}}}d}{{{f{BAf}}{f{BAf}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{BLl}}{f{BLl}}}d}{{{f{BO`}}{f{BO`}}}d}{{{f{BOb}}{f{BOb}}}d}{{{f{BOd}}{f{BOd}}}d}{{f{f{c}}}d{}}0000000000000{BNn{{Hl{M`M`}}}}{{AMn{f{B@n}}{f{B@n}}}{{Ah{B@n}}}}`{{{f{Bl{Lh{ADh}}}}}{{Of{bC@b}}}}{{{f{ALd}}{f{BlH`}}}{{Of{bBA`}}}}0{{{f{Bj}}{f{BlH`}}}{{Of{bBA`}}}}0{{{f{Oj}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{BNn}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{{Lh{ce}}}}{f{BlH`}}}{{Of{bBA`}}}{BE`Nh}BMn}{{{f{{Lh{ce}}}}{f{BlH`}}}{{Of{bBA`}}}NhBMn}{{{f{{Lh{ce}}}}{f{BlH`}}}{{Of{bBA`}}}{AEfNh}BMn}{{{f{Nf}}{f{BlH`}}}Hb}{{{f{BJb}}{f{BlH`}}}Hb}{{{f{BAf}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{Nd}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{BLl}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{BO`}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{BOb}}{f{BlH`}}}{{Of{bBA`}}}}{{{f{BOd}}{f{BlH`}}}{{Of{bBA`}}}}`{C@bALd}{C@dALd}{C@fALd}{C@hALd}{cc{}}{GfBj}{{{f{Df}}}Bj}{DfBj}3{{{f{E`}}}Bj}4{M`Oj}5{{{BLj{c}}}{{Lh{{Dl{c}}}}}{}}{C@j{{Lh{BNf}}}}{C@l{{Lh{BOj}}}}{c{{Lh{c}}}{}}{{{Lh{E`}}}{{Lh{{Dl{Dj}}}}}}{{{ALf{c}}}{{Lh{c}}}{C@nNh}}{{{Gd{ce}}}{{Lh{{Dl{c}}e}}}{}{BMnAAb}}{{{f{BNf}}}{{Lh{BNf}}}}{CA`c{}}{Gf{{Lh{E`}}}}{{{Fh{ce}}}{{Lh{ce}}}NhBMn}{cc{}}{CAb{{Lh{BNh}}}}{{{f{BNh}}}{{Lh{BNh}}}}{Df{{Lh{E`}}}}{{{f{E`}}}{{Lh{E`}}}}{{{f{{Dl{c}}}}}{{Lh{{Dl{c}}}}}AAb}{{{f{BOj}}}{{Lh{BOj}}}}666666666{{c{B`{Hj}}}CAd{}}{{{CAf{Mh}}{CAf{Dj}}{B`{Hj}}}CAh}{{{CAf{Mh}}{CAf{Dj}}{B`{Hj}}}CAj}{cBj{{Hh{}{{Bb{Bj}}}}}}{cBj{{Hh{}{{Bb{Df}}}}}}{cBj{{Hh{}{{Bb{{f{E`}}}}}}}}{cBj{{Hh{}{{Bb{{f{BGf}}}}}}}}{cBj{{Hh{}{{Bb{{ALf{E`}}}}}}}}{cBj{{Hh{}{{Bb{{Fh{E`}}}}}}}}{cBj{{Hh{}{{Bb{{f{Bj}}}}}}}}{cBj{{Hh{}{{Bb{BGf}}}}}}{e{{Lh{{Dl{c}}}}}{}{{Hh{}{{Bb{c}}}}}}{{gFn}{{BEj{Mh}}}Kl{{Hh{}{{Bb{{B`{c}}}}}}}{{Hh{}{{Bb{{B`{e}}}}}}}}0{e{{BEj{Mh}}}{{Hh{}{{Bb{{B`{d}}}}}}}{{Hh{}{{Bb{{B`{c}}}}}}}}{{gAEb}{{BEj{Mh}}}BEn{{Hh{}{{Bb{{B`{c}}}}}}}{{Hh{}{{Bb{{B`{e}}}}}}}}2{e{{Lh{{Dl{c}}}}}Jj{{Hn{}{{Bb{c}}}}}}{{}{{Lh{c}}}Nh}{c{{Lh{ec}}}BMnNh}{{{f{E`}}}Bj}0{{{f{E`}}}{{Of{CAl}}}}{DfBj}{{Bjc}CAn{}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CB`Nh}BMn}{{{f{Bl{Lh{ce}}}}}{{B`{{f{Blc}}}}}NhBMn}{{{f{Bl{Lh{ce}}}}}{{f{Blc}}}NhBMn}{{{f{Gb}}Fn}Ib}3{{{f{Bj}}{f{Blc}}}bABj}{{{f{{Lh{ce}}}}{f{Blg}}}b{BFnNh}BMnABj}{{{f{BJb}}{f{Blc}}}bABj}{{{f{BAf}}{f{Blc}}}bABj}{{{f{Nd}}{f{Blc}}}bABj}{{{f{BOd}}{f{Blc}}}bABj}{{{f{Oj}}}M`}{{}b}{cb{AAbBMn}}{{{f{{Dl{M`}}}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}{{}Fn}0000000000000`{{{f{BlBNn}}}{{f{BlJ`}}}}{{}c{}}0000000000000{{}En}{{{Lh{ce}}}{{B`{c}}}{}BMn}{{{Lh{ce}}}{}NhBMn}{{{Lh{ce}}}{{Hl{e}}}NhBMn}{{{Lh{CBb}}}Af}{BjDf}{{{f{BNn}}}d}{{{f{Oj}}}d}`{{{f{{Lh{ADh}}}}}d}{{{f{c}}}d{}}1{{{f{BHf}}}{{`{{Jn{}{{Bb{{Hl{{f{Bj}}{f{c}}}}}}}}}}}{}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CB`Nh}BMn}`0{{{f{AMl}}{f{AMl}}}{{Ah{{Hl{AMlAMl}}}}}}{{EfEf}{{Ah{{Hl{EfEf}}}}}}{{{f{Bl{Lh{ce}}}}}{{f{Blc}}}{CBdNh}{BMnAAb}}{{{f{CBf}}}Lb}0{{{f{CBh}}}Lb}```11`{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{C@`Nh}BMn}{{CBjFn}{{B`{Fn}}}}{{Bjc}CBl{}}{c{{Lh{c}}}{}}{{BjAEbd}BAf}{e{{Lh{c}}}{}{{Ol{{f{{BOl{c}}}}}{{Cf{c}}}}}}{{ge}{{Lh{ce}}}{}BMn{{Ol{{f{{BOl{ce}}}}}{{Cf{c}}}}}}{{ce}{{Lh{ce}}}{}BMn}{{}{{Lh{{BNj{c}}}}}{}}{c{{Lh{{BNj{e}}c}}}BMn{}}{Fn{{Lh{{Dl{{BNj{c}}}}}}}{}}{{Fnc}{{Lh{{Dl{{BNj{e}}}}c}}}BMn{}}3210`{{}Oj}{{}BNn}{{{f{Bj}}{f{Bj}}}{{B`{B@h}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}{{B`{B@h}}}{CB`Nh}BMn}{c{{CBn{{Lh{c}}}}}{}}{{ce}{{CBn{{Lh{ce}}}}}{}BMn}`````{{{f{CBf}}}Lb}0{{{f{{Lh{c}}}}{f{BlCC`}}}b{AJnNh}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}dNhBMn}{{{f{CBh}}nNd}{{Ah{Lb}}}}{{{f{Bl{Lh{ADh}}}}{f{Bl{Dl{Dj}}}}}{{Of{FnC@b}}}}{{{f{Bl{Lh{ADh}}}}CCb}{{Of{bC@b}}}}{{{f{Bl{Lh{ADh}}}}{f{Bl{Gd{Dj}}}}}{{Of{FnC@b}}}}{{{f{Bl{Lh{ADh}}}}{f{BlDf}}}{{Of{FnC@b}}}}{{{f{Bl{Lh{ADh}}}}{f{Bl{Dl{CCd}}}}}{{Of{FnC@b}}}}`{{{f{Bl{Lh{ADh}}}}CCf}{{Of{J`C@b}}}}`{{{f{AKn}}FnFn}AKn}0{{{f{{Lh{c}}}}}{{B`{{f{AJn}}}}}{AJnNh}}{{{f{CCh}}Dj}Lb}{{M`M`}BNn}`{{{f{{Lh{ce}}}}}FnNhBMn}>>{{{f{Oj}}}{{B`{M`}}}}{fc{}}00000000000{fDf}00{B@j{{Of{eg}}}{}{{ALl{c}}AJj}{}}0{{B@jAEb}{{Of{eg}}}{}{{ALn{c}}AJj}{}}0{c{{Of{e}}}{}{}}000{{{Lh{{Dl{c}}e}}}{{Of{{Lh{{BLj{c}}e}}}}}{}BMn}1111111111{{}{{Of{c}}}{}}0000000000000{{CBjFn}{{Of{FnALd}}}}{c{{Of{{Lh{c}}CCj}}}{}}{{ce}{{Of{{Lh{ce}}CCj}}}{}BMn}{{}{{Of{{Lh{{BNj{c}}}}CCj}}}{}}{c{{Of{{Lh{{BNj{e}}c}}CCj}}}BMn{}}10{c{{Of{{CBn{{Lh{c}}}}CCj}}}{}}{{ce}{{Of{{CBn{{Lh{ce}}}}CCj}}}{}BMn}{f{{Of{GfBBh}}}}00{{{Lh{ce}}}{{Of{c{Lh{ce}}}}}{}BMn}{fOh}0000000000000{{{Lh{ce}}}cAAbBMn}`{{{f{CCh}}Dj}Lb}{{}c{}}0000000000000{{{f{{Lh{ce}}}}}FnNhBMn}``{{BAf{CCl{BjBj}}}BAf}{{{f{ALd}}c}ALd{{Ol{{f{E`}}}{{Cf{Df}}}}}}{{{f{Bl{Lh{ADh}}}}{f{{Dl{Dj}}}}}{{Of{FnC@b}}}}{{{f{BlBj}}BGf}{{Of{bBA`}}}}{{{f{BlBj}}CCn}{{Of{bBA`}}}}{{{f{BlBj}}{f{E`}}}{{Of{bBA`}}}}{{{f{Bl{Lh{ADh}}}}{f{{Dl{CD`}}}}}{{Of{FnC@b}}}}```````{{c{B`{Hj}}}CAd{}}{{{CAf{Mh}}{CAf{Dj}}{B`{Hj}}}CAh}{{{CAf{Mh}}{CAf{Dj}}{B`{Hj}}}CAj}`{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{}CDb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{CDb{B`{{f{AEb}}}}}{{Of{ACjALd}}}}{cc{}}{{}Fn}{{}c{}}{{{f{CDb}}}d}{{FnFn}CDb}{{{f{BlCDb}}{Fh{Hd}}}b}{{{f{BlCDb}}}b}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}7``{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}?>={{CDd{B`{{f{AEb}}}}}{{Of{{BEj{Mh}}ALd}}}}<;:{{{f{CDd}}}d}{FnCDd}{{{f{CDd}}}{{f{{Dl{Mh}}}}}}{{{f{BlCDd}}{f{Hd}}}b}{{{f{BlCDd}}}b}{{{f{BlCDd}}{f{{Dl{{Fh{Hd}}}}}}}b}1{{{f{BlCDd}}{B`{{f{Hd}}}}}b}{CDd{{CDf{Mh}}}}=<;{{}c{}}`{{fh}b}{{{f{CDh}}}{{f{AEd}}}}{{{f{BlCDh}}}{{Fh{Hd}}}}{{{f{BlCDh}}}{{f{BlAEd}}}}?>{{{f{CDh}}}CDh}{{f{f{Blc}}}b{}}{fb}{{}CDh}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{CDh}}}{{f{AEb}}}}{{{f{BlCDh}}Fn}b}{{{f{CDh}}{f{BlH`}}}{{Of{bBA`}}}}{cc{}}{{}Fn}{{}c{}}{{{f{CDh}}}Fn}{FnCDh}{{{f{BlCDh}}}b}70{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{CDh}}}{{B`{{f{CDj}}}}}}8```````{{{f{AKn}}FnFn}AKn}0`{{}b}0{{}d}``{{eFnFn}{{BEl{Mh}}}{{Kl{E`}}}{{Bf{}{{Bb{c}}}}}}{{eFnFn}{{AKf{Mh}}}{{Kl{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{J`b}`{{fh}b}{{{f{Lb}}}Ib}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Lb}}}Lb}{{f{f{Blc}}}b{}}{fb}{{}Lb}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{Lb}}}{{f{Eb}}}}{{{f{Lb}}{f{Lb}}}d}{{{f{Lb}}{f{BlH`}}}Hb}{J`Lb}{CDlLb}{CDnLb}{M`Lb}{InLb}{MhLb}{BjLb}{MdLb}{nLb}{dLb}{CE`Lb}{cc{}}{DjLb}{{}Fn}{{}c{}}{{LbBj}En}{{LbBj}Af}{{{f{Lb}}}d}0{{EbIb}Lb}`{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}{{{f{BlLb}}Ib}b}{{{f{Lb}}}{{f{Ib}}}}:{{{B`{n}}Eb}Lb}``````{{{f{{CEb{c}}}}{f{{CEb{c}}}}}{{Ah{b}}}{}}{{{f{BHh}}}BGh}{{{f{BHf}}}CEd}{{{f{BHf}}}BGh}{{{f{CEd}}{f{E`}}}{{B`{Mn}}}}{{{f{BGh}}{f{E`}}}{{B`{Mn}}}}{{{f{CEd}}}{{`{{Jn{}{{Bb{Mn}}}}}}}}{{{f{BGh}}}{{`{{Jn{}{{Bb{Mn}}}}}}}}{{{f{{CEh{}{{CEf{c}}}}}}}{{`{{Jn{}{{Bb{{Hl{{f{Bj}}{f{c}}}}}}}}}}}{AEfAAbBOhC@`}}{{{f{BGh}}}{{`{{Jn{}{{Bb{{Hl{{f{Bj}}{f{c}}}}}}}}}}}{}}{{{f{CEd}}}{{Ah{BGh}}}}{{{f{BGh}}}{{Ah{BGh}}}}{{{f{CEd}}ANh}BHf}{{{f{BGh}}ANh}BHf}{{{f{BlCEd}}{f{BGh}}}{{Ah{d}}}}{{{f{BlBGh}}{f{BGh}}}{{Ah{d}}}}{{{f{CEd}}{f{E`}}}{{Ah{Mn}}}}{{{f{BGh}}{f{E`}}}{{Ah{Mn}}}}`````````````````{{fh}b}0{{{f{CBb}}}n}0{{Bj{Gd{Gb}}{f{AEb}}}{{Ah{Af}}}}{{Bj{Gd{Gb}}{f{AEb}}{B`{{f{CEj}}}}}{{Ah{Af}}}}{{Afc}e{AbL`}{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbL`}{}}{{AfAf}c{}}`{{{f{CBb}}}{{Ah{Lb}}}}0{{{f{BlAf}}{f{Af}}}{{Ah{{f{BlAf}}}}}}{{{f{CBb}}Ej}El}0{{{f{CBb}}}{{Ah{El}}}}0`{{{f{Af}}}{{Ah{{f{Ed}}}}}}{{{f{Af}}Fn}{{f{Gb}}}}{{{f{CBb}}}{{f{AEd}}}}{{{f{BlCBb}}}{{f{BlAEd}}}}0{{{f{Af}}}Ef}{{{f{BlCBb}}}{{f{Bl{l{c}}}}}Cd}{{{f{CBb}}}{{f{{l{c}}}}}Cd}{{{f{Af}}}{{f{CBb}}}}{{{f{BlCBb}}}{{Ah{Fn}}}}0{{{f{BlAf}}}{{Ah{Fn}}}}{{{f{Af}}}{{Ah{{f{Fb}}}}}}{{{f{Af}}}{{Ah{{f{AKh}}}}}}{{Af{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}Af}c{}}12301032{{{f{Af}}}{{Ah{{f{Gl}}}}}}{f{{f{c}}}{}}000{{{f{Bl}}}{{f{Blc}}}{}}000{{{f{CBb}}}{{B`{{Fh{Ff}}}}}}0{{{f{CBb}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Af}}{f{Eb}}}{{Ah{Af}}}}0{{{f{Af}}{f{Eb}}Fj}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AMl}}}}}}{{{f{CBb}}{f{Af}}}{{Ah{Af}}}}0{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{CBb}}}G`}{{{f{Af}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}{{{f{CBb}}}{{f{{Gd{Gb}}}}}}{{{f{BlCBb}}}{{f{Bl{Gd{Gb}}}}}}{{{f{BlAf}}}{{f{Bl{Gd{Gb}}}}}}{{{f{Af}}}Af}{{{f{Kb}}}Kb}1{{{f{CBb}}}{{Lh{CBb}}}}{{f{f{Blc}}}b{}}0{fb}0{{{f{BlAf}}}b}{{{f{Af}}}{{Ah{{f{Jh}}}}}}{{}Af}{Fn{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fn{{f{Blc}}}{}}000{{{f{Af}}c}e{AbL`}{}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbL`}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fnb}000{{{f{CBb}}}Af}0{{{f{CBb}}}{{f{Eb}}}}0{{{f{Kb}}{f{Kb}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}c}eBAd{}}{{{f{Af}}{f{E`}}}{{Ah{Gl}}}}::1{{{f{Af}}{f{E`}}}c{}}33{{f{f{c}}}d{}}0{{{f{Af}}}Fn}{{{f{Af}}}{{Ah{Af}}}}{{{f{BlAf}}{f{Af}}}{{Ah{{f{BlAf}}}}}}{{{f{Af}}IbFn}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{ALh}}}}}}{{{f{Af}}}{{Ah{{f{ALj}}}}}}{{{f{CBb}}}{{ALf{Mn}}}}0{{{f{Af}}AGh}{{Ah{Af}}}}{{{f{CBb}}{f{Gl}}}{{Ah{Af}}}}{{{f{CBb}}}Lb}0{{{f{Kb}}{f{BlH`}}}Hb}{{{f{Af}}{f{BlH`}}}Hb}0{{{f{Af}}}Df}{cc{}}000{{{l{c}}}AfCd}{{Bj{f{{Dl{Ib}}}}d}{{Ah{Af}}}}{{Bj{f{{Dl{Ib}}}}{f{Eb}}d}{{Ah{Af}}}}{{BjGb}{{Ah{Af}}}}{{Bj{Gd{Gb}}}{{Ah{Af}}}}{{Bj{Gd{Gb}}{f{Eb}}}Af}{cAf{{Hh{}{{Bb{{f{d}}}}}}}}{cAf{{Hh{}{{Bb{{B`{Md}}}}}}}}{cAf{{Hh{}{{Bb{{B`{Mh}}}}}}}}{cAf{{Hh{}{{Bb{Mh}}}}}}{cAf{{Hh{}{{Bb{{f{Mh}}}}}}}}{cAf{{Hh{}{{Bb{{B`{In}}}}}}}}{cAf{{Hh{}{{Bb{In}}}}}}{cAf{{Hh{}{{Bb{{f{In}}}}}}}}{cAf{{Hh{}{{Bb{{B`{n}}}}}}}}{cAf{{Hh{}{{Bb{{f{Md}}}}}}}}{cAf{{Hh{}{{Bb{{B`{{f{E`}}}}}}}}}}{cAf{{Hh{}{{Bb{{B`{d}}}}}}}}{cAf{{Hh{}{{Bb{{f{n}}}}}}}}{cAf{{Hh{}{{Bb{{B`{M`}}}}}}}}{cAf{{Hh{}{{Bb{M`}}}}}}{cAf{{Hh{}{{Bb{{f{M`}}}}}}}}{cAf{{Hh{}{{Bb{{B`{J`}}}}}}}}{cAf{{Hh{}{{Bb{Md}}}}}}{cAf{{Hh{}{{Bb{{f{E`}}}}}}}}{cAf{{Hh{}{{Bb{{B`{Df}}}}}}}}{cAf{{Hh{}{{Bb{J`}}}}}}{cAf{{Hh{}{{Bb{n}}}}}}{cAf{{Hh{}{{Bb{{f{J`}}}}}}}}{cAf{{Hh{}{{Bb{Df}}}}}}{cAf{{Hh{}{{Bb{d}}}}}}{{Bj{Gd{J`}}}Af}{{Bj{Gd{Md}}}Af}{{Bj{Gd{Mh}}}Af}{{Bj{Gd{n}}}Af}{{Bj{Gd{Mj}}}Af}{{Bj{Gd{M`}}}Af}{{Bj{Gd{In}}}Af}{{BjFn{f{Eb}}}Af}{{{f{Af}}FnFn}Af}{{{f{CBb}}Fn}{{Ah{Ib}}}}{{{f{Af}}}If}{{{f{Af}}}Af}{{{f{CBb}}}{{B`{{Lj{Ff}}}}}}0{{{f{CBb}}Fn}{{B`{{f{Ij}}}}}}0{{{f{CBb}}FnFn}{{B`{{f{Ij}}}}}}0{{{f{CBb}}Fn}Ib}0{{{f{Af}}c}eBAd{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}{f{E`}}}c{}}210{{{f{CBb}}}d}{{{f{Kb}}{f{Blc}}}bABj}{{{f{Af}}{B`{Fn}}}Af}{{{f{Af}}}{{Ah{{f{BCb}}}}}}{{{f{Af}}}{{Ah{{f{BCd}}}}}}{{{f{Af}}}{{Ah{{f{BCf}}}}}}{{{f{Af}}}{{Ah{{f{BC`}}}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}`{{{f{Af}}}{{Ah{Ef}}}}{{}Fn}000{{}c{}}000{Af{{Gd{Gb}}}}{{}En}{AfBDf}3{BIjAf}{AfAf}??{{{f{Af}}}{{Ah{Gl}}}}000{{{f{CBb}}}Gl}0{{}d}00{{{f{Af}}}Kb}{{{f{Af}}}CEl}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{CBb}}}Lb}0{{{f{CBb}}}Fn}{{{f{Af}}}Fn}{{{f{CBb}}Fn}Af}0{{{f{Af}}}{{Ah{{f{Ef}}}}}}{{{f{Af}}}{{Hl{{Gd{{AGn{Mh}}}}{Gd{{B`{Hj}}}}}}}}{{{f{Af}}}Af}{{{f{Af}}c}eBAd{}}{{{f{Af}}{f{E`}}}c{}}{{{f{Af}}{f{Af}}}c{}}012{{{f{Af}}}{{Ah{{B`{c}}}}}L`}{{{f{CBb}}}{{Ah{Lb}}}}0{{{f{CBb}}}{{B`{n}}}}0{{{f{Af}}}Lb}1122322{{Afc}e{AbL`}{}}{{AfAf}c{}}{{{f{Af}}c}e{AbL`}{}}7??>{{{f{CBb}}}{{Ah{Fn}}}}0{{{f{CBb}}}{{f{Bj}}}}{{Bj{f{Af}}}Af}{{Bjc}Af{{Kl{{Dl{Df}}}}}}{{Bjc}Af{{Kl{{Dl{n}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{{ALf{{Dl{Dj}}}}}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{In}}}}}}}}{{Bjc}AfBIj}{{Bjc}Af{{Kl{{Dl{{B`{Mj}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{n}}}}}}}}{{Bj{Ml{Mh}}}Af}{{Bjc}Af{{Kl{{Dl{M`}}}}}}{{Bjc}Af{{Kl{{Dl{{f{E`}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{Mh}}}}}}}}{{Bjc}Af{{Kl{{Dl{Mj}}}}}}{{Bjc}Af{{Kl{{Dl{In}}}}}}{{Bjc}Af{{Kl{{Dl{J`}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{Md}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{J`}}}}}}}}{{Bjc}Af{{Kl{{Dl{{ALf{{Dl{Dj}}}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{Af}}}}}}}}{{Bjc}Af{{Kl{{Dl{Md}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bjc}Af{{Kl{{Dl{Af}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{M`}}}}}}}}{{Bjc}Af{{Kl{{Dl{Mh}}}}}}{{Bj{Ml{M`}}}Af}{{Bjc}Af{{Kl{{Dl{{B`{d}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{{ALf{E`}}}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{{Gd{Dj}}}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{Df}}}}}}}}{{Bjc}Af{{Kl{{Dl{{ALf{E`}}}}}}}}{{Bjc}Af{{Kl{{Dl{{B`{{f{E`}}}}}}}}}}{{Bjc}Af{{Kl{{Dl{{Gd{Dj}}}}}}}}{{Bj{Ml{Md}}}Af}{{Bjc}Af{{Kl{{Dl{d}}}}}}{{Bjc}Af{{Kl{{Dl{Ib}}}}}}{{Bj{Ml{J`}}}Af}{{Bjc}Af{{Kl{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bj{f{Eb}}}Af}{{{f{CBb}}FnFn}Af}{{BjFn}Af}{{{f{BlCEl}}}{{B`{c}}}{}}{{{f{Af}}c}eBAd{}}{{{f{Af}}{f{E`}}}{{Ah{Gl}}}}{{{f{Af}}{f{Af}}}c{}}20{{{f{Af}}{f{E`}}}c{}}{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{CBb}}}Fn}`{{{f{CBb}}}{{Ah{Lb}}}}0{{{f{Af}}}BJl}{{{f{Af}}}{{Ah{Lb}}}}{{{f{CBb}}nNd}{{Ah{Lb}}}}0{{{f{CBb}}}Af}{{{f{CBb}}}{{B`{Hj}}}}09{{Afc}e{AbL`}{}}{{{f{Af}}c}e{AbL`}{}}{{{f{BlCBb}}Bj}b}{{{f{BlAf}}Bj}{{f{BlAf}}}}{{{f{Af}}{f{{Dl{B@d}}}}}{{Ah{Af}}}}06{KbKb}{{{f{CBb}}{f{Ch}}Nf}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{J`}}}{{Ah{Af}}}}{{{f{Af}}Fndd{B`{J`}}}{{Ah{Af}}}}{{{f{Af}}Fn}Af}{{{f{BlAf}}Kb}b}{{{f{CBb}}Mh}Af}{{{f{BlCBb}}}b}0{{{f{BlAf}}}b}{{{f{Af}}{B`{J`}}}Af}{{{f{CEl}}}{{Hl{Fn{B`{Fn}}}}}}{{{f{CBb}}MhFn}Af}{{{f{Af}}MhFn}Af}{{{f{Af}}Ej}{{Ah{Af}}}}{{{f{CBb}}Ej}{{Ah{Af}}}}0{{{f{CBb}}Mh}{{Hl{AfAf}}}}{{{f{Af}}Mh}{{Hl{AfAf}}}}{{{f{CBb}}Dj}{{B`{n}}}}0{{{f{CBb}}Dj}{{Ah{Lb}}}}0{{{f{Af}}}{{Ah{{f{Dd}}}}}}{{{f{Af}}Fn}{{Ah{{ALf{E`}}}}}}{{{f{Af}}{f{Eb}}}{{Ah{Af}}}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbL`}{}}{{Afc}e{AbL`}{}}{{{f{Af}}}{{Ah{c}}}L`}{{{f{CBb}}}{{Ah{Lb}}}}0{{{f{Af}}}{{Ah{Lb}}}}{{{f{Af}}{B`{Fn}}}Af}{{{f{CBb}}{f{El}}}{{Ah{Af}}}}{{{f{CBb}}{f{{Dl{Id}}}}}{{Ah{Af}}}}{{{f{CBb}}{f{{Dl{Id}}}}}Af}{{{f{CBb}}{f{El}}}Af}{{{f{Af}}FnANh}Gb}{{{f{Af}}}{{Ah{Af}}}}>{fc{}}0{{{f{Af}}}{{ALf{Af}}}}{fDf}{{AfAf}{{Ah{Af}}}}{{{f{Af}}}{{B`{{f{Ed}}}}}}{{{f{Af}}}{{B`{{f{Fb}}}}}}{{{f{Af}}}{{B`{{f{AKh}}}}}}{{{f{Af}}}{{B`{{f{Gl}}}}}}{{{f{Af}}}{{B`{{f{AMl}}}}}}{{{f{Af}}}{{B`{{f{Jh}}}}}}{{{f{Af}}}{{B`{{f{ALh}}}}}}{{{f{Af}}}{{B`{{f{ALj}}}}}}{c{{Of{e}}}{}{}}00{{{Hl{Bj{Gd{Gb}}}}}{{Ah{Af}}}}{{{Hl{{f{BAf}}Gb}}}{{Ah{Af}}}}{{{Hl{{f{BAf}}{Gd{Gb}}}}}{{Ah{Af}}}}{{{Hl{BjGb}}}{{Ah{Af}}}}4{{{f{Af}}}{{B`{{f{BCb}}}}}}{{{f{Af}}}{{B`{{f{BCd}}}}}}{{{f{Af}}}{{B`{{f{BCf}}}}}}{{{f{Af}}}{{B`{{f{BC`}}}}}}{{{f{Af}}}{{B`{{f{El}}}}}}{{}{{Of{c}}}{}}000{{{f{Af}}}{{B`{{f{Ef}}}}}}{{AfAf}{{Ah{Af}}}}{{Bjc}{{Of{Af}}}{}}{{{f{Af}}}{{B`{{f{`}}}}}}{{{f{BlAf}}{Jb{c}}}dCd}{{{f{Af}}}{{B`{{f{Dd}}}}}}4{f{{Of{GfBBh}}}}{{{f{Af}}}{{B`{{f{BBl}}}}}}{{{f{Af}}}{{B`{{f{B@n}}}}}}{{{f{Af}}}{{B`{{f{BBn}}}}}}{{{f{Af}}}{{B`{{f{BBj}}}}}}{fOh}000{{{f{Af}}}{{Ah{{f{BBl}}}}}}{{{f{Af}}}{{Ah{{f{B@n}}}}}}{{{f{Af}}}{{Ah{{f{BBn}}}}}}{{{f{Af}}}{{Ah{{f{BBj}}}}}}{{{f{CBb}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{CBb}}}{{Ah{{f{{l{c}}}}}}}Cd}{{{f{CBb}}Dj}{{B`{n}}}}0{{{f{CBb}}Dj}{{Ah{Lb}}}}0{{}c{}}000{{AfBj}Af}{{{f{Af}}c}Af{AbL`}}{{{f{CBb}}}{{Ah{Lb}}}}0{{{f{Af}}{f{Gl}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Cl}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{Cl}}}Cl}{{f{f{Blc}}}b{}}{fb}{{{f{Cl}}}Af}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{cc{}}{{}Fn}{{}c{}}{{{CEn{Af}}}Cl}{{{f{BlCl}}{f{BlGb}}}b}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}6{{{f{BlCl}}{f{BlGb}}e}c{}{{Ch{{f{Cl}}}{{Cf{c}}}}}}``````{{fh}b}0{{{CF`{}{{Cf{c}}}}{f{Af}}}c{}}{{}CFb}{{}CFd}{{{f{CFf}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0{f{{f{c}}}{}}0{{{f{Bl}}}{{f{Blc}}}{}}0`{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{f{f{Blc}}}b{}}0{fb}0{Fn{{f{c}}}{}}0{Fn{{f{Blc}}}{}}0<;:988{Fnb}0{{{f{CFb}}{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{CFd}}{f{Af}}{f{Af}}}{{Ah{Af}}}}>={cc{}}0{{}Fn}0{{}c{}}0{{{CF`{}{{Cf{c}}}}{f{Af}}}c{}}{{}CFb}{{}CFd}{{{f{CFf}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0432100432100{fc{}}0{c{{Of{e}}}{}{}}0{{}{{Of{c}}}{}}0{fOh}099``{{{f{BNl}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Fl}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BNl}}c}{{Ah{Af}}}Ad}{{{f{{l{Fl}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bl}}}{{f{Blc}}}{}}{{{f{CFh}}}CFh}{{f{f{Blc}}}b{}}{fb}{{}CFh}{Fn{{f{c}}}{}}{Fn{{f{Blc}}}{}}{Fnb}{{{f{CFh}}{f{CFh}}}d}{{f{f{c}}}d{}}0{{{f{CFh}}{f{BlH`}}}Hb}{cc{}}{{{f{CFh}}{f{Blc}}}bABj}{{}Fn}{{}c{}}{fc{}}{c{{Of{e}}}{}{}}{{}{{Of{c}}}{}}{fOh}4````````````{{fh}b}006{{{Gd{BDf}}}{{Ah{BDf}}}}{c{{Ah{BDf}}}{{Hh{}{{Bb{BDf}}}}}}{cBDf{{Hh{}{{Bb{BDf}}}}}}{c{{B`{BDf}}}{{Hh{}{{Bb{BDf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hl{{ALf{{l{c}}}}{ALf{{l{e}}}}}}}CdCd}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hl{{ALf{{l{c}}}}{ALf{{l{e}}}}{ALf{{l{g}}}}}}}CdCdCd}{{}CFj}{{{f{CFl}}}d}0{c{{Ah{Eb}}}{{Hh{}{{Bb{{f{Ib}}}}}}}}{c{{Ah{{Hl{EbFn}}}}}{{Hh{}{{Bb{{f{Ib}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hj}}}CdCd}{{CFjCFj}CFj}{{{f{BlCFj}}CFj}b}10{{{f{CFj}}}Dj}021{f{{f{c}}}{}}0000{{{f{Bl}}}{{f{Blc}}}{}}0000{{{f{CFn}}}{{`{{Bf{}{{Bb{Fn}}}}}}}}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{{CG`{ec}}}}}{{CG`{ec}}}AAb{AAb{Bf{}{{Bb{c}}}}}}{{f{f{Blc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hl{{ALf{{l{c}}}}{ALf{{l{c}}}}}}}Cd}{{{f{En}}{f{En}}}{{Hl{EnEn}}}}{CGbe{}{{CGd{c}}}}{CGbe{}{{CGf{c}}}}{CFjCFj}{c{{Ah{BDf}}}{{Hh{}{{Bb{{f{BDf}}}}}}}}{cBDf{{Hh{}{{Bb{{f{BDf}}}}}}}}{{{f{CFj}}CFj}d}{{}CFj}{{}CFl}{{{f{{CGh{c}}}}}{{f{e}}}{}{}}{Fn{{f{c}}}{}}0{{{f{{AL`{c}}}}}{{f{e}}}{}{}}111{Fn{{f{Blc}}}{}}0{{{f{Bl{AL`{c}}}}}{{f{Ble}}}{}{}}111{{CFjCFj}CFj}{Fnb}0000{cBGh{{Hh{}{{Bb{Eb}}}}}}{c{{Ah{Eb}}}{{Hh{}{{Bb{{f{Eb}}}}}}}}:{{{f{{CGh{Af}}}}{f{{CGh{Af}}}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{f{f{c}}}d{}}00000{{{f{BlCFj}}c}b{{Hh{}{{Bb{CFj}}}}}}``{{{f{CFj}}{f{BlH`}}}Hb}0000{{{f{CFl}}{f{BlH`}}}Hb}{cc{}}000{CFjCFl}1{Dj{{B`{CFj}}}}{DjCFj}00{c{{AL`{Gl}}}{{Hh{}{{Bb{d}}}}}}{c{{AL`{{l{e}}}}}{{Hh{}{{Bb{}}}}}A`}{cCFj{{Hh{}{{Bb{CFj}}}}}}{eCGf{}{{Hh{}{{Bb{c}}}}}}32{{{f{E`}}}{{B`{CFj}}}}{c{{AL`{{l{e}}}}}{{Hn{}{{Bb{}}}}}A`}{c{{AL`{{l{e}}}}}{{I`{}{{Bb{}}}}}A`}{c{{AL`{Gl}}}{{I`{}{{Bb{d}}}}}}{{{f{Eb}}{f{Eb}}}{{B`{Eb}}}}{{{f{Eb}}{f{Eb}}CFl}{{B`{Eb}}}}{{{f{ANj}}{f{ANj}}}ANj}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CGh{Af}}}}{f{Blc}}}bABj}{{{f{CFj}}{f{Blc}}}bABj}{{{f{CFl}}{f{Blc}}}bABj}{{}Fn}0000{{{f{BlCFj}}CFj}b}{{CFjCFj}CFj}{{{f{CFj}}CFj}d}{{}c{}}0000{{{AL`{c}}}c{}}{CFjc{}}2{BIn{{Gd{c}}}{}}{{}{{Gd{Bj}}}}{{{f{CFj}}}d}0{{{f{CFj}}}{{ADd{CFj}}}}{{{f{CFn}}}{{`{{Bf{}{{Bb{CFn}}}}}}}}{{{f{CFj}}}{{ADf{CFj}}}}{{{f{CFn}}}Fn}{MjIb}{e{{Ah{Eb}}}{{Kl{Eb}}}{{Hh{}{{Bb{c}}}}AAb}}2{c{{AL`{c}}}{}}{{eFn}{{CG`{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFn}{{CG`{{CGl{{CGj{c}}}}c}}}AAb}{{{f{Bl{CG`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bl{CG`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gj}}{CFjCFj}{{{f{E`}}}Df}`{{{f{BlCFj}}CFj}b}{{{f{BlCFj}}CFjd}b}{{{f{{CG`{ec}}}}}{{Hl{Fn{B`{Fn}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CFn}}MhFn}CFn}{{{f{{Dl{c}}}}MhFn}{{f{{Dl{c}}}}}{}}{{{f{c}}Fn}{{Gd{c}}}CFn}0{{{f{CFn}}Mh}{{Hl{CFnCFn}}}}{{{f{BDf}}Fnd}{{Gd{BDf}}}}{{CFjCFj}CFj}80{fc{}}009{{CGbFn}{{CG`{CGbc}}}{}}{c{{Of{e}}}{}{}}0000{{{f{Eb}}{f{Eb}}}{{Ah{Eb}}}}{{}{{Of{c}}}{}}0000{fOh}00006{{}c{}}0000{{{f{Eb}}e}c{}{{Ch{{f{BlCl}}}{{Cf{c}}}}}}{{{f{{Dl{{Gd{c}}}}}}}{{Hl{Fn{Gd{Fn}}}}}{}}{{{f{BDf}}}{{`{{Bf{}{{Bb{BDf}}}}}}}}{{{f{{Dl{c}}}}}{{AKb{Id}}}{{Kl{{Dl{Oj}}}}JjJl}}{{{f{{Dl{e}}}}}{{Gd{c}}}{JjJlCj}{{Kl{{Dl{c}}}}}}{{{f{Af}}}{{Gd{Af}}}}","D":"KNj","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",6200],[5,"ListType",1584],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1584],[10,"Num",6201],[10,"ToPrimitive",6202],[5,"Series",5391],[8,"PolarsResult",4590,6203],[10,"NumOpsDispatchInner",5877,6204],[6,"GroupsProxy",4206,6205],[5,"BooleanType",1584],[6,"Option",6206],[17,"Item"],[8,"ArrayBox",5853],[10,"Iterator",6207],[5,"FixedSizeListType",1584],[5,"PlSmallStr",4590,6208],[0,"mut"],[17,"IsNested"],[5,"FalseT",1584],[17,"IsObject"],[10,"PolarsDataType",1584],[17,"Output"],[10,"Fn",6209],[10,"Copy",6210],[5,"AmortSeries",5853],[10,"FnMut",6209],[5,"Float32Type",1584],[5,"Float64Type",1584],[8,"StringChunked",1584],[5,"String",6211],[5,"BinaryType",1584],[1,"u8"],[1,"slice"],[5,"StringType",1584],[1,"str"],[6,"DataType",1584,6212],[8,"ArrayChunked",1584],[8,"ListChunked",1584],[5,"View",6213],[5,"SortOptions",1498],[8,"IdxCa",1584,6214],[6,"Column",3909],[5,"SortMultipleOptions",1498],[8,"BinaryChunked",1584],[10,"PolarsIntegerType",1584],[10,"MetadataTrait",864,6215],[5,"Box",6216],[6,"CastOptions",759],[10,"NumOpsDispatchCheckedInner",5952,6217],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4590,6218],[5,"Vec",6219],[5,"CompactString",6220],[5,"MetadataProperties",864],[10,"DoubleEndedIterator",6221],[8,"BooleanChunked",1584],[17,"HasViews"],[5,"Formatter",6222],[8,"Result",6222],[10,"Array",6218],[17,"Array"],[10,"IntoIterator",6223],[5,"Bitmap",6224],[1,"tuple"],[10,"IntoParallelIterator",6225],[10,"TrustedLen",6226],[6,"AnyValue",1584,6227],[8,"IdxSize",4590,6228],[5,"MetadataFlags",864],[5,"ObjectType",1584],[10,"PolarsObjectSafe",1150],[10,"PolarsObject",1150],[1,"f32"],[1,"u64"],[5,"Metadata",864],[5,"RwLockWriteGuard",6229],[5,"Int128Type",1584],[8,"DecimalChunked",1584,6230],[10,"Send",6210],[10,"Sync",6210],[10,"ExactSizeIterator",6231],[10,"PolarsFloatType",1584],[6,"IsSorted",5391,6232],[10,"PolarsIterator",807],[5,"Iter",6233],[1,"fn"],[5,"Map",6234],[10,"AsRef",6235],[6,"ChunkedArrayLayout",40],[10,"NumCast",6202],[5,"Scalar",5323],[6,"MetadataReadGuard",864,6236],[5,"IMMetadata",864,6237],[5,"Arc",4590,6238],[5,"RwLockReadGuard",6229],[5,"UInt64Type",1584],[5,"UInt32Type",1584],[1,"u32"],[5,"Int32Type",1584],[1,"i32"],[5,"Int64Type",1584],[1,"i64"],[1,"i128"],[5,"Range",6239],[5,"Field",1584,6240],[10,"ParallelIterator",6225],[10,"IndexedParallelIterator",6225],[6,"QuantileMethod",4590,6241],[5,"RollingOptionsFixedWindow",4590,6242],[10,"Sized",6210],[17,"IsStruct"],[8,"PlRandomState",1584,6243],[5,"BytesHash",6244],[8,"Array2",6245],[8,"ArrayView1",6245],[6,"Either",6246],[6,"Result",6247],[5,"TypeId",6248],[5,"NullableIdxSize",4590,6228],[10,"FnOnce",6209],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",467,6249],[10,"ChunkedBuilder",495],[5,"BinViewChunkedBuilder",495,6250],[10,"ViewType",6251],[5,"BooleanChunkedBuilder",495,6252],[5,"NullChunkedBuilder",495,6253],[5,"PrimitiveChunkedBuilder",495,6254],[10,"Clone",6255],[8,"StringChunkedBuilder",495,6250],[8,"BinaryChunkedBuilder",495,6250],[10,"NewChunkedArray",495],[5,"AnonymousListBuilder",604,6256],[5,"AnonymousOwnedListBuilder",604,6256],[5,"ListBooleanChunkedBuilder",604,6257],[5,"ListPrimitiveChunkedBuilder",604,6258],[10,"ListBuilderTrait",604],[5,"ListStringChunkedBuilder",604,6259],[5,"ListBinaryChunkedBuilder",604,6259],[5,"ListNullChunkedBuilder",604,6260],[10,"Hasher",6261],[10,"ChunkedCollectInferIterExt",787],[10,"ChunkedCollectIterExt",787],[10,"Canonical",801],[10,"ChunkedCollectParIterExt",803],[10,"FromParIterWithDtype",803],[5,"BooleanArray",6262],[5,"BoolIterNoNull",807],[5,"FixedSizeListArray",6263],[5,"FixedSizeListIterNoNull",807],[5,"SomeIterator",807],[5,"MetadataEnv",864,6264],[10,"MetadataCollectable",864,6265],[5,"Iter",6266],[5,"IterNames",6266],[5,"File",6267],[5,"Mutex",6268],[6,"MetadataMerge",864],[5,"RwLock",6229],[5,"ObjectArray",1150],[6,"ArrowDataType",1584,6269],[10,"Any",6248],[10,"Debug",6222],[8,"ObjectValueIter",1150],[5,"BitmapIter",6270],[6,"ZipValidity",6271],[5,"ObjectChunkedBuilder",1227],[8,"ObjectChunked",1584],[10,"AnonymousObjectBuilder",1251],[5,"ObjectRegistry",1251],[8,"ObjectConverter",1251],[8,"BuilderConstructor",1251],[10,"ChunkAgg",1280],[17,"FuncRet"],[10,"ChunkApply",1280],[10,"ChunkApplyKernel",1280],[10,"ChunkSort",1280],[10,"ChunkUnique",1280],[10,"ChunkCast",1280],[6,"FillNullStrategy",1280],[10,"ChunkCompareEq",1280],[10,"ChunkExplode",1280],[5,"OffsetsBuffer",6272],[10,"ChunkFillNullValue",1280],[10,"ChunkFilter",1280],[10,"ChunkFull",1280],[10,"ChunkFullNull",1280],[10,"ChunkAnyValue",1280],[10,"ChunkCompareIneq",1280],[10,"IsFirstDistinct",1280],[10,"IsLastDistinct",1280],[10,"ChunkQuantile",1280],[10,"ChunkExpandAtIndex",1280],[10,"ChunkReverse",1280],[10,"ChunkRollApply",1280],[10,"ChunkSet",1280],[10,"ChunkShift",1280],[10,"ChunkShiftFill",1280],[10,"ChunkVar",1280],[10,"ChunkTake",1280],[10,"ChunkTakeUnchecked",1280],[10,"ChunkBytes",1280],[10,"ChunkZip",1280],[10,"BinaryFnMut",1410],[10,"StaticArray",1584,6273],[10,"TernaryFnMut",1410],[10,"Error",6274],[10,"UnaryFnMut",1410],[5,"PrimitiveArray",6275],[5,"RowsEncoded",6276],[5,"BinaryArray",6277],[8,"BinaryOffsetChunked",1584],[6,"RowEncodingCatOrder",6276],[6,"SearchSortedSide",1461],[10,"SlicedArray",4590,6278],[5,"NoNull",5986],[5,"NaiveDateTime",6279],[6,"PolarsError",4590,6203],[6,"Cow",6280],[8,"Float32Chunked",1584],[8,"Float64Chunked",1584],[10,"ArrayFromIter",1584,6281],[10,"ArrayFromIterDtype",1584,6281],[10,"AsRefDataType",1584,6212],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",6282],[10,"From",6235],[5,"CategoricalChunked",3173,6283],[10,"CategoricalMergeOperation",3173,6284],[10,"LogicalType",1584,6285],[5,"Logical",1584,6285],[5,"OwnedObject",1584,6227],[6,"UnknownKind",1584,6212],[5,"CompatLevel",1584,6212],[6,"TimeUnit",1584,6286],[5,"UInt8Type",1584],[5,"UInt16Type",1584],[5,"Int8Type",1584],[5,"Int16Type",1584],[5,"DateType",1584],[5,"TimeType",1584],[5,"BinaryOffsetType",1584],[5,"DecimalType",1584],[5,"DatetimeType",1584],[5,"DurationType",1584],[5,"CategoricalType",1584],[5,"Dimension",1584,6287],[6,"ReshapeDimension",1584,6287],[6,"ArrowTimeUnit",1584],[6,"Ordering",6288],[10,"ArrayCollectIterExt",4590,6281],[8,"Utf8ViewArray",6251],[8,"UInt32Chunked",1584],[5,"Error",6222],[10,"Into",6235],[10,"NumericNative",1584],[5,"ArrowField",4590],[6,"IntegerType",6289],[6,"PrimitiveType",6290],[10,"Borrow",6291],[10,"NoOption",6292],[10,"GetAnyValue",1584,6227],[8,"Int128Chunked",1584],[10,"IntoScalar",1584,6293],[6,"PhysicalType",6289],[6,"ToCompactStringError",6220],[8,"UInt8Chunked",1584],[8,"UInt16Chunked",1584],[8,"UInt64Chunked",1584],[8,"Int8Chunked",1584],[8,"Int16Chunked",1584],[8,"Int32Chunked",1584],[8,"Int64Chunked",1584],[8,"PlIdHashMap",1584,6214],[5,"CategoricalChunkedBuilder",3173,6294],[5,"GlobalRevMapMerger",3173,6284],[6,"RevMapping",3316,6295],[6,"CategoricalOrdering",3316,6295],[5,"CatIter",3173,6283],[1,"u128"],[5,"DataFrame",3615],[5,"StringCacheHolder",3370,6296],[5,"EnumChunkedBuilder",3389,6297],[5,"ErrString",3417,6203],[6,"PolarsWarning",3417,6298],[10,"Display",6222],[5,"BinaryViewArrayGeneric",6251],[10,"Offset",6299],[5,"DictionaryArray",6300],[10,"DictionaryKey",6300],[5,"ListArray",6301],[5,"Utf8Array",6302],[10,"NativeType",6303],[10,"One",6304],[5,"CastOptionsImpl",3499,6305],[10,"Float",6306],[5,"f16",6303],[5,"FixedSizeBinaryArray",6307],[10,"AsPrimitive",6202],[10,"Eq",6288],[10,"Hash",6261],[10,"SerPrimitive",3499,6308],[10,"TimeZone",6309],[6,"FloatFmt",3585],[1,"char"],[8,"Schema",5367],[8,"ArrayRef",6310],[5,"RecordBatchT",6311],[10,"IntoColumn",3909],[6,"NullStrategy",3615],[6,"UniqueKeepStrategy",3615],[8,"PlHashSet",1584,6243],[8,"ArrowSchema",4590,6312],[5,"Row",4461],[5,"GroupBy",4206],[5,"RangeFrom",6239],[5,"RangeToInclusive",6239],[5,"RangeFull",6239],[5,"RangeInclusive",6239],[5,"RangeTo",6239],[5,"RecordBatchIter",3615],[5,"PhysRecordBatchIter",3615],[10,"IntoSeries",5391,6313],[10,"RangeBounds",6239],[10,"IntoVec",5986],[8,"SchemaRef",5367],[6,"IndexOrder",4590,6314],[5,"StructArray",6315],[8,"RecordBatch",6311],[5,"ScalarColumn",3909,6316],[6,"BitRepr",5391,6232],[8,"SeriesPhysIter",5391,6317],[5,"UnpivotArgsIR",4178],[5,"GroupsIdx",4206,6205],[8,"IdxVec",6318],[6,"GroupByMethod",4206],[5,"SlicedGroups",4206,6205],[5,"GroupsProxyParIter",4206,6205],[10,"UnindexedConsumer",6319],[6,"GroupsIndicator",4206,6205],[8,"IdxItem",4206,6205],[10,"IntoGroupsProxy",4206,6320],[5,"Copied",6321],[5,"Zip",6322],[5,"GroupsProxyIter",4206,6205],[8,"GroupsSlice",4206,6205],[1,"array"],[6,"RollingFnParams",4590,6323],[10,"IsFloat",6324],[10,"AggList",4445,6325],[10,"TakeExtremum",4445],[10,"PhysicalAggExpr",4458],[6,"AnyValueBuffer",4461,6326],[6,"AnyValueBufferTrusted",4461,6326],[5,"IdHasher",4559,6327],[10,"VecHash",4559,6328],[10,"Allocator",6329],[5,"BorrowedFd",6330],[10,"AsFd",6330],[10,"AsRawFd",6331],[5,"Path",6332],[5,"OsStr",6333],[20,"MaybeUninit",6334],[10,"NumOpsDispatchChecked",4590,6217],[5,"ChunkId",4590,6228],[5,"RollingVarParams",4590,6323],[5,"RollingQuantileParams",4590,6323],[6,"NonExistent",4590,6335],[10,"Ord",6288],[10,"Default",6336],[5,"CStr",6337],[5,"Weak",6238],[10,"Scalar",6338],[10,"PartialEq",6288],[5,"Error",6339],[6,"Error",6340],[5,"Utf8Error",6341],[5,"TryReserveError",6342],[5,"PathBuf",6332],[5,"CString",6343],[10,"ToOwned",6280],[1,"never"],[5,"OsString",6333],[10,"FromData",5225,6344],[5,"Buffer",6345],[10,"FromDataUtf8",5225,6344],[10,"FromDataBinary",5225,6344],[6,"Ambiguous",4590,6335],[10,"NamedFromOwned",4590,6346],[10,"PartialOrd",6288],[10,"SeriesTrait",5391,6232],[10,"CloneToUninit",6255],[10,"ChunkAggSeries",4590,6347],[10,"QuantileAggSeries",4590,6348],[10,"IndexToUsize",4590,6349],[10,"NamedFrom",4590,6346],[5,"Pin",6350],[5,"Request",6274],[5,"BorrowedCursor",6351],[5,"IoSliceMut",6352],[6,"SeekFrom",6352],[10,"VarAggSeries",4590,6353],[5,"AllocError",6329],[5,"BTreeMap",6354],[5,"Arguments",6222],[5,"IoSlice",6352],[5,"AnonymousBuilder",5231,6355],[5,"AnonymousBuilder",5251,6356],[5,"Offsets",6272],[5,"MutableNullArray",5274,6357],[5,"MutableBitmap",6358],[1,"i8"],[1,"u16"],[1,"i16"],[5,"Schema",6359],[10,"SchemaExt",5367],[17,"DataType"],[10,"SchemaNamesAndDtypes",5367],[8,"Metadata",6269],[5,"SeriesIter",5391,6317],[5,"Rc",6360],[10,"LhsNumOps",5877,6204],[5,"NumericListOp",5877,6361],[5,"NumericFixedSizeListOp",5877,6362],[10,"NumOpsDispatch",5877,6204],[6,"NullBehavior",5960],[5,"SuperTypeFlags",5986,6363],[5,"SuperTypeOptions",5986,6363],[10,"Container",5986],[5,"TrustMyLength",5986,6226],[10,"CustomIterTools",5986,6364],[10,"FromIteratorReversed",6365],[10,"FromTrustedLenIterator",5986,6364],[5,"Wrap",5986],[5,"Repeat",6366],[5,"Take",6367],[8,"FillNullLimit",1280],[10,"InitHashMaps",1584],[10,"InitHashMaps2",1584],[5,"TrueT",1584],[15,"IO",3484],[15,"Context",3484],[15,"Count",4442],[15,"Slice",4443],[8,"QuantileInterpolOptions",4590],[10,"ListFromIter",4590],[10,"Utf8FromIter",5318],[10,"BinaryFromIter",5318]],"r":[[0,6327],[4,6296],[13,6296],[16,6296],[32,6296],[467,6249],[495,6250],[496,6250],[497,6252],[500,6253],[501,6254],[502,6250],[604,6256],[605,6256],[606,6259],[607,6257],[609,6260],[610,6258],[611,6259],[869,6237],[875,6265],[876,6264],[880,6236],[881,6215],[1197,6368],[1490,6278],[1498,6278],[1585,6227],[1590,6281],[1591,6281],[1592,6281],[1593,6269],[1595,6212],[1611,6283],[1614,6283],[1615,6294],[1616,6284],[1617,6295],[1620,6212],[1621,6212],[1622,6212],[1623,6212],[1634,6230],[1637,6287],[1646,6240],[1647,6240],[1663,6227],[1665,6284],[1669,6214],[1670,6349],[1671,6214],[1672,6214],[1674,6243],[1675,6214],[1700,6293],[1714,6285],[1715,6285],[1733,6227],[1737,6243],[1738,6243],[1739,6214],[1740,6243],[1741,6243],[1742,6243],[1743,6208],[1749,6287],[1750,6295],[1753,6273],[1765,6286],[1766,6212],[1793,6212],[2008,6284],[2028,6285],[2143,6212],[2279,6285],[2711,6284],[2712,6284],[2727,6212],[2831,6283],[2872,6283],[3173,6283],[3174,6283],[3175,6294],[3176,6284],[3177,6295],[3179,6284],[3183,6295],[3200,6284],[3268,6284],[3269,6284],[3287,6283],[3291,6283],[3316,6295],[3321,6295],[3370,6296],[3376,6296],[3379,6296],[3387,6296],[3389,6297],[3407,6295],[3412,6295],[3413,6296],[3414,6296],[3415,6296],[3416,6296],[3423,6203],[3430,6203],[3431,6203],[3432,6298],[3446,6203],[3454,6203],[3461,6298],[3466,6203],[3468,6203],[3469,6203],[3470,6203],[3471,6203],[3472,6298],[3473,6203],[3488,6369],[3489,6369],[3490,6369],[3491,4559],[3493,6370],[3499,6305],[3500,6308],[3502,6371],[3503,6372],[3504,6371],[3505,6371],[3506,6371],[3507,6371],[3508,6373],[3509,6374],[3510,6374],[3511,6374],[3514,6305],[3515,6305],[3516,6305],[3520,6308],[3521,6308],[3522,6375],[3523,6375],[3524,6375],[3529,6308],[3530,6371],[3531,6371],[3532,6308],[3537,6308],[3538,6308],[3539,6308],[3540,6308],[3541,6308],[3544,6308],[3545,6308],[3546,6308],[3547,6308],[3548,6308],[3549,6308],[3550,6305],[3551,6308],[3552,6308],[3553,6308],[3554,6308],[3555,6308],[3556,6308],[3557,6308],[3558,6308],[3559,6308],[3565,6372],[3566,6372],[3567,6372],[3568,6372],[3569,6372],[3570,6373],[3574,6376],[3575,6376],[3576,6376],[3577,6376],[3578,6376],[3579,6376],[3580,6376],[3581,6376],[3582,6377],[3583,6377],[3584,6377],[3913,6316],[4206,6205],[4212,6205],[4213,6205],[4214,6205],[4215,6205],[4216,6205],[4217,6205],[4220,6205],[4222,6320],[4234,6205],[4445,6325],[4463,6326],[4464,6326],[4558,6378],[4559,6327],[4560,6327],[4561,6328],[4564,6328],[4565,6328],[4568,6328],[4590,6335],[4591,6238],[4592,6249],[4593,6281],[4594,6218],[4596,6312],[4597,6250],[4598,6252],[4600,6283],[4601,6283],[4602,6294],[4603,6284],[4604,6295],[4605,6347],[4606,6228],[4607,40],[4608,495],[4609,787],[4610,787],[4611,3909],[4615,3615],[4624,6344],[4625,6344],[4626,6344],[4628,6284],[4632,6349],[4633,6228],[4634,6314],[4635,6349],[4636,3909],[4637,6313],[4638,5986],[4640,6379],[4641,6379],[4642,6379],[4645,6204],[4648,6259],[4649,6257],[4650,604],[4651,6380],[4652,6258],[4653,6259],[4659,6346],[4660,6346],[4663,495],[4665,6335],[4668,6228],[4669,6204],[4670,6217],[4674,6208],[4675,6203],[4676,807],[4677,1150],[4678,6203],[4679,6254],[4681,6348],[4682,6241],[4683,6241],[4686,6295],[4687,6323],[4688,6242],[4689,6323],[4690,6323],[4693,5323],[4696,5391],[4697,6232],[4699,6278],[4700,6296],[4702,6250],[4704,3615],[4705,4178],[4707,6353],[4708,6328],[4763,6284],[4814,6380],[4815,0],[4828,6380],[4860,0],[4910,6380],[5009,6349],[5054,6380],[5056,6284],[5057,6284],[5084,6380],[5091,6203],[5092,6203],[5093,6203],[5094,6203],[5106,6283],[5108,6380],[5114,6283],[5195,6380],[5225,6344],[5226,6344],[5227,6344],[5231,6355],[5251,6356],[5274,6357],[5305,6295],[5310,6295],[5311,6278],[5314,6296],[5315,6296],[5316,6296],[5317,6296],[5318,6381],[5319,6381],[5393,6232],[5394,1280],[5397,6313],[5398,6232],[5399,6232],[5404,6317],[5405,6317],[5406,6232],[5877,6204],[5878,6204],[5879,6204],[5880,6362],[5881,6361],[5895,6204],[5952,6217],[5953,6217],[5989,6364],[5990,6364],[5991,6364],[5994,6363],[5995,6363],[5996,6226],[6011,6382],[6012,6382],[6072,6383],[6073,6363],[6113,6363],[6114,6363],[6116,6384],[6144,6363],[6145,6363],[6177,6363],[6194,6384]],"b":[[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[53,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[58,"impl-ChunkedArray%3CListType%3E"],[59,"impl-ChunkedArray%3CFixedSizeListType%3E"],[60,"impl-ChunkedArray%3CFixedSizeListType%3E"],[61,"impl-ChunkedArray%3CListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[68,"impl-ChunkedArray%3CFixedSizeListType%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[71,"impl-ChunkedArray%3CFloat64Type%3E"],[76,"impl-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkedArray%3CT%3E"],[80,"impl-ChunkedArray%3CFixedSizeListType%3E"],[81,"impl-ChunkedArray%3CListType%3E"],[108,"impl-Container-for-ChunkedArray%3CT%3E"],[109,"impl-ChunkedArray%3CT%3E"],[129,"impl-Div-for-ChunkedArray%3CT%3E"],[130,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[131,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[132,"impl-Div-for-%26ChunkedArray%3CT%3E"],[139,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[140,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[141,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[142,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[149,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[150,"impl-Debug-for-ChunkedArray%3CT%3E"],[152,"impl-ChunkedArray%3CFixedSizeListType%3E"],[153,"impl-ChunkedArray%3CListType%3E"],[161,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[162,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[163,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[165,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[166,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[178,"impl-ChunkedArray%3CListType%3E"],[179,"impl-ChunkedArray%3CFixedSizeListType%3E"],[183,"impl-ChunkedArray%3CFixedSizeListType%3E"],[184,"impl-ChunkedArray%3CListType%3E"],[188,"impl-ChunkedArray%3CListType%3E"],[189,"impl-ChunkedArray%3CFixedSizeListType%3E"],[198,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[199,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[201,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkedArray%3CListType%3E"],[208,"impl-ChunkedArray%3CFixedSizeListType%3E"],[235,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[236,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[237,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[238,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[239,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[240,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CT%3E"],[242,"impl-Container-for-ChunkedArray%3CT%3E"],[247,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[248,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[249,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[250,"impl-ChunkCompareIneq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkedArray%3CBooleanType%3E"],[256,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[266,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[267,"impl-ChunkedArray%3CBooleanType%3E"],[271,"impl-ChunkedArray%3CBooleanType%3E"],[272,"impl-ChunkedArray%3CT%3E"],[273,"impl-Mul-for-ChunkedArray%3CT%3E"],[274,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[275,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[276,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[281,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[282,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[284,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[289,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[290,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[291,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[293,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[294,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[295,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[296,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[297,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[298,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[299,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[300,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[301,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[302,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[303,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[304,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[312,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[313,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[314,"impl-ChunkCompareEq%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkCompareEq%3CRhs%3E-for-ChunkedArray%3CT%3E"],[321,"impl-ChunkedArray%3CListType%3E"],[322,"impl-ChunkedArray%3CStringType%3E"],[323,"impl-ChunkedArray%3CListType%3E"],[324,"impl-ChunkedArray%3CStringType%3E"],[337,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[338,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[339,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[340,"impl-Rem-for-ChunkedArray%3CT%3E"],[359,"impl-Container-for-ChunkedArray%3CT%3E"],[360,"impl-ChunkedArray%3CT%3E"],[363,"impl-ChunkedArray%3CT%3E"],[364,"impl-Container-for-ChunkedArray%3CT%3E"],[367,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[368,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[369,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[370,"impl-Sub-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkedArray%3CBooleanType%3E"],[373,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[376,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[377,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[378,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[384,"impl-ChunkedArray%3CListType%3E"],[385,"impl-ChunkedArray%3CFixedSizeListType%3E"],[386,"impl-ChunkedArray%3CListType%3E"],[387,"impl-ChunkedArray%3CT%3E"],[392,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[393,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[394,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[395,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[396,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[397,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[399,"impl-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-ChunkedArray%3CListType%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[443,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[444,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[445,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[446,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[447,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[448,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[449,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[450,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[451,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[452,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[453,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[454,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[455,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[456,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[457,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[458,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[459,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[460,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[461,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[462,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[463,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[551,"impl-BinViewChunkedBuilder%3Cstr%3E"],[552,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[902,"impl-MetadataProperties"],[903,"impl-Flags-for-MetadataProperties"],[904,"impl-MetadataFlags"],[905,"impl-Flags-for-MetadataFlags"],[969,"impl-MetadataTrait-for-Metadata%3CT%3E"],[970,"impl-Metadata%3CT%3E"],[995,"impl-Octal-for-MetadataProperties"],[996,"impl-UpperHex-for-MetadataProperties"],[997,"impl-Binary-for-MetadataProperties"],[998,"impl-LowerHex-for-MetadataProperties"],[999,"impl-Debug-for-MetadataProperties"],[1000,"impl-UpperHex-for-MetadataFlags"],[1001,"impl-Debug-for-MetadataFlags"],[1002,"impl-Binary-for-MetadataFlags"],[1003,"impl-Octal-for-MetadataFlags"],[1004,"impl-LowerHex-for-MetadataFlags"],[1014,"impl-MetadataProperties"],[1015,"impl-Flags-for-MetadataProperties"],[1016,"impl-Flags-for-MetadataFlags"],[1017,"impl-MetadataFlags"],[1028,"impl-Metadata%3CT%3E"],[1029,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1072,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1073,"impl-Metadata%3CT%3E"],[1077,"impl-Metadata%3CT%3E"],[1078,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1156,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1157,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1192,"impl-ObjectArray%3CT%3E"],[1193,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1208,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1209,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1219,"impl-ObjectArray%3CT%3E"],[1220,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1221,"impl-ObjectArray%3CT%3E"],[1222,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1224,"impl-Array-for-ObjectArray%3CT%3E"],[1225,"impl-ObjectArray%3CT%3E"],[1228,"impl-ObjectChunkedBuilder%3CT%3E"],[1229,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1231,"impl-ObjectChunkedBuilder%3CT%3E"],[1232,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1834,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1835,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1836,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1837,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1838,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1839,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1840,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1841,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1925,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1926,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1927,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1928,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1929,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1930,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2282,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2283,"impl-PartialEq-for-DataType"],[2295,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2296,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2297,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2298,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2302,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2303,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2304,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2305,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2341,"impl-Display-for-AnyValue%3C\'_%3E"],[2342,"impl-Debug-for-AnyValue%3C\'a%3E"],[2344,"impl-Debug-for-DataType"],[2345,"impl-Display-for-DataType"],[2348,"impl-Display-for-TimeUnit"],[2349,"impl-Debug-for-TimeUnit"],[2351,"impl-Display-for-ReshapeDimension"],[2352,"impl-Debug-for-ReshapeDimension"],[2365,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2367,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2368,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2369,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2370,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2372,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2374,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2375,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2378,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2379,"impl-From%3C%26Field%3E-for-Field"],[2404,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2406,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2409,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2410,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2411,"impl-FromIterator%3COption%3CColumn%3E%3E-for-ChunkedArray%3CListType%3E"],[2412,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2414,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2415,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2416,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2417,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2423,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2424,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2426,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2427,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2428,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2429,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2430,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2431,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2438,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2439,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2440,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2441,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2442,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2443,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2547,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2548,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2549,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2550,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2552,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2553,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2554,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2555,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2702,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2703,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2704,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2705,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2707,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2708,"impl-ChunkCompareIneq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2709,"impl-ChunkCompareIneq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2710,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2752,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2753,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2754,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2755,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2756,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2757,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2758,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2759,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2760,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2761,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2778,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2779,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2783,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2784,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2785,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2786,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2790,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2791,"impl-ChunkCompareEq%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2792,"impl-ChunkCompareEq%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2793,"impl-ChunkCompareEq%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2886,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[2887,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[2888,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CListType%3E"],[2889,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CListType%3E"],[2890,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2891,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2892,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2893,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3220,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3221,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3222,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3223,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3224,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3225,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3241,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3242,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3243,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3244,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3245,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3246,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3262,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3263,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3264,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3265,"impl-ChunkCompareIneq%3C%26str%3E-for-CategoricalChunked"],[3266,"impl-ChunkCompareIneq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3267,"impl-ChunkCompareIneq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3278,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3279,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3280,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3281,"impl-ChunkCompareEq%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3282,"impl-ChunkCompareEq%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3283,"impl-ChunkCompareEq%3C%26str%3E-for-CategoricalChunked"],[3456,"impl-Debug-for-ErrString"],[3457,"impl-Display-for-ErrString"],[3640,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3641,"impl-Add%3C%26Series%3E-for-DataFrame"],[3642,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3688,"impl-Div%3C%26Series%3E-for-DataFrame"],[3689,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3690,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3722,"impl-Debug-for-DataFrame"],[3723,"impl-Display-for-DataFrame"],[3729,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3730,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3756,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3757,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3758,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3759,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3760,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3761,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3762,"impl-Index%3C%26str%3E-for-DataFrame"],[3763,"impl-Index%3Cusize%3E-for-DataFrame"],[3781,"impl-DataFrame"],[3782,"impl-Container-for-DataFrame"],[3790,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3791,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3792,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3813,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3814,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3815,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3843,"impl-DataFrame"],[3844,"impl-Container-for-DataFrame"],[3848,"impl-Container-for-DataFrame"],[3849,"impl-DataFrame"],[3852,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3853,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3854,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3870,"impl-TryExtend%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E%3E-for-DataFrame"],[3871,"impl-TryExtend%3CResult%3CRecordBatchT%3CBox%3Cdyn+Array%3E%3E,+PolarsError%3E%3E-for-DataFrame"],[3877,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3878,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3917,"impl-Add%3CT%3E-for-%26Column"],[3918,"impl-Add%3CT%3E-for-Column"],[3919,"impl-Add-for-Column"],[3920,"impl-Add-for-%26Column"],[3951,"impl-Column"],[3952,"impl-BitAnd-for-%26Column"],[3953,"impl-BitAnd-for-Column"],[3954,"impl-BitOr-for-Column"],[3955,"impl-BitOr-for-%26Column"],[3956,"impl-Column"],[3957,"impl-BitXor-for-%26Column"],[3958,"impl-BitXor-for-Column"],[3959,"impl-Column"],[3985,"impl-Div%3CT%3E-for-%26Column"],[3986,"impl-Div%3CT%3E-for-Column"],[3987,"impl-Div-for-Column"],[3988,"impl-Div-for-%26Column"],[4012,"impl-From%3CSeries%3E-for-Column"],[4013,"impl-From%3CScalarColumn%3E-for-Column"],[4065,"impl-Mul%3CT%3E-for-%26Column"],[4066,"impl-Mul-for-%26Column"],[4067,"impl-Mul-for-Column"],[4068,"impl-Mul%3CT%3E-for-Column"],[4088,"impl-Rem-for-%26Column"],[4089,"impl-Rem-for-Column"],[4090,"impl-Rem%3CT%3E-for-%26Column"],[4091,"impl-Rem%3CT%3E-for-Column"],[4113,"impl-Sub-for-%26Column"],[4114,"impl-Sub-for-Column"],[4115,"impl-Sub%3CT%3E-for-Column"],[4116,"impl-Sub%3CT%3E-for-%26Column"],[4320,"impl-Display-for-GroupByMethod"],[4321,"impl-Debug-for-GroupByMethod"],[4327,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4329,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4362,"impl-IntoIterator-for-%26GroupsIdx"],[4363,"impl-IntoIterator-for-GroupsIdx"],[4365,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4366,"impl-IntoParallelIterator-for-GroupsIdx"],[4725,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4726,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4727,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4728,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4731,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4732,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4820,"impl-Default-for-Arc%3CT%3E"],[4821,"impl-Default-for-Arc%3Cstr%3E"],[4822,"impl-Default-for-Arc%3CCStr%3E"],[4823,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4883,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4884,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4885,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4912,"impl-Debug-for-PolarsError"],[4913,"impl-Display-for-PolarsError"],[4914,"impl-Display-for-PlSmallStr"],[4915,"impl-Debug-for-PlSmallStr"],[4918,"impl-Display-for-Arc%3CT,+A%3E"],[4919,"impl-Pointer-for-Arc%3CT,+A%3E"],[4920,"impl-Debug-for-Arc%3CT,+A%3E"],[4930,"impl-From%3CError%3E-for-PolarsError"],[4931,"impl-From%3CError%3E-for-PolarsError"],[4932,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4933,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4935,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4936,"impl-From%3C%26String%3E-for-PlSmallStr"],[4937,"impl-From%3CString%3E-for-PlSmallStr"],[4939,"impl-From%3C%26str%3E-for-PlSmallStr"],[4943,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4944,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4945,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4946,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4947,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4948,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4949,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4950,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4952,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4953,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4955,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4956,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4957,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4958,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4959,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4960,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4973,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4974,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4975,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4976,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4977,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4978,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4979,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4980,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[5338,"impl-From%3Cu64%3E-for-Scalar"],[5339,"impl-From%3Ci8%3E-for-Scalar"],[5340,"impl-From%3Cu16%3E-for-Scalar"],[5341,"impl-From%3Cu32%3E-for-Scalar"],[5342,"impl-From%3Cf32%3E-for-Scalar"],[5343,"impl-From%3Ci64%3E-for-Scalar"],[5344,"impl-From%3CPlSmallStr%3E-for-Scalar"],[5345,"impl-From%3Ci32%3E-for-Scalar"],[5346,"impl-From%3Cf64%3E-for-Scalar"],[5347,"impl-From%3Cbool%3E-for-Scalar"],[5348,"impl-From%3Ci16%3E-for-Scalar"],[5350,"impl-From%3Cu8%3E-for-Scalar"],[5414,"impl-Add%3CT%3E-for-Series"],[5415,"impl-Add-for-%26Series"],[5416,"impl-Add%3CT%3E-for-%26Series"],[5417,"impl-Add-for-Series"],[5441,"impl-BitAnd%3C%26Series%3E-for-Series"],[5442,"impl-BitAnd-for-Series"],[5443,"impl-BitAnd-for-%26Series"],[5444,"impl-BitAnd%3CSeries%3E-for-%26Series"],[5445,"impl-BitOr-for-%26Series"],[5446,"impl-BitOr-for-Series"],[5447,"impl-BitOr%3C%26Series%3E-for-Series"],[5448,"impl-BitOr%3CSeries%3E-for-%26Series"],[5449,"impl-BitXor-for-%26Series"],[5450,"impl-BitXor%3CSeries%3E-for-%26Series"],[5451,"impl-BitXor%3C%26Series%3E-for-Series"],[5452,"impl-BitXor-for-Series"],[5498,"impl-Div%3CT%3E-for-%26Series"],[5499,"impl-Div-for-%26Series"],[5500,"impl-Div%3CT%3E-for-Series"],[5501,"impl-Div-for-Series"],[5513,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5514,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5515,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5516,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5517,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5518,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5536,"impl-Display-for-Series"],[5537,"impl-Debug-for-Series"],[5549,"impl-FromIterator%3C%26bool%3E-for-Series"],[5550,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5551,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5552,"impl-FromIterator%3Ci64%3E-for-Series"],[5553,"impl-FromIterator%3C%26i64%3E-for-Series"],[5554,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5555,"impl-FromIterator%3Cf32%3E-for-Series"],[5556,"impl-FromIterator%3C%26f32%3E-for-Series"],[5557,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5558,"impl-FromIterator%3C%26i32%3E-for-Series"],[5559,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5560,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5561,"impl-FromIterator%3C%26f64%3E-for-Series"],[5562,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5563,"impl-FromIterator%3Cu32%3E-for-Series"],[5564,"impl-FromIterator%3C%26u32%3E-for-Series"],[5565,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5566,"impl-FromIterator%3Ci32%3E-for-Series"],[5567,"impl-FromIterator%3C%26str%3E-for-Series"],[5568,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5569,"impl-FromIterator%3Cu64%3E-for-Series"],[5570,"impl-FromIterator%3Cf64%3E-for-Series"],[5571,"impl-FromIterator%3C%26u64%3E-for-Series"],[5572,"impl-FromIterator%3CString%3E-for-Series"],[5573,"impl-FromIterator%3Cbool%3E-for-Series"],[5574,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5575,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5576,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5577,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5578,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5579,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5580,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5594,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5595,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5596,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5597,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5598,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5599,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5647,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5648,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5649,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5650,"impl-ChunkCompareIneq%3C%26Series%3E-for-Series"],[5651,"impl-ChunkCompareIneq%3C%26str%3E-for-Series"],[5652,"impl-ChunkCompareIneq%3CRhs%3E-for-Series"],[5666,"impl-Mul%3CT%3E-for-Series"],[5667,"impl-Mul-for-Series"],[5668,"impl-Mul%3CT%3E-for-%26Series"],[5669,"impl-Mul-for-%26Series"],[5676,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5677,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5678,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5679,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5680,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5681,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5682,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5683,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5684,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5685,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5686,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5687,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5688,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5689,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5690,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5691,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5692,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5693,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5694,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5695,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5696,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5697,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5698,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5699,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5700,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5701,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5702,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5703,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5704,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5705,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5706,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5707,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5708,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5709,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5710,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5711,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5712,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5717,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5718,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5719,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5720,"impl-ChunkCompareEq%3CRhs%3E-for-Series"],[5721,"impl-ChunkCompareEq%3C%26Series%3E-for-Series"],[5722,"impl-ChunkCompareEq%3C%26str%3E-for-Series"],[5735,"impl-Rem-for-%26Series"],[5736,"impl-Rem%3CT%3E-for-Series"],[5737,"impl-Rem%3CT%3E-for-%26Series"],[5770,"impl-Sub-for-Series"],[5771,"impl-Sub-for-%26Series"],[5772,"impl-Sub%3CT%3E-for-%26Series"],[5773,"impl-Sub%3CT%3E-for-Series"],[5802,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5803,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5804,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5805,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[6019,"impl-SuperTypeFlags"],[6020,"impl-Flags-for-SuperTypeFlags"],[6087,"impl-LowerHex-for-SuperTypeFlags"],[6088,"impl-Debug-for-SuperTypeFlags"],[6089,"impl-Octal-for-SuperTypeFlags"],[6090,"impl-Binary-for-SuperTypeFlags"],[6091,"impl-UpperHex-for-SuperTypeFlags"],[6100,"impl-SuperTypeFlags"],[6101,"impl-Flags-for-SuperTypeFlags"],[6103,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6104,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6107,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6108,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6111,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6112,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAA0AEAAAAJMQ3BAXERoRGxEcER0RHhEjESYRKxEsEVIRSxI=","e":"OzAAAAEAAEMSYgIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBCAAAARwABAEoABQBTAAEAVgAAAFgAAABaAAoAZgAAAGkABABxAAMAdgACAH0ADQCMAAMAkQACAJUABQCcAAAAngABAKIABQCqAAMAsAAEALYABgDAAAEAxQAAAMcAAwDNAAIA1QAFANwAAwDjAAIA5wACAOsABgDzAAAA+AANAAsBBAASAQYAGgEbADkBAwA+AQIAQgEEAEgBAQBOAQIAUgEEAFgBAABdAQUAZQEBAGgBAABqAQEAbQEKAH4BAQCFAQAAiQEGAJEBAACTAQEAlgEIAKABAACiAQYAqwEAAK0BIwDTASkAAQICAAcCKAA2AgUAQAIAAEICJgBqAhkAhQIzAMACDADUAiQA/AINAAsDAQAOAxkAKQMAACwDDgA+AwIARAMCAEkDHABnAwkAcgMKAIgDAACKAwAAjwMNAJ4DEACzAxIAyAMAAMoDCQDWAwMA3AMBAOADDQD4AwEAAQQHAAoEBwAfBAEAIwQAACYEAwAuBAUANQQEAEEECwBUBAQAWwQNAGsEBgB1BAgAfwQBAIMEFwCcBAcApQQAAKcEAACqBAIAsAQQAMIEAADFBAQAywQBAM4EAQDRBAgA2wQBAN4EBQDmBAEA6QQAAOsEAQDuBAMA8wQEAPkEAgD9BAMAAwUAAAYFAAAPBQAAFAUAABcFAQAcBQEAHwUAACIFAQAtBQEANwUCAD0FBgBGBQIASwUBAE4FAABQBQEAVgUBAFkFAgBhBQEAZwUAAGoFAQBuBQAAcAUAAHIFAAB0BQAAeQUEAIAFAQCDBQcAjAUBAI8FAACTBQAAlQUDAJoFAQCdBQUAqQUfAMoFAQDOBQQA1AUDAN4FEQDyBQkA/QUAAP8FBAASBgkAKAYLADUGBAA8BgIAQAYFAEgGAABKBg4AXAYAAF4GAABjBgEAZgYBAGkGAwBuBgAAcAYAAHMGAQB3BgAAeQYBAHwGAAB+BgIAggYNAJEGAACTBgEAlgYAAJgGAQCbBgAAnQYBAKAGAACiBgEApQYDAKwGAACwBgEAtAYAALcGAAC5BgAAuwYDAMAGAADDBggAzQYCANIGAwDXBgAA2QYCAN4GAADgBgAA5QYCAOkGAQDsBgAA7gYBAPEGAADzBgEA9gYAAPgGAQD7BgAA/QYBAAAHAAACBwAABQdAAE4HBABXBwkAYwcEAGkHAwBuBwQAdAcAAHYHBwB/B1oA2wcCAN8HdgBXCAUAXgiEAOQIAADnCE4APgkAAEAJAwBFCQAARwkBAEsJAQBOCQAAZQkAAGcJAABpCRgAhgkoALEJBwC7CSEA4gkBAOgJRQAxCgAAWAoMAGcKAABpCgIAbQoBAHAKAAB1CgcAfgoBAIIKAgCGCgAAiAoEAI4KDQCdCgAAnwoKAKsKAwCwCgsAvQoNAMwKJwD1CggA/woeAB8LGAA5CxEATAsAAFELAABTCwAAVQsAAFoLHwB8CwUAgwsBAIYLAACIC1YA4AsxABMMUABmDAQAbAwBAG8MAgB0DAMAeQwkAKYMAgCqDAkAuAwEAL4MFwDYDAEA2wwEAOEMDQDwDAUA9wwAAPkMFwASDQEAGA0CAB0NAQAhDQkALA0EADINAQA3DQAAOQ0CAD0NCgBJDQAASw0FAFINAABUDQEAWg0EAGANBABmDRAAeA0KAIUNAwCLDQUAkg0TAKcNBACtDQEAsA0AALUNAAC4DQIAvA0EAMYNAwDMDQAAzg0BANENAADfDQAA6Q0EAPINAgD2DQAAAg4LAA8OBQAWDgkAIw4AACYOCwA0DgEANw4AADkOAwA+DgAAQw4LAFAOCQBdDhMAeg4BAH4OAQCBDgAAgw4AAIkOAwCbDgAAog4AAKUOAQCtDgwAwA4BAMcOAADJDgEAzw4DANoOAQDdDgAA5g4CAO4OAADxDgAA+A4AAAIPAQAFDwEACQ8AAAsPBAAXDwQAHw8IACoPCgA2DwAAOw8EAEgPAQBLDwYAXw8GAGkPAgBtDxIAgg8bAKAPCwCtDwEAsQ8FALoPCgDHDwMAzA8JANcPAgDcDxQA8w8NAAIQFgAbEAAAHhACACIQJQBJEAkAVBANAGMQAgBnEAoAcxABAHYQAwB7EAMAgBAJAIsQBwCUEAEAlxAcALUQJgDdEAYA6BAAAOoQAQDvEAIA9BAAAPkQBwAJEQ0AGBEBAB8RAwAkEQEAKBECAC0RAAAvESAAUxEMAGIRBQBpEQcAchEWAIsRDgCbEQ0AqhEAAKwRAACuEQMAtREFAL8RDgDQEQ4A4BEAAOIRAgDnEQgA8RECAPYRBwD/EQ8AEBIDABUSGQAwEg8AQRIBAEQSFwBeEhMAcxIAAHUSBgB+Eh8AoBIDAKUSIADHEgcA0BIBANQSAADZEiQAARMEAAcTCAASEwMAFxMqAEMTAwBIEwIATBMAAE4TAABYEwEAaxMAAG4TBwB8EwAAfxMDAIcTAACJEwYAkhMQALETAAC1EwMAuhMDAL8TAADBEwEAyBMAAN0TAwDkEwQA6xMAAO4TBwD4EwAA+hMBAP8TMQA5FAIAPRQNAEwUAABOFA0AYBQNAHAUBwB5FAAAexQPAIwUAACOFB0ArRQAAK8UCwC8FAAAvhQBAMcUHgDnFAEA6xQXAAQVAAAGFQIAChUAAAwVAAAOFQAAEBUFABcVBAAdFQUAJxUEADMVAAA6FQIAQhULAE8VCwBeFQMAYxUAAGcVAgBrFQMAcRUSAIgVAwCOFQEAkhUBAKAVAwCoFQAAqxUBAK4VIADRFQAA0xUBANsVAADdFQEA4BUAAOIVAADoFQEA6xUDAPMVBQABFgMABhYAAAoWAAAQFgEAFBYBABsWAAAjFgMAKRYAAC0WIQBQFgEAVBYDAFkWAABbFgAAXhYAAGEWAABmFgQAbRYBAHAWAAB0FgIAexYBAH4WAACAFgEAgxYAAIkWAACLFgMAmxYBAJ4WAQCoFgcAtBYEALoWAQC/FgEAxRYDANAWAADVFgMA2hYAAN8WCwDsFgAA7hYAAPAWBAD2FigAIRcBACUXHQBGFwIASxcOAFsXAQBeFwQAZRcDAGsXCAB2FwAAehcBAH4XAQCFFwAAiBcTAJ0XAgCkFw4AtBcEALwXCADGFwcA0hcAANYXAADYFwEA2xcCAN8XAwDkFwkA9hcEAP4XAAAAGAQABxgBAAoYAQAOGAIAExgAABgYAgAdGAQAIxgJAC4YBAA0GAQA"}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNCNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPFPGPFPPFKPGGPPNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNCNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOONHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPFGNNNNNHNNNNNNNNNNNHNNNNNNNNHHNNNNNNNENNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNHNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNHHFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNONNNNNNNNNNNNNNNNNNHNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNHNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSHCHCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","credential_provider","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get_range","get_ranges_sort","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","Aws","AwsCredential","Azure","AzureCredential","BearerToken","CredentialProviderFunction","Function","Gcp","GcpCredential","IntoCredentialProvider","None","ObjectStoreCredential","PlCredentialProvider","Python","SASToken","__clone_box","","bearer","borrow","","","","","","borrow_mut","","","","","","clone","","clone_into","","clone_to_uninit","","deref","","","","","","deref_mut","","","","","","deserialize","drop","","","","","","eq","","","","","equivalent","","","","","","","","","","","","","","","fmt","","","","","from","","","","","","","","from_func","from_python_func","from_python_func_object","hash","","init","","","","","","into","","","","","","into_aws_provider","","","into_azure_provider","","","into_gcp_provider","","","key_id","secret_key","serialize","to_owned","","token","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_credential_provider","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_csv_read_internal","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","compile","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","AllColumns","AllColumnsSingle","Columns","CountLines","NullValuesCompiled","__clone_box","borrow","","borrow_mut","","cast_columns","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","find_next","find_starting_point","fmt","from","","init","","into","","new","prepare_csv_schema","read_chunk","to_owned","try_from","","try_into","","type_id","","validate_utf8","vzip","","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","validate_utf8","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","merge_sorted_to_schema_order","merge_sorted_to_schema_order_impl","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_parallel","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","write_encoded","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","to_bytes","to_file","to_memslice","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","create_sorting_map","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","try_set_sorted_flag","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","ensure_matching_dtypes_if_found","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","spawn_rayon","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","apply_projection","byte_source","columns_to_projection","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::credential_provider"],[372,"polars_io::cloud::options"],[560,"polars_io::csv"],[562,"polars_io::csv::read"],[823,"polars_io::csv::read::_csv_read_internal"],[866,"polars_io::csv::read::buffer"],[941,"polars_io::csv::read::buffer::Buffer"],[944,"polars_io::csv::read::schema_inference"],[971,"polars_io::csv::write"],[1116,"polars_io::file_cache"],[1137,"polars_io::hive"],[1139,"polars_io::ipc"],[1378,"polars_io::json"],[1476,"polars_io::mmap"],[1497,"polars_io::ndjson"],[1499,"polars_io::ndjson::core"],[1602,"polars_io::parquet"],[1605,"polars_io::parquet::metadata"],[1658,"polars_io::parquet::read"],[1804,"polars_io::parquet::read::_internal"],[1826,"polars_io::parquet::write"],[2050,"polars_io::partition"],[2051,"polars_io::path_utils"],[2058,"polars_io::pl_async"],[2081,"polars_io::predicates"],[2149,"polars_io::prelude"],[2160,"polars_io::utils"],[2173,"polars_io::utils::byte_source"],[2254,"polars_io::utils::compression"],[2272,"polars_io::utils::slice"],[2291,"dyn_clone::sealed"],[2292,"polars_io::options"],[2293,"core::result"],[2294,"serde::de"],[2295,"polars_io::shared"],[2296,"polars_core::frame"],[2297,"polars_error"],[2298,"core::fmt"],[2299,"core::hash"],[2300,"std::io"],[2301,"polars_arrow::record_batch"],[2302,"core::option"],[2303,"serde::ser"],[2304,"core::any"],[2305,"polars_io::avro::read"],[2306,"polars_arrow::datatypes::schema"],[2307,"polars_io::avro::write"],[2308,"polars_core::schema"],[2309,"alloc::string"],[2310,"alloc::vec"],[2311,"polars_io::cloud::glob"],[2312,"object_store"],[2313,"alloc::sync"],[2314,"polars_io::cloud::polars_object_store"],[2315,"object_store::path"],[2316,"tokio::fs::file"],[2317,"polars_io::cloud::adaptors"],[2318,"std::io::error"],[2319,"crossterm::command"],[2320,"url"],[2321,"core::ops::range"],[2322,"bytes::bytes"],[2323,"polars_utils::aliases"],[2324,"core::convert"],[2325,"core::cmp"],[2326,"core::ops::function"],[2327,"polars_parquet_format::thrift::varint::decode"],[2328,"object_store::aws::credential"],[2329,"object_store::azure::credential"],[2330,"object_store::gcp::credential"],[2331,"core::future::future"],[2332,"alloc::boxed"],[2333,"core::pin"],[2334,"core::marker"],[2335,"polars_utils::python_function"],[2336,"pyo3::instance"],[2337,"object_store::aws"],[2338,"object_store::azure"],[2339,"object_store::gcp"],[2340,"object_store::aws::builder"],[2341,"object_store::azure::builder"],[2342,"object_store::gcp::builder"],[2343,"core::iter::traits::collect"],[2344,"polars_io::csv::read::reader"],[2345,"polars_io::csv::read::read_impl::batched"],[2346,"polars_io::csv::read::options"],[2347,"std::path"],[2348,"polars_utils::pl_str"],[2349,"std::fs"],[2350,"polars_core::datatypes::dtype"],[2351,"polars_core::datatypes::field"],[2352,"polars_io::csv::read::parser"],[2353,"polars_core::series"],[2354,"polars_io::csv::write::writer"],[2355,"polars_io::csv::write::options"],[2356,"core::num::nonzero"],[2357,"polars_io::file_cache::entry"],[2358,"core::iter::traits::iterator"],[2359,"polars_schema::schema"],[2360,"polars_core::frame::column"],[2361,"polars_io::ipc::ipc_stream"],[2362,"polars_io::ipc::write"],[2363,"polars_io::ipc::ipc_file"],[2364,"polars_io::ipc::ipc_reader_async"],[2365,"polars_arrow::io::ipc::read::file"],[2366,"polars_arrow::io::ipc::write::common"],[2367,"polars_utils::mmap::private"],[2368,"polars_arrow::array::struct_"],[2369,"polars_arrow::array"],[2370,"polars_arrow::datatypes"],[2371,"polars_arrow::datatypes::field"],[2372,"polars_arrow::array::growable::structure"],[2373,"polars_arrow::bitmap::immutable"],[2374,"polars_arrow::scalar"],[2375,"polars_arrow::array::struct_::iterator"],[2376,"polars_arrow::bitmap::utils::iterator"],[2377,"polars_arrow::bitmap::utils::zip_validity"],[2378,"polars_parquet::parquet::metadata::file_metadata"],[2379,"polars_parquet::parquet::metadata::column_order"],[2380,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2381,"core::iter::traits::exact_size"],[2382,"polars_parquet::arrow::read::statistics"],[2383,"polars_parquet_format::parquet_format"],[2384,"polars_parquet::parquet::metadata::schema_descriptor"],[2385,"polars_parquet::parquet::error"],[2386,"polars_io::parquet::read::reader"],[2387,"polars_io::parquet::read::read_impl"],[2388,"polars_io::parquet::read::options"],[2389,"polars_parquet::parquet::metadata::row_metadata"],[2390,"polars_core::series::series_trait"],[2391,"polars_parquet::arrow::read::deserialize::utils::filter"],[2392,"polars_io::parquet::write::writer"],[2393,"polars_io::parquet::write::batched_writer"],[2394,"polars_parquet::arrow::write"],[2395,"polars_io::parquet::write::options"],[2396,"polars_parquet::parquet::write"],[2397,"polars_parquet::arrow::write::file"],[2398,"std::sync::mutex"],[2399,"tokio::runtime::task::join"],[2400,"avro_schema::file"],[2401,"polars_io::cloud::object_store_setup"],[2402,"polars_io::csv::read::read_impl"],[2403,"polars_io::file_cache::cache"],[2404,"polars_io::file_cache::utils"],[2405,"polars_io::parquet::read::utils"],[2406,"polars_io::parquet::read::predicates"],[2407,"polars_io::parquet::read::mmap"],[2408,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEhDj21020`222`010210221102010102102022`21021021021``0101210210210210211HfAJf`0`1`H`1``1``020HbHh3Hd3251403251323232403251403251340325103251000333222555111032514000325133332403251403251In43043043114431514362514362514362514362JhJf1`Jj2Jl0`21223133``2232223223300`00223332232112323233322Dh42342301423014200003042304230420301423014230423014230142333000444222030423014231420304230142301420304230423014230142301423014200000``Lj0``````LfLh2``01LbLd324`Kf00L`Kn24365710243657`4436574365743657437``34361024365710243657436571024365743343657444333666555777424365710243655744436574`41024365710243657444344255510344434444`4343657444365731024365710243657431024365741024365744334334444344344434444434433Ll00``0Ml101`11100101010`10101010``1010101`01Mn`0`00`0000000000000`00AJhAJjAJl32103210321032103321032103`21033210321032103`2103AJn00`Mf000000000`0000``000000000Nn```000``NjNl21Nf0Nh324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```Od00000`0`000000000`````````````A@j0A@dA@fA@h3OnA@`AAdA@l3AAfAAb4A@b987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:743462154697:46987:74362150987:4362150987:4362150987:4362150987:462521514446584684688070`ABf`0```AAn1AB`ABdABb342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001Nd`0`0000000000Kj011111````ABl00000000ACd1011111100101011111010110110010111110011111111111111111111111111010110111110100000000000111``````ADfADj1011111110101`0010010010101111000111110110101101AFb`00````00AF`1`AEjAEnAEl213402134343434`402134021343402134343334442103402134121340213402134003`020213210213342221340213402134`0213421302134212212121212121AFl00`00`000`0000`0`0000`AGh`0`00````0`00`AGdAGf2AGjAGlAGnAG`AGb16574320165743265743265743265743255657016574320165743265743260165743260657432666555777444333222016574320165743260657432016574320165743266566165657432156574325016574320165743243201657432016574321111050``````````AHj0000000`00AHl11111`11`````AIbAId`Kh21212121211212121212022121222221212102121121AI`233332323232322```AfAl10111```````````````AIj``0`AIh0`0AIlAIn321032222310321032103221033332AJ`21402140214214321433321432143214342143AJb`00000000000`0000AJd00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}`{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hEf}}}{{Aj{f}}}}{{{b{hEh}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{hEh}}}{{En{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{F`}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}{Fb{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{ce}}}}}{{Fn{n}{{Fj{{`{Fl}}}}}}G`Gb}{{Gd{Fd}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Gf}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Eh}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Eh}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}Ej}}}El{}}`{{{b{h}}g}{{A`{eEj}}}{}{}{{Gj{{b{hc}}}{{Gh{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEh}}{b{{Ff{Gl}}}}}{{En{n}}}}{{{b{h}}c}{{A`{nEj}}}Gn}````````````````{{bd}f}0`{b{{b{c}}}{}}00000{{{b{h}}}{{b{hc}}}{}}00000{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{b{b{hc}}}f{}}0{bf}0{n{{b{c}}}{}}00000{n{{b{hc}}}{}}00000{c{{A`{H`}}}Ab}{nf}00000{{{b{Hd}}{b{Hd}}}Ad}{{{b{H`}}{b{H`}}}Ad}{{{b{Hb}}{b{Hb}}}Ad}{{{b{Hf}}{b{Hf}}}Ad}{{{b{Hh}}{b{Hh}}}Ad}{{b{b{c}}}Ad{}}00000000000000{{{b{Hd}}{b{hAn}}}{{A`{fCn}}}}{{{b{H`}}{b{hAn}}}B`}{{{b{Hb}}{b{hAn}}}B`}{{{b{Hf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Hh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{HjHd}1{HlHd}2222{cH`{{Id{}{{Gh{{Ib{{I`{Hn}}}}}}}}IfIh}}{IjH`}{IlH`}{{{b{H`}}{b{hc}}}fBb}{{{b{Hb}}{b{hc}}}fBb}{{}n}00000{{}c{}}00000{InJ`}{H`J`}{HbJ`}{InJb}{H`Jb}{HbJb}{InJd}{H`Jd}{HbJd}``{{{b{H`}}c}A`Bn}{bc{}}0`{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{bC`}00000>>>>>>```````````````````````````````````````````````````````{{bd}f}000{{{b{Jf}}}{{b{Df}}}}{{{b{Jh}}}{{b{Df}}}}{{{b{Jj}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Jf}}}Jf}{{{b{Dh}}}Dh}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Jf}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Jh}}}Ab}{c{{A`{Jj}}}Ab}{nf}0000{{{b{Jf}}{b{Jf}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Jl}}{b{Jl}}}Ad}{{{b{Jh}}{b{Jh}}}Ad}{{{b{Jj}}{b{Jj}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Jf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Jh}}{b{hAn}}}{{A`{fCn}}}}{{{b{Jj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Jf}}}}{{{b{Df}}}{{A`{Jlc}}}{}}{{{b{Df}}}{{A`{Jh}}}}{{{b{Df}}}{{A`{Jj}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Jn{Df}}}{{K`{Db}}}{{Kd{}{{Kb{{E`{ce}}}}}}}}{{{b{Jf}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Jh}}{b{hc}}}fBb}{{{b{Jj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Jf}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Jh}}c}A`Bn}{{{b{Jj}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jfc}}}}}}}}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jhc}}}}}}}}{{Dh{Bl{H`}}}Dh}{{Dhe}Dh{{K`{Db}}}{{Kd{}{{Kb{{E`{Jjc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000`{{{Kf{c}}{Bl{{Dn{Kh}}}}}{{Kf{c}}}Kj}{{{Kf{{I`{Kj}}}}{Bl{Kl}}}{{Aj{Kn}}}}{{{b{h{Kf{c}}}}}{{Aj{L`}}}Kj}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{b{b{hc}}}f{}}0000{bf}0000``{{Lj{b{D`}}}{{Aj{Ll}}}}{{{b{Ln}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}{{{b{{Ff{Gl}}}}Gl{Bl{Gl}}{Bl{{b{Lh}}}}GlAd}{{Aj{n}}}}`{{}Lb}{{}Ld}{{}Lf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Lb}}}Ab}{c{{A`{Ld}}}Ab}{c{{A`{Lf}}}Ab}{c{{A`{Lh}}}Ab}{c{{A`{Lj}}}Ab}{nf}0000000```{{{b{Lb}}{b{Lb}}}Ad}{{{b{Ld}}{b{Ld}}}Ad}{{{b{Lf}}{b{Lf}}}Ad}{{{b{Lh}}{b{Lh}}}Ad}{{{b{Lj}}{b{Lj}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Kf{c}}}{{Aj{Ah}}}Kj}{{{b{Lb}}{b{hAn}}}B`}{{{b{Ld}}{b{hAn}}}B`}{{{b{Lf}}{b{hAn}}}B`}{{{b{Lh}}{b{hAn}}}B`}{{{b{Lj}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Lh}1{{{b{Lb}}}{{Dn{Ld}}}}`{{{b{Lb}}{b{hc}}}fBb}{{{b{Ld}}{b{hc}}}fBb}{{{b{Lf}}{b{hc}}}fBb}{{{b{Lh}}{b{hc}}}fBb}{{{b{Lj}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Lbc}{{Kf{c}}}Kj}`{{Lbc}Lb{{Id{Ld}{{Gh{Ld}}}}}}```{c{{Kf{c}}}Kj};{M`Lh}{GlLh}{{{b{hL`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hKn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}````````````{{{b{Lb}}c}A`Bn}{{{b{Ld}}c}A`Bn}{{{b{Lf}}c}A`Bn}{{{b{Lh}}c}A`Bn}{{{b{Lj}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Lb{Bl{Mb}}}{{Aj{{Kf{Md}}}}}}`{bC`}0000000{{{b{hLb}}{b{Mf}}}f}{{}c{}}0000000{{Lbn}Lb}{{Lb{Bl{{Dn{{Ff{M`}}}}}}}Lb}{{Ld{Bl{c}}}Ld{{K`{Lh}}}}{{LdAd}Ld}{{Lb{Bl{{Dn{{Dd{Mh}}}}}}}Lb}{{LdLf}Ld}{{LdGl}Ld}{{LbAd}Lb}0{{Lb{Bl{n}}}Lb}1500{{Ld{Bl{Lj}}}Ld}{{LbLd}Lb}{{Lb{Bl{c}}}Lb{{K`{Mb}}}}{{Lb{Bl{{Dn{{Dd{n}}}}}}}Lb}{{Ld{Bl{Gl}}}Ld}66{{Lb{Bl{j}}}Lb}{{Lb{Bl{Kl}}}Lb}09??<<`````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{hAh}}{b{{Ff{Mj}}}}AdAd}{{Aj{f}}}}{{{b{Ll}}}Ll}{{b{b{hc}}}f{}}{bf}{{{b{Ml}}{b{{Ff{Gl}}}}}{{E`{nn}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ml}}{b{{Ff{Gl}}}}{b{hn}}}{{E`{nn}}}}{{{b{{Ff{Gl}}}}{Bl{Gl}}Glnnn{Bl{{b{Lh}}}}Ad}{{Aj{n}}}}{{{b{Ll}}{b{hAn}}}B`}{cc{}}0{{}n}0{{}c{}}0{{{Bl{Gl}}Gl}Ml}{{{b{hKl}}{b{h{Dd{Mj}}}}}{{Aj{Ad}}}}{{{b{{Ff{Gl}}}}Gl{b{D`}}Ad{b{{Ff{n}}}}n{Bl{Gl}}Gl{Bl{{b{Lh}}}}nLf{Bl{{b{Ll}}}}AdAdnn{Bl{n}}Ad}{{Aj{Ah}}}}{bc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0`77`````````````````````{{{b{hMn}}{b{{Ff{Gl}}}}AdAdAd}{{Aj{f}}}}{{{b{hMn}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Mn}}}Mh}{cc{}}000{{}n}000{{{b{{Ff{n}}}}n{b{D`}}{Bl{Gl}}LfAd}{{Aj{{Dd{Mn}}}}}}{{}c{}}000{Mn{{Aj{N`}}}}????>>>>===={{{b{{Ff{Gl}}}}}Ad}2222````{{bd}f}<;{{{b{Mf}}}Mf}{{b{b{hc}}}f{}}{bf}{{}Mf}>=<{{{b{{Nb{Mh}}}}}Mh}{{{b{Mf}}{b{hAn}}}B`}<{{{b{Mf}}}n}{{{b{Mf}}}Kl}{{{b{Df}}AdAd}Mh}{{{b{Nd}}Gl{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Lh}}}}{Bl{Gl}}Gl{Bl{{b{Lj}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}?={bc{}}{c{{A`{e}}}{}{}}{{{b{Nd}}{b{Lb}}}{{Aj{Mf}}}}{{}{{A`{c}}}{}}{bC`}{{}c{}}{{MfKl}Mf}`````````{{bd}f}00`{{{Nf{c}}{b{D`}}}{{Aj{{Nh{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nj}}}Nj}{{{b{Nl}}}Nl}{{{b{Nn}}}Nn}{{b{b{hc}}}f{}}00{bf}00``{{}Nj}{{}Nl}{{}Nn}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nj}}}Ab}{c{{A`{Nl}}}Ab}{c{{A`{Nn}}}Ab}{nf}0000{{{b{Nj}}{b{Nj}}}Ad}{{{b{Nl}}{b{Nl}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Nh{c}}}}}{{Aj{f}}}Bf}``{{{b{Nj}}{b{hAn}}}B`}{{{b{Nl}}{b{hAn}}}B`}{{{b{Nn}}{b{hAn}}}B`}{cc{}}0000{{{b{Nj}}{b{hc}}}fBb}{{{b{Nl}}{b{hc}}}fBb}{{{b{Nn}}{b{hc}}}fBb}{{{Nf{c}}Ad}{{Nf{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Nf{c}}n}{{Nf{c}}}Bf}{c{{Nf{c}}}Bf}````{{{b{Nj}}c}A`Bn}{{{b{Nl}}c}A`Bn}{{{b{Nn}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Nf{c}}O`}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Db}}}{{Nf{c}}}Bf}0{{{Nf{c}}{Bl{n}}}{{Nf{c}}}Bf}{{{Nf{c}}{Bl{Ad}}}{{Nf{c}}}Bf}{{{Nf{c}}Db}{{Nf{c}}}Bf}0{{{Nf{c}}Gl}{{Nf{c}}}Bf}{{{Nf{c}}Nn}{{Nf{c}}}Bf}15{{{b{h{Nh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Ob}{{}n}{{{b{{Ff{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Od}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{Od}}}{{Aj{Md}}}}0{bC`}{{{b{Od}}Ob}f}{{{b{Od}}}{{b{{Dn{Df}}}}}}6{{{b{hOf}}{b{hOf}}{b{{Oh{c}}}}{b{h{Dd{Oj}}}}}f{}}{{{b{hOf}}{b{hOf}}{b{he}}{b{Id}}}f{}{{Ol{c}}}}`````````````{{bd}f}000{{{b{h{On{c}}}}}{{Aj{Cf}}}Bd}{{{A@`{c}}{b{D`}}}{{Aj{{A@b{c}}}}}Bf}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{A@d}}}A@d}{{{b{A@f}}}A@f}{{{b{A@h}}}A@h}{{{b{A@j}}}A@j}{{b{b{hc}}}f{}}000{bf}000`{{{b{A@l}}{Bl{{b{A@n}}}}}{{Aj{AA`}}}}{{{b{A@l}}{Bl{{b{A@n}}}}A@fAd}{{Aj{Ah}}}}{{}AAb}{{}A@f}{{}A@h}{{}A@j}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{A@d}}}Ab}{c{{A`{A@h}}}Ab}{c{{A`{A@j}}}Ab}{nf}0000000000{{{b{A@d}}{b{A@d}}}Ad}{{{b{A@h}}{b{A@h}}}Ad}{{{b{A@j}}{b{A@j}}}Ad}{{b{b{c}}}Ad{}}00000{{{AAd{c}}}{{Aj{Ah}}}Kj}{{{On{c}}}{{Aj{Ah}}}Bd}{{{b{h{AAf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{A@`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{A@b{c}}}}}{{Aj{f}}}Bf}{{{AAd{c}}{Bl{{Dn{Kh}}}}Ad}{{Aj{Ah}}}Kj}{{{b{A@d}}{b{hAn}}}B`}{{{b{A@h}}{b{hAn}}}B`}{{{b{A@j}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{A@l}}}}{{{b{A@d}}{b{hc}}}fBb}{{{b{A@h}}{b{hc}}}fBb}{{{b{A@j}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{AAd{c}}{Bl{Mb}}}{{AAd{c}}}Kj}{{{b{A@l}}}{{Aj{A@n}}}}{c{{AAd{c}}}Kj}{c{{On{c}}}Bd}{c{{AAf{c}}}Bf}{{}AAb}{c{{A@`{c}}}Bf}{{{b{h{AAd{c}}}}}{{Aj{AAh}}}Kj}{{{b{h{On{c}}}}}{{Aj{D`}}}Bd}{{{b{A@d}}c}A`Bn}{{{b{A@h}}c}A`Bn}{{{b{A@j}}c}A`Bn}{{{AAd{c}}Ad}{{AAd{c}}}Kj}{{{On{c}}Ad}{{On{c}}}Bd}{bc{}}000{{{b{A@h}}c}{{A@`{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{AAd{c}}{Bl{{Dd{Db}}}}}{{AAd{c}}}Kj}{{{On{c}}{Bl{{Dd{Db}}}}}{{On{c}}}Bd}{{{AAf{c}}AAj}{{AAf{c}}}{}}{{{A@`{c}}AAj}{{A@`{c}}}Bf}{{{AAf{c}}{Bl{A@j}}}{{AAf{c}}}{}}{{AAb{Bl{A@j}}}AAb}{{{A@`{c}}{Bl{A@j}}}{{A@`{c}}}Bf}{{AAbMb}AAb}{{{AAd{c}}{Bl{{Dd{N`}}}}}{{AAd{c}}}Kj}{{{AAd{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{AAd{c}}}Kj}{{{AAd{c}}{Bl{n}}}{{AAd{c}}}Kj}{{{On{c}}{Bl{n}}}{{On{c}}}Bd}{{{A@`{c}}Ad}{{A@`{c}}}Bf}{{A@fc}A@f{{K`{{Bl{{Dn{Kh}}}}}}}}{{{AAd{c}}{Bl{{Dd{n}}}}}{{AAd{c}}}Kj}{{{On{c}}{Bl{{Dd{n}}}}}{{On{c}}}Bd}{{A@f{Bl{{Dn{{Ff{M`}}}}}}}A@f}{{{AAd{c}}{Bl{j}}}{{AAd{c}}}Kj}{{{On{c}}{Bl{j}}}{{On{c}}}Bd}{{A@fc}A@f{{K`{{Bl{j}}}}}}{{A@fc}A@f{{K`{{Bl{n}}}}}}{{{b{h{A@b{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{A@h}}Ahc}{{Aj{f}}}Bf}{{{b{h{A@b{c}}}}{b{{Ff{AAl}}}}{b{AAl}}}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AAn}}}AAn}{{b{b{hc}}}f{}}{bf}{{}AAn}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AAn}}}Ab}{nf}0000{{{b{AAn}}{b{AAn}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{AB`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{ABb{c}}}{{Aj{Ah}}}Kj}{{{b{AAn}}{b{hAn}}}B`}{cc{}}0000{{{b{AAn}}{b{hc}}}fBb}{{{ABb{c}}{Bl{O`}}}{{ABb{c}}}Kj}{{}n}0000{{}c{}}0000`{c{{AB`{c}}}Bf}{c{{ABd{c}}}Bf}{c{{ABb{c}}}Kj}{{{b{{Ff{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}}{{{b{AAn}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Kj}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{ABb{c}}O`}{{ABb{c}}}Kj}5{{{AB`{c}}ABf}{{AB`{c}}}Bf}{{{ABb{c}}ABf}{{ABb{c}}}Kj}{{{ABb{c}}{Bl{{Dd{M`}}}}}{{ABb{c}}}Kj}{{{ABb{c}}Kl}{{ABb{c}}}Kj}{{{ABb{c}}{b{D`}}}{{ABb{c}}}Kj}{{{b{h{ABd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{Nd}}}{{b{{Ff{Gl}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}NdKj}{{}n}{{}c{}}{{{b{Kj}}}{{Bl{{b{{Ff{Gl}}}}}}}}{{{b{Kj}}}{{Bl{{b{Md}}}}}}{{{b{Nd}}}ABh}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{O`}}}{{Aj{D`}}}ABj}``{{bd}f}{{{b{ABl}}n}{{E`{ABlABl}}}}{ABl{{Dn{ABn}}}}{cABl{{Kd{}{{Kb{f}}}}}}{cABl{{Kd{}{{Kb{{Bl{f}}}}}}}}{{AC`c}ABl{{Kd{}{{Kb{f}}}}}}{{AC`c}ABl{{Kd{}{{Kb{{Bl{f}}}}}}}}{{{b{ABl}}}{{b{ACb}}}}{{{b{hABl}}}{{b{hACb}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{ABl{{I`{ABn}}}}{{{b{ABl}}n}Ad}{{{b{ABl}}}ABl}{{b{b{hc}}}f{}}{bf}{{{ACd{c}}}{{Aj{n}}}Kj}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{ABl}}}{{b{AC`}}}}{{{b{ABl}}{b{{b{ABn}}}}}Ad}{{{b{ABl}}{b{ABl}}}Ad}{{{b{ABl}}}{{b{{Ff{ACf}}}}}}{{{ACd{c}}}{{Aj{Ah}}}Kj}{{{b{ABl}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AChABl}1{c{{Aj{{ACd{Md}}}}}{{K`{Mb}}}}{{nAC`}ABl}{{{b{AC`}}}{{b{{Ff{ACf}}}}}}{{{ACd{c}}{Bl{O`}}}{{ACd{c}}}Kj}{{}n}0{{}c{}}0{ABl{{E`{{Dd{ACf}}n{Dd{{I`{ABn}}}}{Bl{ACj}}}}}}{{{b{ABl}}}}{{{b{ABl}}}{{ADb{{Dd{{I`{ACl}}}}ACnAD`}}}}{{{b{ABl}}}n}{{{ACd{c}}Ad}{{ACd{c}}}Kj}{c{{ACd{c}}}Kj}{{AC`n{Dd{{I`{ABn}}}}{Bl{ACj}}}ABl}{AC`ABl}{{AC`n}ABl}{{{b{ABl}}}ABl}{{{b{hABl}}{Bl{ACj}}}f}{{{b{hABl}}nn}f}0{{bnn}c{}}011{{ABlnn}ABl}0{{{b{ABl}}n}{{E`{{I`{ABn}}{I`{ABn}}}}}}0{{{b{hABl}}}{{Bl{ACj}}}}{{{b{ABl}}}{{I`{ABn}}}}{bc{}}{{{b{ABl}}{b{ABl}}}ACj}{{{b{ABl}}b}ACj}10{e{{A`{ABlc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{e{{A`{ABlc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{{AC`e}{{A`{ABlc}}}{}{{Kd{}{{Kb{{A`{fc}}}}}}}}{{AC`e}{{A`{ABlc}}}{}{{Kd{}{{Kb{{A`{{Bl{f}}c}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{AC`n{Dd{{I`{ABn}}}}{Bl{ACj}}}{{A`{ABlADd}}}}{bC`}0{{{b{ABl}}}{{Bl{{b{ACj}}}}}}0{{{b{ABl}}}{{b{{Ff{{I`{ABn}}}}}}}}{{{b{ABl}}}ACn}{{}c{}}0{{{ACd{c}}{Bl{O`}}}{{ACd{c}}}Kj}{{{ACd{c}}Ad}{{ACd{c}}}Kj}{{{ACd{c}}{Bl{n}}}{{ACd{c}}}Kj}0{{{ACd{c}}{Bl{e}}}{{ACd{c}}}Kj{{K`{Mb}}}}{{{ACd{c}}{Bl{{Dn{Kh}}}}}{{ACd{c}}}Kj}{{{ACd{c}}{Bl{{Dn{{Ff{M`}}}}}}}{{ACd{c}}}Kj}4{{{ACd{c}}{Bl{{b{hj}}}}}{{ACd{c}}}Kj}{{{ACd{c}}Kl}{{ACd{c}}}Kj}{{{ACd{c}}{b{D`}}}{{ACd{c}}}Kj}{{{b{ABl}}{Bl{ACj}}}{{I`{ABn}}}}{{ABl{Bl{ACj}}}ABl}0``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{ADf}}}ADf}{{b{b{hc}}}f{}}{bf}{{{b{ADf}}n}ADh}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{ACf}}c}{{A`{ADjADd}}}{{ADn{}{{Kb{{b{ADl}}}}}}}}`{nf}0{{{b{ADj}}{b{ADj}}}Ad}{{{b{ADj}}{b{hAn}}}{{A`{fCn}}}}{{{b{ADf}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AE`ADj}1{{}n}0{{}c{}}0{{{b{ADf}}}{{b{{Bl{{Dd{AEb}}}}}}}}```````{{{b{ADf}}}{{b{AEd}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AEf{{A`{ADfAEh}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{AEj{c}}n}{{Aj{AEl}}}Kj}{{AEnn}{{Aj{AEl}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{b{b{hc}}}f{}}0{bf}0{{{b{AFd}}}{{Fh{nAFf}}}}{{}AFb}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{AF`}}}Ab}{c{{A`{AFb}}}Ab}{nf}0000{{{b{AF`}}{b{AF`}}}Ad}{{{b{AFb}}{b{AFb}}}Ad}{{b{b{c}}}Ad{}}00000{{{AEj{c}}}{{Aj{Ah}}}Kj}{AEn{{Aj{Ah}}}}{{{b{AEl}}n}Ad}{{{b{AF`}}{b{hAn}}}B`}{{{b{AFb}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{AFh}}}{{Aj{AEn}}}}{{{b{h{AEj{c}}}}}{{Aj{{b{AFh}}}}}Kj}{{{b{hAEn}}}{{Aj{{b{AFh}}}}}}{{{b{AF`}}{b{hc}}}fBb}{{{b{AFb}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{AEl}}}Ad}``{{{Bl{{b{{Ff{n}}}}}}{b{Cf}}{Bl{{b{{Ff{N`}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AEj{c}}}Kj}{{{b{hAEl}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AEj{c}}}}}{{Aj{n}}}Kj}{{{b{hAEn}}}{{Aj{n}}}}`{{{AEj{c}}AFb}{{AEj{c}}}Kj}{{AEnAFb}AEn}{{{b{AEl}}}{{b{AAh}}}}{{{b{h{AEj{c}}}}}{{Aj{AAh}}}Kj}{{{b{hAEn}}}{{Aj{AAh}}}}`{{{b{AF`}}c}A`Bn}{{{b{AFb}}c}A`Bn}{{{AEj{c}}Ad}{{AEj{c}}}Kj}{{{b{h{AEj{c}}}}AFh}fKj}1{{AEnAd}AEn}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{{{b{hN`}}n{b{{Fh{nAFf}}}}}f}{bC`}000075`{{}c{}}0000{{{AEj{c}}{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{{AEj{c}}}}}Kj}{{AEn{b{{Dn{Cf}}}}{Bl{{b{Cf}}}}Ad}{{Aj{AEn}}}}{{{AEj{c}}{Bl{{Dd{Db}}}}}{{AEj{c}}}Kj}{{{AEj{c}}{Bl{{Dd{N`}}}}}{{AEj{c}}}Kj}{{AEn{Bl{{Dd{N`}}}}}AEn}{{{AEj{c}}{Bl{{E`{M`{Dn{Df}}}}}}}{{AEj{c}}}Kj}{{AEn{Bl{{E`{M`{Dn{Df}}}}}}}AEn}{{{AEj{c}}{Bl{{Dn{Kh}}}}}{{AEj{c}}}Kj}{{AEn{Bl{{Dn{Kh}}}}}AEn}{{{AEj{c}}{Bl{{Dd{n}}}}}{{AEj{c}}}Kj}{{AEn{Bl{{Dd{n}}}}}AEn}{{{AEj{c}}{Bl{j}}}{{AEj{c}}}Kj}{{AEn{Bl{j}}}AEn}{{{AEj{c}}{Bl{{E`{nn}}}}}{{AEj{c}}}Kj}{{AEn{Bl{{E`{nn}}}}}AEn}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{ACj}}}AFj}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{Cf}}{b{Cf}}}{{Aj{f}}}}{cc{}}{{}n}{{}AFl}{{}c{}}{{{Bl{{b{Kh}}}}{b{AFd}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AFl}}AFj{b{AC`}}}Ad}{{{Dd{{E`{{b{ADl}}ABh}}}}ACf{Bl{AFn}}}{{Aj{{I`{ABn}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{AG`{c}}{b{D`}}}{{Aj{{AGb{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AGj}}}AGj}{{{b{AGl}}}AGl}{{{b{AGn}}}AGn}{{b{b{hc}}}f{}}00000{bf}00000``{{}AGd}{{}AGf}{{}AGh}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{AGd}}}Ab}{c{{A`{AGf}}}Ab}{c{{A`{AGh}}}Ab}{c{{A`{AGj}}}Ab}{c{{A`{AGl}}}Ab}{c{{A`{AGn}}}Ab}`{nf}0000000;{{{b{{AGb{c}}}}{b{Ah}}}{{`{{Of{}{{Kb{{Aj{{AH`{ADd}}}}}}}}}}}Bf}{{{b{AGd}}{b{AGd}}}Ad}{{{b{AGf}}{b{AGf}}}Ad}{{{b{AGh}}{b{AGh}}}Ad}{{{b{AGj}}{b{AGj}}}Ad}{{{b{AGl}}{b{AGl}}}Ad}{{{b{AGn}}{b{AGn}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{AGb{c}}}}}{{Aj{Ob}}}Bf}{{{AG`{c}}{b{hAh}}}{{Aj{Ob}}}Bf}{{{b{AGd}}{b{hAn}}}{{A`{fCn}}}}{{{b{AGf}}{b{hAn}}}B`}{{{b{AGh}}{b{hAn}}}B`}{{{b{AGj}}{b{hAn}}}B`}{{{b{AGl}}{b{hAn}}}B`}{{{b{AGn}}{b{hAn}}}B`}{cc{}}0000000{{}AGd}{{{b{{AGb{c}}}}}{{b{{AHd{{AHb{c}}}}}}}Bf}{{{b{AGd}}{b{hc}}}fBb}{{{b{AGf}}{b{hc}}}fBb}{{{b{AGh}}{b{hc}}}fBb}{{{b{AGj}}{b{hc}}}fBb}{{{b{AGl}}{b{hc}}}fBb}{{{b{AGn}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{AGd}}}Ad}0```{c{{AG`{c}}}{BfBf}}``{{{b{AGd}}c}A`Bn}{{{b{AGf}}c}A`Bn}{{{b{AGh}}c}A`Bn}{{{b{AGj}}c}A`Bn}{{{b{AGl}}c}A`Bn}{{{b{AGn}}c}A`Bn}{{{AG`{c}}Ad}{{AG`{c}}}Bf}`{bc{}}00000{{{b{AGf}}c}{{AG`{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{Gl{{Aj{AGj}}}}{AHf{{Aj{AGl}}}}{AHh{{Aj{AGn}}}}{bC`}0000000{{}c{}}0000000{{{AG`{c}}AGh}{{AG`{c}}}Bf}{{{AG`{c}}{Bl{n}}}{{AG`{c}}}Bf}0{{{AG`{c}}AGd}{{AG`{c}}}Bf}{{{b{h{AGb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{AGf}}Ahc}{{Aj{f}}}Bf}{{{b{{AGb{c}}}}{Dd{{AH`{ADd}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Ln}}e{b{g}}n}{{Aj{f}}}{{K`{M`}}}{{Kd{}{{Kb{c}}}}}{CbIfIh}}`{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Ff{Mb}}}}}}}}{{{b{{Ff{Mb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Ff{Mb}}}}n}}}}}}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}Ad{{Jn{Ln}}}}{{{b{{Ff{Gl}}}}}{{Bl{n}}}}{cAd{{Jn{Ln}}}}{{{b{Ln}}}Mb}``{{{b{AHj}}c}{}Hn}{{{b{AHj}}c}{}{HnIf}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AHj}}}}{{}n}{{}c{}}{{{b{AHl}}}Ob}{{{b{AHj}}c}AHn{HnIf}}{{{b{AHj}}e}{{AHn{c}}}If{{Gj{}{{Gh{c}}}}If}}{{{b{AHj}}e}c{IfIh}{{Gj{}{{Gh{c}}}}IfIh}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{AHfe}{}Hn{{Gj{}{{Gh{c}}}}}}{bC`}81````{{bd}f}0{{{b{hAh}}{Bl{{b{Kh}}}}Ad}{{Aj{f}}}}{{{b{Kh}}}{{Bl{{b{AI`}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AIb}}}AIb}{{{b{AId}}}AId}{{b{b{hc}}}f{}}0{bf}0{{{b{AId}}}{{b{{Ff{AIb}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AIb}}}Ab}{c{{A`{AId}}}Ab}{nf}0{{{b{AIb}}}{{b{Mh}}}}{{{b{Kh}}{b{Ah}}}{{Aj{N`}}}}{{{b{AIb}}}{{b{M`}}}}{{{b{AIb}}{b{hAn}}}B`}{{{b{AId}}{b{hAn}}}B`}{cc{}}0{N`AIb}{MjAIb}{{{b{AIb}}}{{Bl{{b{N`}}}}}}00{{{b{AId}}{b{Df}}}{{Aj{{b{AIb}}}}}}{{}n}0{{}c{}}0{{{b{Kh}}}{{Bl{{Dd{M`}}}}}}{{Mj{Bl{N`}}{Bl{N`}}{Bl{N`}}}AIb}{{Kl{Dd{AIb}}{Bl{n}}}AId}{{{b{AIb}}}{{Bl{n}}}}{{{b{AId}}}{{Bl{n}}}}{{{b{AId}}}{{b{Kl}}}}{{{b{AIb}}c}A`Bn}{{{b{AId}}c}A`Bn}{{{b{AI`}}{b{AId}}}{{Aj{Ad}}}}{{{b{hAId}}{b{{Ff{n}}}}}f}=={{{b{AIb}}}{{Bl{N`}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAId}}Kl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00``````{{{b{Cf}}{b{{Ff{n}}}}}Cf}`{{{b{{Ff{c}}}}{b{Cf}}}{{Aj{{Dd{n}}}}}{{Jn{Df}}}}`{{{b{hc}}}{{Aj{Nd}}}{BdKjAIf}}{{{Bl{{b{{Ff{M`}}}}}}{b{D`}}{Bl{{b{{Ff{N`}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AIh}}}AIh}{{b{b{hc}}}f{}}{bf}{{}AIj}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AIh}}{b{hAn}}}B`}{cc{}}0{AIlAIj}{ABhAIj}2{AInAIj}3{{{b{AJ`}}{Fb{n}}}{{Aj{ABh}}}}{{{b{AIl}}{Fb{n}}}{{Aj{ABh}}}}{{{b{AIn}}{Fb{n}}}{{Aj{ABh}}}}{{{b{AIj}}{Fb{n}}}{{Aj{ABh}}}}{{{b{AJ`}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABh}}}}}}{{{b{AIl}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABh}}}}}}{{{b{AIn}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABh}}}}}}{{{b{AIj}}{b{h{Ff{{Fb{n}}}}}}}{{Aj{{Fh{nABh}}}}}}{{{b{AJ`}}}{{Aj{n}}}}{{{b{AIl}}}{{Aj{n}}}}{{{b{AIn}}}{{Aj{n}}}}{{{b{AIj}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AIh}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AIj}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AIj}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Ff{Gl}}}}}{{Bl{AJb}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Ff{Gl}}}}{b{h{Dd{Gl}}}}}{{Aj{{b{{Ff{Gl}}}}}}}};:9>````76432{{{b{AJd}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Fb{n}}}AJd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"DDl","p":[[1,"reference"],[5,"Private",2291],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2292],[5,"HiveOptions",0,2292],[1,"usize"],[6,"Result",2293],[10,"Deserializer",2294],[1,"bool"],[10,"SerReader",2149,2295],[5,"DataFrame",2296],[8,"PolarsResult",2297],[10,"SerWriter",2149,2295],[5,"Formatter",2298],[8,"Result",2298],[10,"Hasher",2299],[10,"Read",2300],[10,"Write",2300],[10,"ArrowReader",0,2295],[8,"RecordBatch",2301],[6,"Option",2302],[10,"Serializer",2303],[5,"TypeId",2304],[10,"WriteDataFrameToFile",0,2295],[5,"AvroReader",86,2305],[8,"ArrowSchema",2306],[10,"Seek",2300],[6,"AvroCompression",86],[5,"AvroWriter",86,2307],[5,"Error",2298],[8,"Schema",2308],[5,"String",2309],[5,"Vec",2310],[1,"str"],[5,"CloudOptions",372],[5,"CloudLocation",153,2311],[10,"ObjectStore",2312],[5,"Arc",2313],[1,"tuple"],[5,"PolarsObjectStore",153,2314],[5,"Path",2315],[5,"File",2316],[5,"CloudWriter",153,2317],[5,"Error",2318],[10,"Command",2319],[8,"Result",2318],[5,"Url",2320],[5,"Range",2321],[5,"Bytes",2322],[1,"slice"],[8,"PlHashMap",2323],[17,"Error"],[10,"Debug",2298],[10,"TryFrom",2324],[10,"Hash",2299],[10,"Eq",2325],[10,"From",2324],[5,"ObjectMeta",2312],[17,"Output"],[10,"FnOnce",2326],[1,"u8"],[10,"VarInt",2327],[6,"PlCredentialProvider",227],[5,"CredentialProviderFunction",227],[5,"AwsCredential",227,2328],[6,"AzureCredential",227,2329],[5,"GcpCredential",227,2330],[5,"InstanceCredentials",2328],[5,"SessionCredentials",2328],[10,"Future",2331],[5,"Box",2332],[5,"Pin",2333],[10,"Fn",2326],[10,"Send",2334],[10,"Sync",2334],[5,"PythonFunction",2335],[8,"PyObject",2336],[10,"IntoCredentialProvider",227],[8,"AwsCredentialProvider",2337],[8,"AzureCredentialProvider",2338],[8,"GcpCredentialProvider",2339],[6,"AmazonS3ConfigKey",372,2340],[6,"AzureConfigKey",372,2341],[6,"GoogleConfigKey",372,2342],[6,"CloudType",372],[10,"AsRef",2324],[10,"Into",2324],[17,"Item"],[10,"IntoIterator",2343],[5,"CsvReader",562,2344],[10,"PhysicalIoExpr",2081],[10,"MmapBytesReader",1476],[8,"SchemaRef",2308],[5,"OwnedBatchedCsvReader",562,2345],[5,"BatchedCsvReader",562,2345],[5,"CsvReadOptions",562,2346],[5,"CsvParseOptions",562,2346],[6,"CsvEncoding",562,2346],[6,"CommentPrefix",562,2346],[6,"NullValues",562,2346],[6,"NullValuesCompiled",823,2346],[5,"Path",2347],[5,"PlSmallStr",2348],[5,"PathBuf",2347],[5,"File",2349],[5,"SchemaInferenceResult",944],[6,"DataType",2350],[5,"Field",2351],[5,"CountLines",823,2352],[6,"Buffer",866],[5,"Series",2353],[8,"PlHashSet",2323],[6,"ReaderBytes",1476],[5,"CsvWriter",971,2354],[5,"BatchedWriter",971,2354],[5,"CsvWriterOptions",971,2355],[5,"SerializeOptions",971,2355],[6,"QuoteStyle",971,2355],[8,"NonZeroUsize",2356],[1,"u64"],[5,"FileCacheEntry",1116,2357],[10,"Iterator",2358],[5,"Schema",2359],[6,"Column",2360],[10,"Extend",2343],[5,"IpcStreamReader",1139,2361],[5,"IpcWriter",1139,2362],[5,"BatchedWriter",1139,2362],[5,"IpcScanOptions",1139,2363],[5,"IpcReadOptions",1139,2364],[5,"IpcWriterOptions",1139,2362],[6,"IpcCompression",1139,2362],[5,"IpcReaderAsync",1139,2364],[5,"FileMetadata",2365],[1,"i64"],[5,"IpcStreamWriterOption",1139,2361],[5,"IpcReader",1139,2363],[5,"IpcStreamWriter",1139,2361],[8,"ArrowSchemaRef",2306],[5,"CompatLevel",2350],[5,"EncodedData",2366],[5,"JsonWriterOptions",1378],[5,"JsonWriter",1378],[5,"JsonReader",1378],[5,"BatchedWriter",1378],[6,"JsonFormat",1378],[5,"MemSlice",2367],[10,"BufRead",2300],[5,"StructArray",1499,2368],[10,"Array",2369],[6,"ArrowDataType",2370],[10,"Any",2304],[5,"JsonLineReader",1499],[5,"Field",2371],[5,"GrowableStruct",2372],[5,"Bitmap",2373],[10,"Scalar",2374],[5,"StructValueIter",2375],[5,"BitmapIter",2376],[6,"ZipValidity",2377],[6,"PolarsError",2297],[5,"FileMetadata",1605,2378],[6,"ColumnOrder",2379],[5,"ParquetStatistics",1605],[5,"ColumnChunkMetadata",2380],[10,"ExactSizeIterator",2381],[5,"MutableStatistics",2382],[5,"KeyValue",2383],[5,"SchemaDescriptor",2384],[5,"FileMetaData",2383],[6,"ParquetError",2385],[5,"ParquetReader",1658,2386],[5,"BatchedParquetReader",1658,2387],[5,"ParquetAsyncReader",1658,2386],[5,"ParquetOptions",1658,2388],[6,"ParallelStrategy",1658,2388],[5,"RowGroupMetadata",2389],[6,"IsSorted",2390],[8,"FileMetadataRef",1605],[1,"f64"],[6,"PrefilterMaskSetting",1804,2387],[6,"Filter",2391],[5,"ParquetWriter",1826,2392],[5,"BatchedWriter",1826,2393],[5,"StatisticsOptions",1826,2394],[5,"ParquetWriteOptions",1826,2395],[6,"ParquetCompression",1826,2395],[5,"GzipLevel",1826,2395],[5,"BrotliLevel",1826,2395],[5,"ZstdLevel",1826,2395],[8,"RowGroupIterColumns",1826,2396],[5,"FileWriter",2397],[5,"Mutex",2398],[1,"u32"],[1,"i32"],[5,"RuntimeManager",2058],[10,"GetSize",2058],[5,"JoinHandle",2399],[10,"StatsEvaluator",2081],[5,"ColumnStats",2081],[5,"BatchStats",2081],[10,"Sized",2334],[6,"DynByteSourceBuilder",2173],[6,"DynByteSource",2173],[5,"MemSliceByteSource",2173],[5,"ObjectStoreByteSource",2173],[10,"ByteSource",2173],[6,"SupportedCompression",2254],[6,"SplitSlicePosition",2272],[6,"ObjectStoreCredential",227],[5,"Utf8Field",866],[5,"CategoricalField",866],[5,"DatetimeField",866],[15,"Datetime",941]],"r":[[0,2295],[1,2292],[2,2292],[3,2295],[4,2295],[5,2295],[87,2305],[88,2307],[89,2400],[153,2311],[154,2317],[155,2314],[156,2314],[165,2401],[194,2311],[206,2401],[229,2328],[231,2329],[236,2330],[375,2340],[380,2341],[404,2342],[564,2345],[565,2346],[566,2346],[567,2346],[568,2346],[569,2344],[573,2346],[574,2345],[622,2352],[623,2352],[704,944],[826,2352],[827,2346],[833,2402],[845,2402],[854,2344],[855,2402],[863,866],[972,2354],[973,2354],[974,2355],[978,2355],[979,2355],[1116,2403],[1117,2404],[1118,2357],[1125,2403],[1127,2404],[1139,2362],[1140,2362],[1141,2364],[1142,2363],[1143,2364],[1144,2363],[1145,2361],[1146,2361],[1147,2361],[1148,2362],[1149,2362],[1500,2368],[1605,2378],[1623,2382],[1659,2387],[1662,2388],[1663,2386],[1664,2388],[1665,2386],[1689,2387],[1744,2405],[1775,2387],[1807,2387],[1810,2387],[1814,2405],[1819,2406],[1821,2407],[1826,2393],[1828,2395],[1830,2395],[1833,2395],[1834,2395],[1835,2392],[1836,2396],[1838,2394],[1841,2395],[2149,2295],[2150,2295],[2151,0],[2159,2050],[2160,2408],[2161,2408],[2162,2408],[2163,2408],[2165,2408],[2167,2408],[2169,2408],[2170,2408],[2171,2408]],"b":[[309,"impl-From%3CInstanceCredentials%3E-for-AwsCredential"],[311,"impl-From%3CSessionCredentials%3E-for-AwsCredential"],[1504,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1505,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1506,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1507,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1527,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1528,"impl-PartialEq-for-StructArray"],[1554,"impl-Array-for-StructArray"],[1555,"impl-StructArray"],[1558,"impl-Array-for-StructArray"],[1559,"impl-StructArray"],[1571,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1572,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1573,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1574,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1582,"impl-StructArray"],[1583,"impl-Array-for-StructArray"],[1599,"impl-Array-for-StructArray"],[1600,"impl-StructArray"],[2210,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2211,"impl-From%3CMemSlice%3E-for-DynByteSource"],[2213,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM0G0gAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnABAAugACAMAAAQDFAAIAzQAAANAAAADVAA4A5QAAAOcAAADsAAAA7gAAAPAAAgD0AAEA9wA9ADYBAAA4AQAAPgEJAE4BCABZAQIAXQEXAHsBAQCHAQAAkwEBAJYBAQCsARAAwAE2APwBAwABAggADwIcAC4CAAA1AgQAPgIBAEICLABxAjgAqwIEALcCAAC5AhEA1AIAANYCAgDdAioACQMIABMDBwArAwAAOAMAADsDFABSAwEAVgMAAFgDHQB3AxcAkwMEAJwDIQC/AwEAwwMAAMUDBgDNAwAA1QMXAO8DIQASBAAAFAQCABwEAgAgBAAAIgQFAC4EAgA1BAMAOgQWAF0EBwBmBAIAagQBAG4EAwBzBAEAdgQAAHkEAAB8BAAAfgQAAIEEAwCGBCIAqgQ2AOIEAwDxBA4ADQUFABUFNQBNBQEAUwUBAFcFAQBbBQAAXgUBAGEFAABjBQAAaQUkAI8FAACVBQAAlwUEAKMFGQC/BQEAxQUAAMcFBwDQBQEA0wUBANYFBgDeBQEA4QUJAOwFDQD7BQEA/gUAAAEGAAADBgIACQYAAAsGAAATBgAAFQYCABsGAQAeBg0ALQYBADAGAAAzBgEANwYJAEIGAABHBgAASQYHAFQGAwBaBgQAYAYAAGIGAQBwBgIAdAYDAHkGAQB8BgAAfwYAAIEGAACFBjQAvwYJAM4GAADQBgIA1AYAANYGAQDZBgEA3AYDAOEGFAD4BgUA/wYAAAEHBQAIBwAACgcBAA0HCQAZBwEAHAcIACYHAAAoBwEAKwcAAC0HAQAwBwEAMwcoAF4HOwCcBwUAqgcPAMIHAQDFBwEAyAcAAMoHBQDSBykAAQgBAAQIAAALCAIADwgEABUIAQAYCAAAGggAABwIBQAkCAQAKggJADUIBwA/CAIASggBAFQIAwBbCA0AaggAAGwIAABwCA8AgQgBAIQIAACGCBoAowgBAKYIAACpCAIArQgKALwIEwDRCAMA1ggCANoIAADdCA0A7AgAAO8IBAA="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPPFPPPPPPPPKPPGGPGPPPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPFPPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPGPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPIGPPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPGGPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNOOOPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJJSFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNOONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Bitwise","","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","Bytes","","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Deserialized","","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","Intersect","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","LazySerde","LeadingOnes","LeadingZeros","Len","LenBytes","LenChars","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","OpaqueColumnUdf","Operator","Or","","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitwise_and","bitwise_count_ones","bitwise_count_zeros","bitwise_leading_ones","bitwise_leading_zeros","bitwise_or","bitwise_trailing_ones","bitwise_trailing_zeros","bitwise_xor","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_arr","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_literal","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_map_to_array_inner_dtype","try_serialize","","","try_to_compact_string","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","method","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","And","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Bitwise","BitwiseAggFunction","BitwiseFunction","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CountOnes","CountZeros","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EscapeRegex","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LeadingOnes","LeadingZeros","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","Or","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","Repeat","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrailingOnes","TrailingZeros","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Xor","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","CorrCov","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","corr_cov_options","is_corr","rolling_options","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_arr","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","init","","","into","","","new","","serialize","to_owned","try_deserialize_bytes","try_from","","","try_into","","","try_serialize","","try_serialize_to_bytes","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","escape_regex","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COLLAPSE_JOINS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_missing_columns","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","try_new_streaming_if_requested","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_chunk_size","with_cloud_options","","with_cluster_with_columns","with_collapse_joins","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_cross","is_full_days","is_ie","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_parse","try_parse_interval","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1729,"polars_lazy::dsl::AggExpr"],[1736,"polars_lazy::dsl::BooleanFunction"],[1739,"polars_lazy::dsl::Expr"],[1774,"polars_lazy::dsl::FunctionExpr"],[1819,"polars_lazy::dsl::StringFunction"],[1839,"polars_lazy::dsl::TemporalFunction"],[1841,"polars_lazy::dsl::binary"],[1862,"polars_lazy::dsl::cat"],[1863,"polars_lazy::dsl::dt"],[1919,"polars_lazy::dsl::function_expr"],[2150,"polars_lazy::dsl::function_expr::BooleanFunction"],[2153,"polars_lazy::dsl::function_expr::FunctionExpr"],[2198,"polars_lazy::dsl::function_expr::StringFunction"],[2218,"polars_lazy::dsl::function_expr::TemporalFunction"],[2220,"polars_lazy::dsl::function_expr::cat"],[2222,"polars_lazy::dsl::function_expr::pow"],[2226,"polars_lazy::dsl::function_expr::rolling"],[2261,"polars_lazy::dsl::function_expr::rolling::RollingFunction"],[2264,"polars_lazy::dsl::function_expr::rolling_by"],[2297,"polars_lazy::dsl::function_expr::trigonometry"],[2341,"polars_lazy::dsl::functions"],[2417,"polars_lazy::dsl::python_udf"],[2482,"polars_lazy::dsl::string"],[2544,"polars_lazy::dsl::udf"],[2550,"polars_lazy::frame"],[3041,"polars_lazy::frame::pivot"],[3043,"polars_lazy::prelude"],[3670,"polars_lazy::prelude::DslPlan"],[3722,"polars_lazy::prelude::LiteralValue"],[3725,"dyn_clone::sealed"],[3726,"polars_plan::dsl::meta"],[3727,"polars_plan::dsl::expr"],[3728,"polars_plan::dsl::struct_"],[3729,"polars_utils::pl_str"],[3730,"alloc::sync"],[3731,"polars_error"],[3732,"core::result"],[3733,"polars_plan::dsl::selector"],[3734,"core::convert"],[3735,"polars_plan::dsl::array"],[3736,"polars_plan::dsl::list"],[3737,"polars_plan::dsl::expr_dyn_fn"],[3738,"polars_core::frame::column"],[3739,"core::option"],[3740,"core::ops::function"],[3741,"core::marker"],[3742,"polars_plan::plans::visitor"],[3743,"polars_plan::dsl::function_expr"],[3744,"polars_core::datatypes::dtype"],[3745,"polars_core::chunked_array::ops::sort::options"],[3746,"polars_plan::dsl::function_expr::schema"],[3747,"polars_core::datatypes::field"],[3748,"core::any"],[3749,"alloc::vec"],[3750,"polars_plan::dsl::binary"],[3751,"core::clone"],[3752,"polars_plan::dsl::udf"],[3753,"polars_core::chunked_array::cast"],[3754,"polars_plan::dsl::cat"],[3755,"polars_plan::dsl::arity"],[3756,"polars_plan::dsl::function_expr::bitwise"],[3757,"polars_plan::dsl::function_expr::boolean"],[3758,"polars_plan::dsl::function_expr::cat"],[3759,"polars_plan::dsl::function_expr::datetime"],[3760,"polars_plan::dsl::function_expr::pow"],[3761,"polars_plan::dsl::function_expr::strings"],[3762,"polars_plan::dsl::function_expr::struct_"],[3763,"polars_plan::dsl::functions::temporal"],[3764,"polars_plan::dsl::options"],[3765,"core::iter::traits::collect"],[3766,"polars_lazy::dsl::eval"],[3767,"polars_core::utils"],[3768,"polars_time::windows::duration"],[3769,"polars_time::windows::group_by"],[3770,"polars_core::datatypes::time_unit"],[3771,"serde::de"],[3772,"polars_core::series"],[3773,"polars_plan::plans"],[3774,"polars_core::series::ops"],[3775,"polars_plan::dsl::dt"],[3776,"core::cmp"],[3777,"polars_lazy::dsl::list"],[3778,"polars_arrow::legacy::kernels::ewm"],[3779,"polars_core::chunked_array::ops"],[3780,"core::fmt"],[3781,"polars_plan::plans::apply"],[3782,"polars_ops::frame::join::iejoin"],[3783,"polars_plan::dsl::function_expr::range"],[3784,"polars_plan::dsl::function_expr::list"],[3785,"polars_plan::dsl::function_expr::array"],[3786,"polars_plan::dsl::function_expr::binary"],[3787,"polars_plan::dsl::function_expr::business"],[3788,"alloc::string"],[3789,"polars_plan::plans::options"],[3790,"polars_schema::schema"],[3791,"core::hash"],[3792,"polars_ops::series::ops::interpolation::interpolate"],[3793,"polars_ops::series::ops::is_between"],[3794,"polars_plan::dsl::name"],[3795,"polars_plan::plans::lit"],[3796,"polars_core::utils::supertype"],[3797,"polars_plan::dsl::python_udf"],[3798,"polars_utils::idx_vec"],[3799,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3800,"polars_ops::series::ops::rank"],[3801,"polars_time::group_by::dynamic"],[3802,"polars_core::chunked_array::ops::rolling_window"],[3803,"polars_core::datatypes"],[3804,"polars_core::chunked_array"],[3805,"polars_time::chunkedarray::rolling_window"],[3806,"polars_core::chunked_array::ops::search_sorted"],[3807,"serde::ser"],[3808,"polars_core::series::series_trait"],[3809,"polars_plan::dsl::string"],[3810,"polars_ops::chunked_array::list::to_struct"],[3811,"compact_str"],[3812,"polars_ops::series::ops::business"],[3813,"polars_arrow::legacy::kernels::time"],[3814,"polars_plan::dsl::function_expr::rolling"],[3815,"polars_plan::dsl::function_expr::rolling_by"],[3816,"polars_plan::dsl::function_expr::trigonometry"],[3817,"polars_core::frame"],[3818,"rayon::iter"],[3819,"polars_utils::python_function"],[3820,"pyo3::types::any"],[3821,"pyo3::instance"],[3822,"polars_utils::arena"],[3823,"polars_plan::plans::ir"],[3824,"polars_plan::plans::aexpr"],[3825,"polars_plan::frame::opt_state"],[3826,"polars_plan::plans::anonymous_scan"],[3827,"polars_lazy::scan::anonymous_scan"],[3828,"polars_core::schema"],[3829,"polars_utils::index"],[3830,"polars_lazy::frame::exitable"],[3831,"polars_utils::aliases"],[3832,"polars_lazy::scan::csv"],[3833,"polars_lazy::scan::ipc"],[3834,"polars_lazy::scan::ndjson"],[3835,"polars_lazy::scan::parquet"],[3836,"polars_lazy::scan::file_list_reader"],[3837,"polars_io::cloud::options"],[3838,"polars_ops::frame::join::args"],[3839,"bitflags::iter"],[3840,"std::path"],[3841,"polars_plan::plans::ir::scan_sources"],[3842,"polars_io::options"],[3843,"polars_io::csv::write::options"],[3844,"polars_io::ipc::write"],[3845,"polars_io::json"],[3846,"polars_io::parquet::write::options"],[3847,"core::num::nonzero"],[3848,"polars_io::csv::read::options"],[3849,"chrono_tz::timezones"],[3850,"polars_core::datatypes::any_value"],[3851,"polars_core::frame::group_by::proxy"],[3852,"std::io"],[3853,"polars_io::parquet::write::writer"],[3854,"chrono::naive::datetime"],[3855,"polars_plan::dsl::functions::selectors"],[3856,"polars_plan::dsl::functions::horizontal"],[3857,"polars_plan::dsl::functions::arity"],[3858,"polars_plan::dsl"],[3859,"polars_plan::dsl::functions::range"],[3860,"polars_plan::dsl::functions::index"],[3861,"polars_plan::dsl::functions::coerce"],[3862,"polars_plan::dsl::functions::syntactic_sugar"],[3863,"polars_plan::dsl::functions::business"],[3864,"polars_plan::dsl::functions::concat"],[3865,"polars_plan::dsl::functions::correlation"],[3866,"polars_plan::dsl::functions::repeat"],[3867,"polars_utils::python_function::serde_wrap"],[3868,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gh0EfGf422666Ib7`777H`0Gl79`69``9`9AKbG`92;``Gn<3``<<:`:`3<4443<94Gd0======444`4432=8==Gb<5`6>996>>>><`=><I````?777=Hb0``Cj0?9>0<0?``0?05Gj`3==1:::19?j22Ah`Gh000000<00000<6`=5=24Dl`993>>5``355Ef06?0016161`>>>160>60>>>7019>6`20046>``0Gf?HnH`099939`:94Gl::::::8`;::1::0:1:2`::70:::0`8::::::8188`111?15:`111111`:``78;5:1:`8`00111:0::0000000>>:40`::`:1`:500`88``;04301FhFjFlFn9<G`Gb:BfGd;>Gj9Gn;HbCjHdHfHhHjHlHnI`IbIdAhF`hl1111j0400`AlAn2`;?2102`22`222`2`22222221021022`2`Dd<3DhDl``5`5`95555555559Ff5348O`8FhFjFlFn6;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF````````AlAnj00021`0`000`0Il01````>=<1Bf00?><;:972Ff5Dd5hO`lFhFjFlFnDl<G`GbEf==GdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`DljG`GbEfBf0000GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj00FfAlDd4hO`lFhFjFlFnDl;G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jAn1`1```1Dl22G`GbEfBf0GdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhj000Gb00Ef00Gd00Gf00Gh00Gj00Gl00Gn00H`00Hb00Hh00Hj00Hl00Hn00I`00Ib00Id00Ah00Kl0j0008000Al11l002222`An33Bf44DhFbEnLf88G`GbEf07Gd0GfGh0Gj0Gl0Gn0H`0Hb0Cj0HdHfHhHjHlHnI`IbIdAhF``67`jFfAlDdAnhO`lFhFjFlFnDl<<<<<<<<<<<<<<G`GbEf0Bf000000000000GdGfGhGjGlGnH`HbCj0000HdHfHhHjHlHn0I`IbIdAh0000F`Bf1`j`An101Al12FfJjBdDdLf77hDl99GbEfGdGfGhGjGlGnH`HbCjHhHjHlHnI`IbIdAhAnj0HdHf25`FfAlDd6hO`lFhFjFlFnDl=G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`0``j0FfAlDdAnhO`lFhFjFlFnDl<G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`jNjAnhEf4110444444144`4`4114Al3lO`7`57`577`777777707`7Dd0Bf090209`99`191111G``58:``8:``58::HdHf0`7:<`Hh21=2=8;==>==1===55421?>==`=`=Id?>FjFn=j0000`0>0::0`00`000`00;`00900F`=An2222``2222222222222222222h33Hl0<42244:9Dl5<GbEf?????GdGfGhGjGlGnH`HbCjHhHj>HnI`IbIdAhAn0j1Al211111111210211`1021181`113O`0`132`BfEf5444`FhFl`HdHf198763Fj3FnDl;G`Gb9:GdGfGhGjGlGnH`HbCj?>HhHjHlHnI`IbIdAhF`jDd1EfGdGhGjGlGnH`HbCjAlAnO`==Ff3=2h2lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`FfAlDdAnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`Dd0j11DhEnBd3EfGdGhGjGlGnH`HbCjFfAl?AnhO`lFhFjFlFnDljG`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF``hAnAl1j01200061206Ff2Dd45O`lFhFjFlFnDl9G`GbEfBfGdGfGhGjGlGnH`HbCjHdHfHhHjHlHnI`IbIdAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AKdAKfAKh2102AKjAKlAKnAL`ALbALd0ALfALh4ALjALlALnAM`3AMb528AMd1AMf11098432323570;5AMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`Ed0000000000000000000``Kf000000000000000000000000000000000000000000000000000000CjGh0Gf112222222H`0Gl44``4`404`Gn515515222152Gd0666666222226662363666666333Hb077477`772Gj855584887777777477777451582255888858844484844414878464558888`184888888188588485888488848888885555358`5555558`1858`44555848844444442284888584414645`````AKjAKlAKnAMhAMjAMlAMnAN`ANbANdANfANhANjANlANn087;87;7;AO`AOb8AOdAOfAOh0?1AOjAOlAOnB@`4AMhB@bB@dB@fB@hB@jB@l:=;B@nBA`BAbBAdBAfBAh54BAj321BAlBAnBB`03721BBb0`GjGn0`0ABd0000`00000000000000000000000000000BBd00ABf000`0000000000000000000000000000ABh00000000000000`0000000000000000000000000000````Hd```````````````````````````0Hf`````10`````````100`1010```````10````10101```````ACdOhACj2102122221021022102222221022010210210222102102102102102`AAf000000000000000000000000000000000000000000000000000000000000`F`0000`ADh000000````````0`000000```0AEdABnADfADnAEhAEjAElAEn866580ADj77699999999087654321908765432197731877876543219876543219876543219AF`053421888:005:888642:198765432:198765432:8888:19988765432:888:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AG`99299843999999916475372646464;9293`9916453;9929164753999999973;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;92:9876543;;9999993292:9876543;2466649999999696666666464646616644969119966164919664464646966916496699`````AFh0AIhAIj0Kb3`011120``1`00111300030311111`0````3``AHn0133``20032``12``4`114211122222221`AFfA@bJdAFn84AH`AHbAHd:A@`AHf;AIlACb<888ADl0007;:9AJh9AFh>AJf:98AIh87AIj76KbAFfA@bJd8AFn8AHn8AH`AHbAHd:A@`AHf;AIlACb<;:98AFh8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJd7AFn9AHn8AH`AHbAHd:A@`AHf;AIlACb<3<<;:98AFh8765?43>21=1=<;:AJh:19AJf987AIh76AIj65KbAFfA@bJdAFn9AHnAH`AHbAHd:A@`AHf;AIlACb;;;:::999888AFh00888777666555333222111<<;::ADl:1199876AIh65AIj545?>=AJh==4<AJf<;:3982276Kb73AJbAFfA@bJdAFn;AHnAH`AHbAHd=A@`AHf>AIlACb86;6;:;:9?8AFh8?765AIh54AIj43Kb?>=AJh=4<AJf<;:498376225?5?53=?>AFfObJd36?>=;6<00040AHn111AFnADl5A@b8=444608`=AJbAHf33:8264>5AH`AHbAHdAIhA@`5AIjAIlACbKb8=2=AFf:>>140<Jd?AFhAHn<;:98=76542105;=22223?2AJhAFn32AJf?>=<;AHf;:987A@b743652AH`AHbAHdAIhA@`6AIjAIlACbKbJd00AFhAHnAFf=3AJhAFn43AJf?>=<;AHf;:9824A@b843762AH`AHbAHdAIhA@`6AIjAIlACbKbJd0=>=8;BBf0BBhBBjBBlBBnBC`BCbBCdBCf55BChBCjBCl14;3BCn:BD`49BDbBDd0>BDfBBf240;4BDh;13:624733?=BBj0BBl>BDj00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}?????????0{b{{b{c}}}{}}000000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{{G`{c}}}}}{{G`{c}}}{EhEh}}{{{b{Gb}}}Gb}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Cj}}}Cj}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000000{bf}00000000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{{Dn{j}}}{{Af{jAd}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjIj}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}2{{IljInB`}j}0{{j{Dn{J`}}{Bl{c}}B`B`}j{{Jb{n}}}}{{jjJdJf}j}{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}{{Bf{{Ab{Jj}}}}}}{{}Hd}{{}Hf}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Id}{jj}{In{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111111{In{{b{Cdc}}}{}}000000000000000000000000000000000000{c{{Af{Dl}}}Jl}{c{{Af{j}}}Jl}{c{{Af{{G`{e}}}}}Jl{JnEh}}{c{{Af{Gb}}}Jl}{c{{Af{Ef}}}Jl}{c{{Af{{Bf{K`}}}}}Jl}{c{{Af{{Bf{{Ab{En}}}}}}}Jl}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jl}{c{{Af{{Bf{{Ab{Kb}}}}}}}Jl}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jl}{c{{Af{Gd}}}Jl}{c{{Af{Gf}}}Jl}{c{{Af{Gh}}}Jl}{c{{Af{Gj}}}Jl}{c{{Af{Gl}}}Jl}{c{{Af{Gn}}}Jl}{c{{Af{H`}}}Jl}{c{{Af{Hb}}}Jl}{c{{Af{Cj}}}Jl}{c{{Af{Hh}}}Jl}{c{{Af{Hj}}}Jl}{c{{Af{Hl}}}Jl}{c{{Af{Hn}}}Jl}{c{{Af{I`}}}Jl}{c{{Af{Ib}}}Jl}{c{{Af{Id}}}Jl}{c{{Af{Ah}}}Jl}{{AnClKd}j}{{jClKd}j}{{jj}}{{jc}j{{Aj{j}}}}{Inf}000000000000000000000000000000000000{jj}{Anj}1`{jKf}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jJ`B`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{{G`{c}}}}{b{{G`{c}}}}}B`{KhEh}}{{{b{Gb}}{b{Gb}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`Kj}{{{b{{Bf{K`}}}}{b{{Bf{K`}}}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Gn}}{b{Gn}}}B`}{{{b{H`}}{b{H`}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{I`}}{b{I`}}}B`}{{{b{Ib}}{b{Ib}}}B`}{{{b{Id}}{b{Id}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000000000{{KljB`}j}0{{jKn}j}{{jjJd}j}11`{{jc}j{{Jb{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}{Alj}1{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}<<{{jL`}j}={{}j}{Anj}88{{}{{Bf{{Ab{Bd}}}}}}9{{jj}j}{{{b{Dh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Fb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{En}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Lf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{j}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{G`{c}}}}{b{CdLb}}}{{Af{fLd}}}Eh}{{{b{Gb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ef}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{{Bf{c}}}}{b{CdLb}}}{{Af{fLd}}}{}}{{{b{Gd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Gh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gl}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Gn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{H`}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hb}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Cj}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{Hd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Hn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{I`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ib}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Id}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Ah}}{b{CdLb}}}{{Af{fLd}}}}{{{b{F`}}{b{CdLb}}}{{Af{fLd}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Lhj}{Ljj}{Ebj}{B`j}{Clj}{Elj}{Llj}{Lnj}{J`j}{M`j}:{{{b{E`}}}j}{Dlj}{Ijj}=={MbEf}>{Gh{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{H`{{Bf{{Ab{Dh}}}}}}{cc{}}{Md{{Bf{{Ab{Dh}}}}}}{Mf{{Bf{{Ab{Dh}}}}}}{Mh{{Bf{{Ab{Dh}}}}}}{Hb{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Mj{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Ml{{Bf{{Ab{Dh}}}}}}{Gd{{Bf{{Ab{Dh}}}}}}99999999{H`Cj}{GjCj}{GhCj}{MjCj}======={I`Hn}>>>{nAh}{MnAh}{{{b{E`}}}Ah}{jAh}{cc{}}0{Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}N`}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jInIn}j}{{AljB`}j}43{Ffj}{{{b{Jj}}{b{{Nb{Cn}}}}Nd{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}In}{{{b{Lf}}{b{{Nb{Cn}}}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}88{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fNf}{{{b{j}}{b{Cdc}}}fNf}{{jEbEbEbEb}j}{{{b{Gb}}{b{Cdc}}}fNf}{{{b{Ef}}{b{Cdc}}}fNf}{{{b{Gd}}{b{Cdc}}}fNf}{{{b{Gf}}{b{Cdc}}}fNf}{{{b{Gh}}{b{Cdc}}}fNf}{{{b{Gj}}{b{Cdc}}}fNf}{{{b{Gl}}{b{Cdc}}}fNf}{{{b{Gn}}{b{Cdc}}}fNf}{{{b{H`}}{b{Cdc}}}fNf}{{{b{Hb}}{b{Cdc}}}fNf}{{{b{Cj}}{b{Cdc}}}fNf}{{{b{Hh}}{b{Cdc}}}fNf}{{{b{Hj}}{b{Cdc}}}fNf}{{{b{Hl}}{b{Cdc}}}fNf}{{{b{Hn}}{b{Cdc}}}fNf}{{{b{I`}}{b{Cdc}}}fNf}{{{b{Ib}}{b{Cdc}}}fNf}{{{b{Id}}{b{Cdc}}}fNf}{{{b{Ah}}{b{Cdc}}}fNf}{{Anj}j}{{j{Bl{In}}}j}{{j{Bl{j}}{Bl{In}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}In}000000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jNh}j}{{jj}j}{{}c{}}000000000000000000000000000000000000{{{b{j}}}}{NjAn}{AnAn}{{hB`}{{Af{{`{Nl}}Ad}}}}{{{b{Ef}}}B`}{{jccNn}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}02000000330{{AljB`}j}{{AnjB`}j}{lj}{O`j}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjOb}{{jJ`}j}:;;:;;{{O`c}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{O`{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Of}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jOhB`}j}1111{{{G`{{Bf{{Ab{Dh}}}}}}}{{Af{{Bf{{Ab{Dh}}}}Ad}}}}{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jO`}`44`{j}{{jc}j{{Aj{j}}}}0<{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Hd}{{}Hf}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{Oj{{b{j}}}}}}}f}{{j{b{Cd{Oj{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ol{eD`}}}}I`}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjIj}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{O`{b{E`}}}j}05`{{j{Dn{J`}}{Bl{c}}B`B`B`}j{{Jb{n}}}}{{jIn{Bl{c}}B`B`B`}j{{Jb{n}}}}{{{b{E`}}jOn}j}{{jjOn}j}9{{jA@`{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}}j}`{Alj}{Anj}{jj}00{{jA@b}j}{{jjHh}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}A@d}j}{{jInc}j{{Ch{{b{Cd{A@h{A@f}}}}}{{Bj{{Bl{J`}}}}}}C`CbA@j}}{{jA@d}j}{{jjA@l}j}101010{{jOnJ`A@d}j}{{jjOnJ`A@l}j}{{jInB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLj}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@n}j{{Aj{j}}}}``{{{b{Dl}}c}AfAA`}{{{b{j}}c}AfAA`}{{{b{{G`{c}}}}e}Af{AAbEh}AA`}{{{b{Gb}}c}AfAA`}{{{b{Ef}}c}AfAA`}{{{b{{Bf{{Ab{Kb}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Bd}}}}}}c}AfAA`}{{{b{{Bf{{Ab{Dh}}}}}}c}AfAA`}{{{b{{Bf{{Ab{En}}}}}}c}AfAA`}{{{b{{Bf{K`}}}}c}AfAA`}{{{b{Gd}}c}AfAA`}{{{b{Gf}}c}AfAA`}{{{b{Gh}}c}AfAA`}{{{b{Gj}}c}AfAA`}{{{b{Gl}}c}AfAA`}{{{b{Gn}}c}AfAA`}{{{b{H`}}c}AfAA`}{{{b{Hb}}c}AfAA`}{{{b{Cj}}c}AfAA`}{{{b{Hh}}c}AfAA`}{{{b{Hj}}c}AfAA`}{{{b{Hl}}c}AfAA`}{{{b{Hn}}c}AfAA`}{{{b{I`}}c}AfAA`}{{{b{Ib}}c}AfAA`}{{{b{Id}}c}AfAA`}{{{b{Ah}}c}AfAA`}{{Anc}j{{Aj{j}}}}0{{jAAd}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIjB`}j}8{{AlIj}j}{{AnIj}j}{{jIj}j}{jAAf}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{O`{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{In}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjJdJf}j}```{{AnIn}j}{{{b{j}}{b{{Nb{Cn}}}}Nd}{{Af{DfAd}}}}={O`j}{bc{}}00000000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMn}000000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnAAh}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Od{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}};{{{b{Dh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{b{{Af{AAjAAl}}}}000000000{bAAn}000000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlIj}j}{{AnIj}j}{{jIj}j}`{{}c{}}000000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Hdj}Hd}0{{Hfj}Hf}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{Hfjjj}Hf}{{Hdjjj}Hd}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{HdJh}Hd}{{Hd{Bl{n}}}Hd}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}3{cc{}}87{{}In}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}3``{{Kfj{Ej{B`}}{Dn{El}}AB`}j}{Kfj}=<{{KfJh}j}1{{KfjJh}j}{{Kfn}j}333=<;3:3983333333333{{Kfj}j}44{{Kf{Bl{n}}jABb}j}15{{Kf{b{E`}}}j}65066666662:98;6656`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABd}}}ABd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABd}}}Jl}{Inf}{{{b{ABd}}{b{ABd}}}B`}{{{b{ABd}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABd}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABd}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7```````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABf}}}ABf}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABf}}}Jl}{Inf}{{{b{ABf}}{b{ABf}}}B`}{{{b{ABf}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABf}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABf}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{c{{Af{ABh}}}Jl}{Inf}{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdLb}}}{{Af{fLd}}}}0{cc{}}{{{b{ABh}}{b{Cdc}}}fNf}{{}In}{{}c{}}{{{b{ABh}}c}AfAA`}{bc{}}{bMn}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{AAjAAl}}}}{bAAn}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{ABl{{Dn{ABj}}}}}{{AC`{}{{If{ABn}}}}}}{ej{{Aj{n}}}{{Ih{}{{If{c}}}}}}{{cACb}{{ABl{ABn}}}{{Bb{{A`{ABn}}}}}}{{{Dn{j}}}{{Af{jAd}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}22{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjIj}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jjJdJf}j}0{Hdj}{{jjJdJf{Bl{Jh}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{Hfj}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjIj}j}{{{b{E`}}jOn}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHh}j}0``{{jjIjB`}j}6{{jjJdJf}j}0````````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Oh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ACd}}ABj}{{Af{ABjAd}}}}{{{b{ACd}}}ACd}{{b{b{Cdc}}}f{}}{bf}{In{{b{c}}}{}}00{In{{b{Cdc}}}{}}00{c{{Af{ACd}}}Jl}{Inf}00{{{b{ACd}}{b{ACd}}}B`}{{b{b{c}}}B`{}}00{{{b{ACd}}{b{CdLb}}}{{Af{fLd}}}}{cc{}}0{{{ACh{ACf}}}ACd}1{{{b{ACj}}{b{{Nb{Cn}}}}Nd{b{{A`{Df}}}}}{{Af{DfAd}}}}{{}In}00{{}c{}}00{{{ACh{ACf}}{Bl{Cn}}B`B`}Oh}{{{Bl{Cn}}}ACj}{{{b{ACd}}c}AfAA`}{bc{}}{{{b{{A`{Ij}}}}}{{Af{ACdAd}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Oh}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACj}}{b{Cd{Dn{Ij}}}}}{{Af{fAd}}}}{{{b{ACd}}}{{Af{{Dn{Ij}}Ad}}}}{bAAn}00;;;`{{AAfB`}j}{AAfj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{AAfjB`}j}{{AAfj}j}1{In{{b{c}}}{}}{In{{b{Cdc}}}{}}{Inf}37{{AAfjIn}j}4{{AAf{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}In}{{}c{}}{{AAf{b{E`}}B`}j}{{AAf{Bl{Cn}}{Bl{In}}}j}:>>{{AAfInACl}j}0{{AAfjjB`}j}0{{AAfjjB`Cl}j}{AAfj}{{AAfjj}j}?;;?;??????{{AAfCnHjj}j}{{AAfj}j}{{AAfHj}j}{{AAf{Bl{Jh}}{Bl{n}}Hjj}j}{{AAfIn}j}{{AAfjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAn}{{}c{}}8``````````````````````````````````{{bd}f}00000000{{ABnc}{{ABl{ABj}}}{{Bn{ACn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{Bj{{ABl{f}}}}}}}}{{ABnB`}ABn}{{ADfc}ABn{{Bb{{A`{j}}}}}}{{}ADh}`{{ADjB`}ADj}{{{Ab{ADl}}ADn}{{ABl{ABn}}}}{{ABnABncc}ABn{{Aj{j}}}}{{ADfcAE`}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}10{{{b{ADh}}}Lj}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{ABnABn}``{{{b{AEd}}}f}{{ABn{AEf{{b{E`}}Cn}}B`}ABn}{{ABnCnB`}ABn}{{{b{AEd}}}AEd}{{{b{ABn}}}ABn}{{{b{ADf}}}ADf}{{{b{ADn}}}ADn}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{{b{ADh}}}ADh}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AF`}}}{{Bl{{b{AFb}}}}}}0{{{b{AEh}}}{{Bl{{b{AFb}}}}}}{{{b{AEl}}}{{Bl{{b{AFb}}}}}}``{{ADjAFd}ADj}{ABn{{ABl{ABj}}}}{ABn{{ABl{AEd}}}}{{{b{CdABn}}}{{ABl{AE`}}}}{ADhADh}{{{b{AF`}}{Dn{ABn}}}{{ABl{ABn}}}}0{{{b{AEh}}{Dn{ABn}}}{{ABl{ABn}}}}{{{b{ADh}}ADh}B`}{ABnABn}{{ABnABn{Bl{n}}}ABn}{{}ABn}{{}ADn}{{}AEj}{{}AEn}{{}ADh}{In{{b{c}}}{}}000000000{In{{b{Cdc}}}{}}000000000{{{b{ABn}}}{{ABl{Mn}}}}000{{ADhADh}ADh}{Inf}0{{{b{CdAEd}}}f}{{ABne}ABn{{Aj{Ah}}}{{Ih{}{{If{c}}}}}}22222222{{ABn{Bl{{Dn{j}}}}}ABn}108{{{b{ABn}}B`}{{ABl{Mn}}}}{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdADh}}c}f{{Ih{}{{If{ADh}}}}}}{{{b{AEd}}}{{Bl{{ABl{ABj}}}}}}{{ABnIn}{{ABl{ABj}}}}{{{b{AEd}}}{{ABl{ABj}}}}{{ABnc}ABn{{Aj{j}}}}0{{ABnj}ABn}{ADjABn}{AF`{{ABl{ABn}}}}0{AEh{{ABl{ABn}}}}{AEl{{ABl{ABn}}}}210{ABnABn}{{{b{ADh}}{b{CdLb}}}{{Af{fLd}}}}0000{{ADjB`}ADj}{cc{}}0{KbABn}{ADfABn}22222222{Lj{{Bl{ADh}}}}{LjADh}00{cADh{{Ih{}{{If{ADh}}}}}}{{{b{E`}}}{{Bl{ADh}}}}{{ABnABncc}ABn{{Aj{j}}}}{{{b{ABn}}}ADh}{{{b{AF`}}}B`}0{{{b{AEh}}}B`}`{{ABne}ADf{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABnjcAFf}ADf{{Bb{{A`{j}}}}}}1{{ADf{Bl{In}}}ABn}``{{ADjAFh}ADj}```{{}In}0000000008{{{b{CdADh}}ADh}f}{{ADhADh}ADh}{{{b{ADh}}ADh}B`}{{}c{}}000000000{ADh}{{{b{ADh}}}B`}0{{{b{ADh}}}{{AFj{ADh}}}}{{{b{ADh}}}{{AFl{ADh}}}}{{ABnABnccAFn}ABn{{Bb{{A`{j}}}}}}{ABnADj}{{ADjB`}ADj}{{ADj{Dn{j}}}ABn}{ABnABn}{AG`ABn}1{{ABnABncc}ABn{{Aj{j}}}}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABnAEb}ABn}``{{AElB`}AEl}`{{ABncAGb{Bl{{Ab{Lf}}}}{Bl{{b{E`}}}}}ABn{{Bn{ABj}{{Bj{{ABl{ABj}}}}}}C`Cb}}{{ABnACdAGb{Bl{AE`}}B`}ABn}777{{ABnABnc}{{ABl{ABn}}}{{Aj{n}}}}8{{{b{AF`}}}{{Bl{In}}}}{{{b{AEh}}}{{Bl{In}}}}{{{b{AEl}}}{{Bl{In}}}}````>{cAEh{{Bb{AGd}}}}{cAEl{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}}AEh}{{{Ab{{A`{AGf}}}}}AEl}{AGhAEh}{AGhAEl}{ADhADh}{ABnABn}{{ADjc}ADj{{Bb{{A`{j}}}}}}{{ABn{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{ACn}}}}``{ABn{{ABl{{Ol{ABjABj}}}}}}{{ABnjOn}ABn}{{{b{AF`}}}B`}{{{b{AEh}}}B`}{{{b{AEl}}}B`}``{{{b{CdADh}}ADh}f}{{ABneiB`}ABn{{Bb{E`}}}{{Ih{}{{If{c}}}}}{{Bb{E`}}}{{Ih{}{{If{g}}}}}}98{{ABnjcA@b}ADf{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{Bl{{b{AGj}}}}}}{{{b{AEh}}}{{Bl{{b{AGj}}}}}}{{{b{AEl}}}{{Bl{{b{AGj}}}}}}```{{AGlAGnB`}ABn}{{cAEj}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEj}{{ABl{ABn}}}}{{AGhAEj}{{ABl{ABn}}}}{{cAEn}{{ABl{ABn}}}{{Bb{AGd}}}}{{{Ab{{A`{AGf}}}}AEn}{{ABl{ABn}}}}{{AGhAEn}{{ABl{ABn}}}}``{{}ADh}{{{b{CdABn}}{b{Cd{ADb{AD`}}}}{b{Cd{ADb{ADd}}}}}{{ABl{AE`}}}}{{ABnc}ABn{{Bb{{A`{j}}}}}}0{{ABnABncc}ABn{{Aj{j}}}}{{{b{CdADh}}ADhB`}f}{{{b{ABn}}{ADb{AD`}}{ADb{ADd}}}f}{{ABnc}ABn{{Aj{j}}}}{{ABnce}ABn{{Aj{j}}}{{Aj{j}}}}{{ABncAH`}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHb}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHb}{{ABl{f}}}}{{ABncAHd}{{ABl{f}}}{{Bb{AGd}}}}{{ABncAHf}{{ABl{f}}}{{Bb{AGd}}}}{{ABnMn{Bl{AFb}}AHf}{{ABl{f}}}}`{{ABnClAEb}ABn}{{ABncDb}ABn{{Jb{n}}}}{{ABncDb}ABn{{Bb{{A`{j}}}}}}{{{b{AF`}}}{{b{AGh}}}}{{{b{AEh}}}{{b{AGh}}}}{{{b{AEl}}}{{b{AGh}}}}{{ABnIj}ABn}{{ADhADh}ADh}{{{b{CdADh}}ADh}f}{{ADjc}ADj{{Aj{n}}}}{ABnABn}3{{ABnAEb}ABn}{{ADf{Bl{In}}}ABn}{ABn{{ABl{AHh}}}}0{{{b{ABn}}B`}{{ABl{Mn}}}}{bc{}}000000007{{ABnAEbcDb}ABn{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{{{b{CdABn}}AHj}{{Bl{{ABl{{Bl{ABj}}}}}}}}{bAAn}000000000={{ABn{Bl{{Dn{Mn}}}}AHl}ABn}{{ABn{Bl{e}}AHl}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABn{Bl{{Dn{n}}}}AHl}ABn}1{{ABne}ABn{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABnId}ABn}`{{ADjAHn}ADj}{{ABnIj}ABn}{{}c{}}000000000{{ADjABn}ADj}{{AEl{Bl{AI`}}}AEl}{{AEhB`}AEh}{{AEhIn}AEh}{{AEh{Bl{AFb}}}AEh}{{AEl{Bl{AFb}}}AEl}{{ABnB`}ABn}0{{ABnj}ABn}{{ABnc}ABn{{Bb{{A`{j}}}}}}022{{AEh{Bl{n}}}AEh}{{ABnc}ABn{{Bb{{A`{ABn}}}}}}8{{AEh{Bl{AE`}}}AEh}{{AEhAIb}AEh}{{AEhIj}AEh};;;{{AElB`}AEl}5{{AEl{Bl{n}}}AEl}{{AEh{Bl{In}}}AEh}?>>{{AF`c}AF`{{Aj{{Bl{In}}}}}}{{AEhc}AEh{{Aj{{Bl{In}}}}}}2{{AElc}AEl{{Aj{{Bl{In}}}}}}{{AEl{Bl{In}}}AEl}>{{AEh{Bl{AId}}}AEh}{{ABnADh}ABn}{{AF`{Ab{{A`{AGf}}}}}AF`}0{{ABnB`}ABn}0{{AEh{Bl{Ij}}}AEh}{{AEhB`}AEh}{{AF`B`}AF`}1=3{{AF`c}AF`{{Aj{{Bl{AGj}}}}}}{{ABnc{Bl{AEb}}}ABn{{Aj{n}}}}{{AEh{Bl{AGj}}}AEh}{{AEhc}AEh{{Aj{{Bl{AGj}}}}}}{{AElc}AEl{{Aj{{Bl{AGj}}}}}}{{AEl{Bl{AGj}}}AEl}{{AEh{Bl{AE`}}}AEh}{{AEl{Bl{AE`}}}AEl}{{AEhc}{{ABl{AEh}}}{{Bn{AGl}{{Bj{{ABl{AGl}}}}}}}}1{{AEhIj}AEh}={{AEhIn}AEh}0>{{AF`AGh}AF`}{{AEhAGh}AEh}{{AElAGh}AEl}{{ABnB`}ABn}{{AEhB`}AEh}01{ABnABn}{{{b{ABj}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{ABl{ABj}}}{{Aj{n}}}{{Ih{}{{If{c}}}}}{{Aj{n}}}{{Ih{}{{If{g}}}}}{{Aj{n}}}{{Ih{}{{If{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{{{b{ADl}}}B`}00{{{b{ADl}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AFf}}}AFf}{{{b{A@b}}}A@b}{{{b{Jd}}}Jd}{{{b{AFn}}}AFn}{{{b{AFh}}}AFh}{{{b{AHn}}}AHn}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AIh}}}AIh}{{{b{A@`}}}A@`}{{{b{AHf}}}AHf}{{{b{AIj}}}AIj}{{{b{AIl}}}AIl}{{{b{ACb}}}ACb}{{{b{Kb}}}Kb}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{Jd}}{b{Jd}}}AIn}`{{b{b{c}}}AIn{}}``{{{b{Kb}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{}AFf}{{}A@b}{{}AFn}{{}AHn}{{}AH`}{{}AHb}{{}AHd}{{}A@`}{{}AHf}{{}AIl}{{}ACb}{{}Kb}{In{{b{c}}}{}}00000000000000000{In{{b{Cdc}}}{}}00000000000000000`{{{b{Kb}}}{{Af{MnAd}}}}0{c{{Af{AFf}}}Jl}{c{{Af{A@b}}}Jl}{c{{Af{Jd}}}Jl}{c{{Af{AFn}}}Jl}{c{{Af{AFh}}}Jl}{c{{Af{AHn}}}Jl}{c{{Af{AH`}}}Jl}{c{{Af{AHb}}}Jl}{c{{Af{AHd}}}Jl}{c{{Af{AIh}}}Jl}{c{{Af{A@`}}}Jl}{c{{Af{AHf}}}Jl}{c{{Af{AIj}}}Jl}{c{{Af{AIl}}}Jl}{c{{Af{ACb}}}Jl}{c{{Af{Kb}}}Jl}`{{{b{Kb}}}{{Af{{`{Nl}}Ad}}}}{Inf}00000000000000000{{{b{AFf}}{b{AFf}}}B`}{{{b{A@b}}{b{A@b}}}B`}{{{b{Jd}}{b{Jd}}}B`}{{{b{AFn}}{b{AFn}}}B`}{{{b{AFh}}{b{AFh}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AHb}}{b{AHb}}}B`}{{{b{AHd}}{b{AHd}}}B`}{{{b{AIh}}{b{AIh}}}B`}{{{b{A@`}}{b{A@`}}}B`}{{{b{AHf}}{b{AHf}}}B`}{{{b{AIj}}{b{AIj}}}B`}{{{b{AIl}}{b{AIl}}}B`}{{{b{ACb}}{b{ACb}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AFf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@b}}{b{CdLb}}}{{Af{fLd}}}}{{{b{Jd}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{ADl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFn}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AFh}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AHn}}{b{CdLb}}}{{Af{fLd}}}}0{{{b{AH`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHb}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHd}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIh}}{b{CdLb}}}{{Af{fLd}}}}{{{b{A@`}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AHf}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIj}}{b{CdLb}}}{{Af{fLd}}}}{{{b{AIl}}{b{CdLb}}}{{Af{fLd}}}}{{{b{ACb}}{b{CdLb}}}{{Af{fLd}}}}`{cc{}}0000{AFhAFn}1111111111{AJ`AIj}222`{{{b{AIj}}}Cn}{{{b{AJb}}{Dn{Bh}}{b{AFf}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}{{{b{AFf}}{b{Cdc}}}fNf}{{{b{A@b}}{b{Cdc}}}fNf}{{{b{Jd}}{b{Cdc}}}fNf}{{{b{AFn}}{b{Cdc}}}fNf}{{{b{AFh}}{b{Cdc}}}fNf}{{{b{AHn}}{b{Cdc}}}fNf}{{{b{AH`}}{b{Cdc}}}fNf}{{{b{AHb}}{b{Cdc}}}fNf}{{{b{AHd}}{b{Cdc}}}fNf}{{{b{AIh}}{b{Cdc}}}fNf}{{{b{A@`}}{b{Cdc}}}fNf}{{{b{AHf}}{b{Cdc}}}fNf}{{{b{AIj}}{b{Cdc}}}fNf}{{{b{AIl}}{b{Cdc}}}fNf}{{{b{ACb}}{b{Cdc}}}fNf}``````{{}In}00000000000000000{{}c{}}00000000000000000{{{b{Kb}}}}{{{b{AFh}}}B`}{{{b{Jd}}{Bl{{b{E`}}}}}B`}1{{{b{Jd}}}B`}2{{{b{AIj}}}B`}{{{b{AHn}}{b{AFh}}}{{Af{fAd}}}}2``{Obj}{Jdj}{AJfj}{AIjj}````{AIjAIj}`{{{b{Jd}}}Cl}8{{JdCl}Jd}`1{{{b{AHn}}}B`}{Jd};{ClJd}{AFhAFn}{{{b{ADl}}AJh}{{Af{{Bl{ABj}}Ad}}}}````{{{b{E`}}}Jd}`{{{b{Jd}}{b{Jd}}}{{Bl{AIn}}}}```{Kb{{Af{{Dn{Ij}}Ad}}}}`{{{b{AJb}}{Dn{Bh}}{b{A@b}}}{{Af{{Ol{Bh{Dn{Bh}}AJd}}Ad}}}}`{{{b{ADl}}AJh}{{Af{ABjAd}}}}{{{b{ADl}}{Bl{In}}}{{Af{{Ab{{Nb{Cn}}}}Ad}}}}`{{{b{AFf}}c}AfAA`}{{{b{A@b}}c}AfAA`}{{{b{Jd}}c}AfAA`}{{{b{AFn}}c}AfAA`}{{{b{AFh}}c}AfAA`}{{{b{AHn}}c}AfAA`}{{{b{AH`}}c}AfAA`}{{{b{AHb}}c}AfAA`}{{{b{AHd}}c}AfAA`}{{{b{AIh}}c}AfAA`}{{{b{A@`}}c}AfAA`}{{{b{AHf}}c}AfAA`}{{{b{AIj}}c}AfAA`}{{{b{AIl}}c}AfAA`}{{{b{ACb}}c}AfAA`}{{{b{Kb}}c}AfAA`}`{{{b{AFn}}}B`}````{{{b{AFn}}}{{b{n}}}}`{Kb{{Af{AHhAd}}}}{{{b{AIj}}}{{Bl{AJ`}}}}{bc{}}000000000000000{bMn}00`{{{b{AHb}}c}{{AJj{c}}}AJl}{{{b{AHf}}c}{{AJn{c}}}AJl}{{{b{Jd}}Cl{Bl{{b{AIf}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AK`}}}}}{{Bn{AK`}{{Bj{Cl}}}}}}{{{b{Jd}}Cl{Bl{{b{AIf}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000000{{}{{Af{c}}}{}}00000000000000000{{{b{E`}}}{{Af{JdAd}}}}0{b{{Af{AAjAAl}}}}00{bAAn}00000000000000000`{{}c{}}00000000000000000{{{b{Jd}}}Cl}{{{b{Jd}}}B`}{{AFnAFd}AFn}`{{AFn{Bl{n}}}AFn}{{{b{AHb}}ABjc}{{Af{fAd}}}AJl}{{{b{AHf}}ABjc}{{Af{fAd}}}AJl}```````````````````````````````````````````````````````","D":"GMf","p":[[1,"reference"],[5,"Private",3725],[1,"unit"],[5,"MetaNameSpace",5,3726],[6,"Expr",5,3727],[5,"StructNameSpace",5,3728],[5,"PlSmallStr",3729],[1,"slice"],[5,"Arc",3730],[6,"PolarsError",3731],[6,"Result",3732],[6,"Selector",5,3733],[10,"Into",3734],[5,"ArrayNameSpace",5,3735],[5,"ListNameSpace",5,3736],[1,"bool"],[10,"AsRef",3734],[10,"FunctionOutputField",5,3737],[5,"SpecialEq",5,3737],[6,"Column",3738],[17,"Output"],[6,"Option",3739],[10,"Fn",3740],[10,"Send",3741],[10,"Sync",3741],[0,"mut"],[6,"VisitRecursion",3742],[10,"FnMut",3740],[6,"FunctionExpr",5,3743],[1,"i64"],[6,"DataType",3744],[5,"SortOptions",3745],[5,"SortMultipleOptions",3745],[5,"FieldsMapper",5,3746],[5,"Field",3747],[10,"ColumnsUdf",5,3737],[10,"Any",3748],[6,"AggExpr",5,3727],[5,"Vec",3749],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1841,3750],[6,"Operator",5,3727],[10,"Clone",3751],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3737],[5,"UserDefinedFunction",5,3752],[10,"ColumnBinaryUdf",5,3737],[6,"CastOptions",3753],[5,"CategoricalNameSpace",5,3754],[5,"When",5,3755],[5,"Then",5,3755],[5,"ChainedWhen",5,3755],[5,"ChainedThen",5,3755],[6,"LazySerde",5,3727],[6,"Excluded",5,3727],[6,"BitwiseFunction",5,3756],[6,"BitwiseAggFunction",5,3756],[6,"BooleanFunction",5,3757],[6,"CategoricalFunction",5,3758],[6,"TemporalFunction",5,3759],[6,"PowFunction",5,3760],[6,"StringFunction",5,3761],[6,"StructFunction",5,3762],[5,"DatetimeArgs",5,3763],[5,"DurationArgs",5,3763],[5,"RollingCovOptions",5,3764],[5,"StrptimeOptions",5,3764],[5,"JoinOptions",5,3764],[6,"WindowType",5,3764],[6,"WindowMapping",5,3764],[6,"NestedType",5,3764],[5,"UnpivotArgsDSL",5,3764],[17,"Item"],[10,"IntoIterator",3765],[1,"u8"],[10,"ExprEvalExtension",5,3766],[1,"usize"],[1,"f64"],[10,"IntoVec",3767],[5,"Duration",3043,3768],[6,"ClosedWindow",3769],[6,"TimeUnit",3770],[10,"BinaryUdfOutputField",5,3737],[10,"Deserializer",3771],[10,"Deserialize",3771],[5,"Series",3772],[6,"DslPlan",3043,3773],[6,"NullBehavior",3774],[5,"DateLikeNameSpace",1863,3775],[10,"PartialEq",3776],[10,"Sized",3741],[10,"ListNameSpaceExtension",5,3777],[5,"EWMOptions",3778],[6,"FillNullStrategy",3779],[5,"Formatter",3780],[5,"Error",3780],[10,"UdfSchema",5,3781],[1,"i16"],[1,"u32"],[1,"u16"],[1,"i8"],[1,"f32"],[6,"InequalityOperator",3782],[6,"RangeFunction",3783],[6,"ListFunction",3784],[6,"ArrayFunction",3785],[6,"BinaryFunction",3786],[6,"BusinessFunction",3787],[5,"String",3788],[5,"FunctionOptions",3789],[5,"Schema",3790],[6,"Context",3773],[10,"Hasher",3791],[6,"InterpolationMethod",3792],[10,"IntoListNameSpace",5,3777],[10,"Display",3780],[6,"ClosedInterval",3793],[5,"ExprNameNameSpace",5,3794],[10,"Literal",3043,3795],[10,"FnOnce",3740],[5,"SuperTypeOptions",3796],[5,"PythonUdfExpression",2417,3797],[5,"UnitVec",3798],[1,"tuple"],[6,"QuantileMethod",3799],[5,"RankOptions",3043,3800],[5,"RollingGroupOptions",3043,3801],[5,"RollingOptionsFixedWindow",3802],[5,"Float64Type",3803],[5,"ChunkedArray",3804],[10,"Copy",3741],[5,"RollingOptionsDynamicWindow",3805],[6,"SearchSortedSide",3806],[10,"Serializer",3807],[10,"Serialize",3807],[6,"IsSorted",3808],[5,"StringNameSpace",2482,3809],[6,"ListToStructArgs",3810],[5,"CompactString",3811],[6,"ToCompactStringError",3811],[5,"TypeId",3748],[6,"Roll",3812],[6,"NonExistent",3813],[6,"RollingFunction",2226,3814],[6,"RollingFunctionBy",2264,3815],[6,"TrigonometricFunction",2297,3816],[5,"DataFrame",3817],[8,"PolarsResult",3731],[5,"LazyFrame",2550],[10,"IntoParallelIterator",3818],[5,"UnionArgs",3043,3789],[5,"PythonFunction",2417,3819],[5,"PyAny",3820],[5,"Py",3821],[5,"PythonGetOutput",2417,3797],[1,"char"],[5,"Node",3822],[6,"IR",3823],[5,"Arena",3822],[6,"AExpr",3824],[5,"LazyGroupBy",2550],[5,"OptFlags",2550,3825],[5,"JoinBuilder",2550],[10,"AnonymousScan",3043,3826],[5,"ScanArgsAnonymous",2550,3827],[8,"SchemaRef",3828],[8,"IdxSize",3829],[5,"InProcessQuery",2550,3830],[8,"PlHashMap",3831],[5,"LazyCsvReader",2550,3832],[5,"ScanArgsIpc",2550,3833],[5,"LazyJsonLineReader",2550,3834],[5,"ScanArgsParquet",2550,3835],[10,"LazyFileListReader",2550,3836],[5,"CloudOptions",3837],[6,"JoinCoalesce",3838],[5,"DynamicGroupOptions",3043,3801],[6,"JoinType",3043,3838],[5,"Iter",3839],[5,"IterNames",3839],[5,"JoinArgs",3043,3838],[10,"IntoLazy",2550],[8,"AllowedOptimizations",2550,3825],[5,"Path",3840],[5,"PathBuf",3840],[6,"ScanSources",3841],[5,"RowIndex",3842],[8,"Schema",3828],[8,"PyObject",3821],[5,"CsvWriterOptions",3043,3843],[5,"IpcWriterOptions",3043,3844],[5,"JsonWriterOptions",3043,3845],[5,"ParquetWriteOptions",3043,3846],[5,"IRPlan",3823],[6,"SinkType",3789],[6,"UniqueKeepStrategy",3817],[6,"JoinValidation",3043,3838],[8,"NonZeroUsize",3847],[6,"CsvEncoding",3848],[6,"NullValues",3848],[6,"Tz",3849],[6,"RankMethod",3043,3800],[6,"LiteralValue",3043,3795],[5,"AnonymousScanOptions",3043,3789],[6,"Ordering",3776],[6,"AnyValue",3850],[10,"PolarsTemporalGroupby",3043,3801],[6,"GroupsProxy",3851],[5,"Null",3043,3795],[5,"AnonymousScanArgs",3043,3826],[5,"IpcWriter",3844],[10,"Write",3852],[5,"ParquetWriter",3853],[5,"NaiveDateTime",3854],[8,"OpaqueColumnUdf",5],[15,"Quantile",1729],[15,"Min",1729],[15,"Max",1729],[15,"IsBetween",2150],[15,"Any",2150],[15,"All",2150],[15,"SortBy",1739],[15,"Filter",1739],[15,"Cast",1739],[15,"Sort",1739],[15,"Gather",1739],[15,"RenameAlias",1739],[15,"Ternary",1739],[15,"Function",1739],[15,"Window",1739],[15,"AnonymousFunction",1739],[15,"Slice",1739],[15,"BinaryExpr",1739],[15,"QCut",2153],[15,"Entropy",2153],[15,"Log",2153],[15,"Hist",2153],[15,"Cut",2153],[15,"Correlation",2153],[15,"Round",2153],[15,"TopK",2153],[15,"TopKBy",2153],[15,"RoundSF",2153],[15,"EwmMeanBy",2153],[15,"Clip",2153],[15,"BackwardFill",2153],[15,"ForwardFill",2153],[15,"Random",2153],[15,"GatherEvery",2153],[15,"ValueCounts",2153],[15,"Rank",2153],[15,"EwmMean",2153],[15,"EwmStd",2153],[15,"EwmVar",2153],[15,"ReplaceStrict",2153],[15,"CumCount",2153],[15,"CumSum",2153],[15,"CumProd",2153],[15,"CumMin",2153],[15,"CumMax",2153],[15,"ConcatHorizontal",2198],[15,"ConcatVertical",2198],[15,"ExtractGroups",2198],[15,"JsonDecode",2198],[15,"PadStart",2198],[15,"PadEnd",2198],[15,"SplitExact",2198],[15,"Contains",2198],[15,"Find",2198],[15,"Replace",2198],[15,"DatetimeFunction",2218],[15,"CorrCov",2261],[15,"GroupBy",3670],[15,"Union",3670],[15,"Sort",3670],[15,"Scan",3670],[15,"ExtContext",3670],[15,"DataFrameScan",3670],[15,"IR",3670],[15,"Select",3670],[15,"HStack",3670],[15,"MapFunction",3670],[15,"Cache",3670],[15,"Filter",3670],[15,"Distinct",3670],[15,"Slice",3670],[15,"Sink",3670],[15,"Join",3670],[15,"HConcat",3670],[15,"PythonScan",3670],[15,"Range",3722]],"r":[[8,3727],[23,3735],[32,3737],[35,3756],[36,3756],[38,3757],[45,3758],[46,3754],[50,3755],[51,3755],[55,3737],[57,3737],[78,3763],[90,3763],[101,3727],[106,3727],[107,3766],[108,3794],[116,3746],[117,3794],[127,3743],[128,3737],[134,3737],[149,3777],[165,3764],[172,3727],[179,3736],[180,3777],[195,3726],[214,3764],[221,3727],[222,3727],[234,3760],[246,3737],[258,3764],[267,3733],[279,3737],[287,3761],[294,3764],[296,3762],[297,3728],[305,3759],[307,3755],[329,3781],[332,3764],[335,3752],[340,3755],[343,3764],[344,3764],[392,3855],[396,3856],[403,3856],[406,3857],[410,3858],[412,3859],[427,3860],[429,3860],[435,3861],[436,3862],[438,3858],[440,3755],[528,3863],[535,3862],[538,3858],[635,3856],[636,3855],[637,3855],[638,3864],[639,3864],[640,3864],[641,3864],[650,3865],[652,3856],[656,3856],[661,3859],[662,3763],[663,3859],[664,3859],[826,3858],[828,3855],[829,3855],[830,3763],[935,3858],[981,3856],[984,3864],[1060,3858],[1107,3855],[1146,3859],[1147,3859],[1205,3862],[1207,3862],[1217,3858],[1220,3858],[1224,3795],[1234,3857],[1245,3858],[1248,3858],[1256,3862],[1260,3856],[1261,3862],[1264,3856],[1265,3862],[1273,3862],[1277,3856],[1304,3862],[1306,3858],[1319,3865],[1326,3858],[1329,3862],[1333,3856],[1337,3866],[1350,3865],[1351,3865],[1431,3865],[1439,3858],[1445,3862],[1449,3856],[1456,3755],[1459,3859],[1643,3858],[1698,3755],[1841,3750],[1862,3754],[1863,3775],[1937,3756],[1938,3756],[1940,3757],[1944,3758],[1994,3743],[2059,3760],[2099,3761],[2107,3762],[2112,3759],[2145,3743],[2146,3743],[2147,3743],[2148,3743],[2149,3743],[2220,3758],[2224,3760],[2231,3814],[2268,3815],[2312,3816],[2341,3763],[2342,3763],[2343,3855],[2344,3856],[2346,3856],[2347,3857],[2348,3859],[2349,3860],[2350,3860],[2351,3861],[2352,3862],[2353,3862],[2354,3856],[2355,3855],[2357,3855],[2359,3864],[2360,3864],[2363,3864],[2364,3864],[2365,3865],[2366,3856],[2367,3856],[2368,3859],[2369,3859],[2370,3763],[2371,3859],[2372,3859],[2375,3855],[2376,3855],[2377,3763],[2378,3856],[2379,3864],[2382,3855],[2383,3859],[2384,3859],[2385,3862],[2386,3862],[2387,3857],[2388,3862],[2389,3862],[2390,3862],[2394,3862],[2399,3862],[2400,3865],[2401,3862],[2402,3856],[2403,3866],[2404,3865],[2405,3865],[2408,3865],[2409,3862],[2410,3859],[2411,3859],[2417,3797],[2418,3797],[2419,3867],[2421,3819],[2422,3797],[2423,3797],[2482,3809],[2544,3752],[2550,3825],[2558,3830],[2561,3832],[2562,3836],[2565,3834],[2567,3825],[2574,3827],[2575,3833],[2576,3835],[3043,3826],[3044,3826],[3045,3789],[3053,3843],[3060,3773],[3061,3768],[3063,3801],[3081,3844],[3083,3838],[3084,3838],[3085,3838],[3086,3845],[3088,3795],[3089,3795],[3095,3795],[3096,3795],[3102,3846],[3103,3801],[3106,3800],[3107,3800],[3109,3801],[3125,3789],[3526,3868]],"b":[[669,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[670,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[671,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[760,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[761,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[762,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[763,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[764,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[833,"impl-Expr"],[834,"impl-PartialEq-for-Expr"],[838,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[839,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[946,"impl-Display-for-Expr"],[947,"impl-Debug-for-Expr"],[950,"impl-Display-for-Operator"],[951,"impl-Debug-for-Operator"],[953,"impl-Display-for-BitwiseFunction"],[954,"impl-Debug-for-BitwiseFunction"],[956,"impl-Debug-for-BooleanFunction"],[957,"impl-Display-for-BooleanFunction"],[958,"impl-Display-for-CategoricalFunction"],[959,"impl-Debug-for-CategoricalFunction"],[960,"impl-Display-for-TemporalFunction"],[961,"impl-Debug-for-TemporalFunction"],[962,"impl-Debug-for-PowFunction"],[963,"impl-Display-for-PowFunction"],[964,"impl-Debug-for-StringFunction"],[965,"impl-Display-for-StringFunction"],[966,"impl-Debug-for-StructFunction"],[967,"impl-Display-for-StructFunction"],[968,"impl-Display-for-FunctionExpr"],[969,"impl-Debug-for-FunctionExpr"],[998,"impl-From%3Ci16%3E-for-Expr"],[999,"impl-From%3Cu32%3E-for-Expr"],[1000,"impl-From%3Cu64%3E-for-Expr"],[1001,"impl-From%3Cbool%3E-for-Expr"],[1002,"impl-From%3Ci64%3E-for-Expr"],[1003,"impl-From%3Ci32%3E-for-Expr"],[1004,"impl-From%3Cu16%3E-for-Expr"],[1005,"impl-From%3Ci8%3E-for-Expr"],[1006,"impl-From%3Cf64%3E-for-Expr"],[1007,"impl-From%3Cf32%3E-for-Expr"],[1009,"impl-From%3C%26str%3E-for-Expr"],[1010,"impl-From%3CAggExpr%3E-for-Expr"],[1011,"impl-From%3Cu8%3E-for-Expr"],[1016,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1017,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1018,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1020,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1021,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1022,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1023,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1024,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1025,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1026,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1027,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1028,"impl-From%3CBitwiseFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1037,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[1038,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[1039,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[1040,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[1052,"impl-From%3CPlSmallStr%3E-for-Selector"],[1053,"impl-From%3CString%3E-for-Selector"],[1054,"impl-From%3C%26str%3E-for-Selector"],[1055,"impl-From%3CExpr%3E-for-Selector"],[1079,"impl-Hash-for-Expr"],[1080,"impl-Expr"],[1389,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1390,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1391,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1392,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1393,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2247,"impl-Debug-for-RollingFunction"],[2248,"impl-Display-for-RollingFunction"],[2283,"impl-Debug-for-RollingFunctionBy"],[2284,"impl-Display-for-RollingFunctionBy"],[2327,"impl-Debug-for-TrigonometricFunction"],[2328,"impl-Display-for-TrigonometricFunction"],[2600,"impl-Flags-for-OptFlags"],[2601,"impl-OptFlags"],[2739,"impl-UpperHex-for-OptFlags"],[2740,"impl-LowerHex-for-OptFlags"],[2741,"impl-Octal-for-OptFlags"],[2742,"impl-Binary-for-OptFlags"],[2743,"impl-Debug-for-OptFlags"],[2747,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2748,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2758,"impl-Flags-for-OptFlags"],[2759,"impl-OptFlags"],[3001,"impl-LazyFileListReader-for-LazyCsvReader"],[3002,"impl-LazyCsvReader"],[3003,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3004,"impl-LazyJsonLineReader"],[3020,"impl-LazyCsvReader"],[3021,"impl-LazyFileListReader-for-LazyCsvReader"],[3022,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3023,"impl-LazyJsonLineReader"],[3386,"impl-Debug-for-Duration"],[3387,"impl-Display-for-Duration"],[3390,"impl-Debug-for-JoinType"],[3391,"impl-Display-for-JoinType"],[3392,"impl-Display-for-JoinValidation"],[3393,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKIKDwEEABMAGQAVADAAAgA1AAIAOQAAADsAEwBQAAoAXAAIAGYAAwBsAAAAbgAZAIkAGwCmAAMAqwAIALUADgDFABUA3AAGAOQAKAAOAQkAGQEQACsBBwA1ARoAUQEDAFYBAABYASsAhQEBAIsBAACOAQEAkgEAAJgBAACaAQAApQEAAKgBAACvAQEAsgEBALcBAAC6AQAAxAFKABECAAATAgAAFQIBABsCAAAiAlkAgAIAAJoCDQCpAmUAEQMAABMDJAA5AwAAOwMAAEEDAABDAxYAWwM4AJwDAACgAwEApgMAAKwDAACvAyYA1wMAAOcDCQDyAwIA9wMAAPkDAgD9AwgADgQDABkEAAAdBAMAIwQAACUEAAAqBAEALwQEADcEAQA6BBIAUAQBAFMEAABVBCQApAQCAKgEAQCsBAAAvwQAAMcEAADUBAAA1wQFAOAEAADjBAAA6AQAAPQEAAD3BAIA/wQCAAMFAwAMBQEAEAUCABUFAAAXBQEAHQUAACQFAAAmBQEALQUAAC8FAAA3BQEAPQUAAD8FAABBBQAARgUCAGAFBQBnBRwAjQUAAJQFAACbBQAAoAUAAKIFAQClBQAAqwUBALEFAACzBQAAtQUCALwFHgDcBQoA6wVJADcGAAA6BjIAeAYAAHoGAAB8BiYApgYBAKsGAAC4BgAAvAYBAMEGEwDXBgAA2QYAANsGAQDeBgEA4QYGAOkGSAAzBwMAOAcCAD0HAgBDBwMASwcBAFQHAgBaBwAAXAcAAGkHAAB4BwMAgAdJAcsIAQDOCB8A7wgBAPIIJwAbCQEAHgkHACoJAAA5CQAARgkBAE0JAQBYCQIAXAkDAGUJAwBtCQYAdQkBAHgJGwCWCQAAmAkDAJ8JEwC0CQMAuwkCAL8JAADCCQAAxwkCAMwJAQDsCQMA/wkDAAYKAQAPCgIAEwoJACAKAAAiCgAAKQoAAC0KFABDCgEASAoaAGcKAQBrCgAAcAoAAHQKGACSCgIAlgoHAK8KAACxCgEAtAoEALwKAQDHCgAAzgoCANYKAQDZCgwA9AoAAPwKAAD+CgEAAwsBAAYLAAAICwAADAsAABELAwAWCwUAHwsBACULAwAxCwMANgsBADsLAwBACwAAQwsAAEwLAABRCwEAWwsBAF4LCABoCx8AigsAAIwLAACPCwEAkgsJAJ0LAACgCwEAqgsBALMLAQC6CwAAvAsAAL4LAADOCwEA2wsBAOILBwDtCwAA8AsBAPMLAAD1CwMA+wsAAP4LAAACDAMACgwAAAwMBgAWDAIAGgwAAB0MCgApDAIALgwAADAMAAA2DBMATQxaAKwMiwA5DRMAUg0AAF0NAABhDQAAYw0RAHYNAAB5DREAnQ0DAKINAgCmDQAAqQ0DALANBQC3DQEAuw0AAL4NAgDCDQEAxg0AAMgNAQDNDRUA5A12AFwOBABiDisA"}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNNNNNEEPKPPGKKNMMMNNHHHNNNHHHHNNNNNNNNNNNNNNHHNNHHHHHHHHHNHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_cross","is_ie","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","vzip","","","","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","count_ones","count_zeros","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_positive_idx_uncertain_col","is_sorted","","leading_ones","leading_zeros","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","trailing_ones","trailing_zeros","try_from","try_into","type_id","value_counts","","vzip"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[240,"polars_ops::prelude"],[242,"polars_ops::series"],[301,"polars_ops::chunked_array::binary"],[302,"polars_core::datatypes"],[303,"polars_ops::chunked_array::binary::namespace"],[304,"polars_ops::chunked_array::scatter"],[305,"polars_utils::index"],[306,"polars_core::series"],[307,"polars_error"],[308,"core::marker"],[309,"core::option"],[310,"core::iter::traits::collect"],[311,"polars_ops::chunked_array::list::namespace"],[312,"polars_core::datatypes::aliases"],[313,"polars_core::frame::column"],[314,"polars_core::chunked_array::ops::sort::options"],[315,"polars_core::frame"],[316,"dyn_clone::sealed"],[317,"polars_utils::pl_str"],[318,"polars_ops::frame::join::hash_join"],[319,"polars_ops::frame::join::args"],[320,"polars_ops::frame::join::cross_join"],[321,"core::fmt"],[322,"core::convert"],[323,"core::hash"],[324,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[325,"polars_arrow::array::primitive"],[326,"alloc::string"],[327,"core::result"],[328,"compact_str"],[329,"core::any"],[330,"polars_ops::series::ops::arg_min_max"],[331,"polars_ops::series::ops"],[332,"polars_core::chunked_array::ops::search_sorted"],[333,"polars_ops::series::ops::various"],[334,"polars_ops::frame::join::general"],[335,"polars_ops::series::ops::clip"],[336,"polars_ops::series::ops::horizontal"],[337,"polars_ops::series::ops::index"],[338,"polars_ops::series::ops::bitwise"],[339,"polars_ops::series::ops::negate"],[340,"polars_ops::series::ops::not"],[341,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`25432543254325432255443325443322543Ej3654F`0004476514765666514154`4444476565476547656547654476544``Gf`00```0Gb0Gd22```222````2222Gh033333333``00`````````3``333003","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}0000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{DlDf}{cc{}}000{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}00{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}>{{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`===={{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{{d{Ad}}}{{Af{Ad}}}}0{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}0{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{C`}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0??{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}22{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0;","D":"En","p":[[10,"AsBinary",4,301],[1,"reference"],[8,"BinaryChunked",302],[10,"BinaryNameSpaceImpl",4,303],[1,"u8"],[1,"slice"],[8,"BooleanChunked",302],[10,"ChunkedSet",4,304],[8,"IdxSize",305],[5,"Series",306],[8,"PolarsResult",307],[10,"Copy",308],[17,"Item"],[6,"Option",309],[10,"IntoIterator",310],[8,"UInt32Chunked",302],[10,"AsList",25],[8,"ListChunked",302],[10,"ListNameSpaceImpl",25,311],[1,"str"],[1,"bool"],[8,"StringChunked",302],[8,"IdxCa",312],[6,"Column",313],[1,"i64"],[1,"usize"],[5,"SortOptions",314],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",315],[5,"Private",316],[1,"unit"],[5,"PlSmallStr",317],[10,"JoinDispatch",80,318],[5,"JoinArgs",80,319],[0,"mut"],[6,"JoinCoalesce",80,319],[6,"JoinType",80,319],[6,"JoinValidation",80,319],[10,"CrossJoin",80,320],[1,"tuple"],[8,"ChunkJoinOptIds",80,319],[5,"Formatter",321],[8,"Result",321],[10,"DataFrameJoinOps",80],[10,"Into",322],[10,"Hasher",323],[10,"SeriesJoin",80,324],[8,"InnerJoinIds",80,319],[5,"PrimitiveArray",325],[8,"LeftJoinIds",80,319],[5,"String",326],[6,"Result",327],[5,"CompactString",328],[6,"ToCompactStringError",328],[5,"TypeId",329],[10,"ArgAgg",242,330],[10,"SeriesSealed",242,331],[6,"SearchSortedSide",242,332],[10,"SeriesMethods",242,333],[5,"Error",321]],"r":[[4,301],[5,303],[6,304],[26,311],[80,319],[81,319],[84,320],[88,319],[89,319],[90,319],[91,318],[93,319],[94,319],[97,319],[103,324],[108,334],[111,334],[114,334],[144,318],[240,80],[241,76],[243,330],[246,332],[247,333],[248,331],[255,335],[256,335],[257,335],[261,336],[262,337],[263,338],[264,338],[279,337],[280,337],[283,338],[284,338],[285,336],[286,336],[287,336],[288,339],[289,340],[290,341],[291,336],[293,338],[294,338]],"b":[[171,"impl-Debug-for-JoinType"],[172,"impl-Display-for-JoinType"],[173,"impl-Debug-for-JoinValidation"],[174,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAP4AEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAkALYADADIAAMAzQAAAM8AJAD1AAUA/QACAAMBEAAVAQEAHAEOAC0BAAA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj12312312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{{}Bj}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgATAFIABABaAAAAXQAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKPNMNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","Time","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","vzip","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_parse","try_parse_interval","try_to_compact_string","type_id","","","","","","","vzip","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[295,"polars_time::series"],[316,"polars_utils::pl_str"],[317,"chrono::naive::datetime"],[318,"polars_time::windows::duration"],[319,"polars_time::windows::group_by"],[320,"polars_core::datatypes::time_unit"],[321,"polars_arrow::legacy::time_zone"],[322,"core::option"],[323,"polars_core::chunked_array::logical::datetime"],[324,"polars_error"],[325,"polars_time::round"],[326,"polars_core::datatypes"],[327,"chrono::naive::time"],[328,"polars_core::chunked_array::logical::time"],[329,"polars_time::truncate"],[330,"polars_time::upsample"],[331,"polars_core::frame"],[332,"polars_core::utils"],[333,"dyn_clone::sealed"],[334,"polars_time::chunkedarray::string::patterns"],[335,"core::fmt"],[336,"core::hash"],[337,"core::result"],[338,"core::any"],[339,"core::clone"],[340,"polars_time::windows::bounds"],[341,"polars_time::windows::window"],[342,"core::cmp"],[343,"polars_core::datatypes::dtype"],[344,"polars_core::frame::group_by::proxy"],[345,"alloc::vec"],[346,"alloc::string"],[347,"core::ops::function"],[348,"compact_str"],[349,"polars_core::series"],[350,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``00Bn11111111111111`11111111`Dn``D`000000000`0000Df1112111:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<>>33221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<<<01<>32=01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0```````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}0{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}5````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}7````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}0000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{{{n{Bd}}}{{Ad{f}}}}0{n{{Cl{FnG`}}}}{nCn}000000{{}c{}}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",316],[5,"NaiveDateTime",317],[5,"Duration",85,318],[6,"ClosedWindow",85,319],[6,"TimeUnit",320],[6,"Tz",321],[1,"reference"],[6,"Option",322],[8,"DatetimeChunked",323],[8,"PolarsResult",324],[1,"bool"],[10,"PolarsRound",0,325],[8,"StringChunked",326],[5,"NaiveTime",327],[8,"TimeChunked",328],[10,"PolarsTruncate",0,329],[10,"PolarsUpsample",0,330],[1,"str"],[5,"DataFrame",331],[10,"IntoVec",332],[5,"Private",333],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,334],[1,"usize"],[5,"Formatter",335],[8,"Result",335],[10,"Hasher",336],[6,"Result",337],[5,"TypeId",338],[5,"DatetimeInfer",58],[10,"Clone",339],[10,"PolarsNumericType",326],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",85,340],[6,"Label",85,319],[6,"StartBy",85,319],[5,"Window",85,341],[6,"Ordering",342],[6,"DataType",343],[5,"BoundsIter",85,341],[8,"GroupsSlice",344],[8,"TimeZone",343],[5,"Vec",345],[1,"tuple"],[5,"String",346],[17,"Output"],[10,"Fn",347],[5,"CompactString",348],[6,"ToCompactStringError",348],[1,"u32"],[10,"AsSeries",295],[5,"Series",349],[10,"TemporalMethods",295],[8,"Int32Chunked",326],[8,"Int8Chunked",326],[8,"BooleanChunked",326],[8,"Int16Chunked",326]],"r":[[1,319],[2,318],[5,325],[6,329],[7,330],[9,341],[11,350],[12,350],[18,350],[22,24],[30,334],[86,340],[87,341],[88,319],[91,318],[93,319],[101,319],[103,295],[107,341],[176,318],[177,318],[207,319],[208,319]],"b":[[191,"impl-Display-for-Duration"],[192,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAIBFwAAAAkADQAFABQAAAAXABgAMQACADUAEgBJAAEATAAUAGIACQBtAFcAzAAAAM4AAQDSAAoA5AABAOgAAgDsAAAA7wACAPMAAQD4AAgAAgEAAAQBAAAGASQALwEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCCQCCCQCCCCCCCCCCCQCRKMMHHHRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNKNNNNNNKMHHHFKFNNNNNNNNNNNNNNMNNNNNNNHNNNHNNNNNNNNNNNNNNNNNNNNNNNNECFGPFPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIKFIKRIKFKNNNNHNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNJSFFKNNNNNNNNNNNNNHNNNNNNNNNNNNNNNHNMNNNNNMNNNNNKKKKMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNNKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","algebraic_ops","aliases","arena","binary_search","cache","cardinality_sketch","cell","chunks","clmul","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_map","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","python_function","slice","sort","sync","sys","total_ord","unitvec","vec","Abs","AbsDiff","abs_diff","max_abs_diff","alg_add_f64","alg_mul_f64","alg_sum_f64","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","last_node","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","vzip","","with_capacity","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","vzip","","CardinalitySketch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","combine","default","deref","deref_mut","drop","estimate","from","init","insert","into","new","to_owned","try_from","try_into","type_id","vzip","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","vzip","Chunks","as_slice","borrow","borrow_mut","chunk_size","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","init","into","into_iter","new","next","next_back","size_hint","skip_in_place","to_owned","try_from","try_into","type_id","vzip","clmul64","portable_clmul64","portable_prefix_xorsum","portable_prefix_xorsum_inclusive","prefix_xorsum","prefix_xorsum_inclusive","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","vzip","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","nan_value","FloorDivMod","wrapping_floor_div_mod","arc_map","range_portion","try_arc_map","BytesHash","DirtyHash","HashPartitioner","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","dirty_hash","","drop","","eq","equivalent","","fmt","folded_multiply","from","","hash","hash_to_partition","","init","","into","","is_null","new","","num_partitions","peel_total_ord","to_owned","","to_total_ord","tot_eq","tot_hash","try_from","","try_into","","type_id","","unwrap_inner","vzip","","BytesIndexMap","bytes_idx_map","BytesIndexMap","Entry","Occupied","OccupiedEntry","Vacant","VacantEntry","borrow","","","","borrow_mut","","","","default","deref","","","","deref_mut","","","","drop","","","","entry","from","","","","get_index_unchecked","index","","init","","","","insert","into","","","","into_mut","is_empty","iter_hash_keys","len","new","reserve","try_from","","","","try_into","","","","type_id","","","","vzip","","","","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clear","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","vzip","with_capacity","AtomicIdxSize","Bounded","ChunkId","IdxSize","Indexable","Item","NonZeroIdxSize","NullCount","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","vzip","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","into_py_dict_bound","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","vzip","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","vzip","","","","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","vzip","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","vzip","PYTHON3_VERSION","PYTHON_SERDE_MAGIC_BYTE_MARK","PySerializeWrap","PythonFunction","TrySerializeToBytes","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","deref","","deref_mut","","deserialize","","deserialize_pyobject_bytes_maybe_cloudpickle","drop","","eq","equivalent","","fmt","from","","","init","","into","","serialize","","serialize_pyobject_with_cloudpickle_fallback","to_owned","try_deserialize_bytes","","try_from","","try_into","","try_serialize_to_bytes","","type_id","","vzip","","Extrema","Slice2Uninit","SliceAble","SortedSlice","as_uninit","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","vzip","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","vzip","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","vzip","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[47,"polars_utils::abs_diff"],[51,"polars_utils::algebraic_ops"],[54,"polars_utils::aliases"],[72,"polars_utils::arena"],[141,"polars_utils::binary_search"],[146,"polars_utils::cache"],[185,"polars_utils::cardinality_sketch"],[207,"polars_utils::cell"],[228,"polars_utils::chunks"],[254,"polars_utils::clmul"],[260,"polars_utils::cpuid"],[262,"polars_utils::fixedringbuffer"],[286,"polars_utils::float"],[293,"polars_utils::floor_divmod"],[295,"polars_utils::functions"],[298,"polars_utils::hashing"],[352,"polars_utils::idx_map"],[354,"polars_utils::idx_map::bytes_idx_map"],[420,"polars_utils::idx_vec"],[465,"polars_utils::index"],[531,"polars_utils::io"],[534,"polars_utils::itertools"],[544,"polars_utils::itertools::enumerate_idx"],[572,"polars_utils::mem"],[577,"polars_utils::min_max"],[584,"polars_utils::mmap"],[689,"polars_utils::nulls"],[694,"polars_utils::ord"],[696,"polars_utils::partitioned"],[716,"polars_utils::pl_str"],[775,"polars_utils::priority"],[799,"polars_utils::python_function"],[847,"polars_utils::slice"],[858,"polars_utils::sort"],[860,"polars_utils::sync"],[888,"polars_utils::sys"],[903,"polars_utils::total_ord"],[954,"polars_utils::vec"],[968,"num_traits"],[969,"core::cmp"],[970,"core::marker"],[971,"core::fmt"],[972,"core::iter::traits::collect"],[973,"core::clone"],[974,"core::result"],[975,"serde::de"],[976,"core::option"],[977,"core::hash"],[978,"core::default"],[979,"core::ops::function"],[980,"serde::ser"],[981,"core::any"],[982,"core::borrow"],[983,"alloc::sync"],[984,"core::ops::range"],[985,"core::iter::traits::iterator"],[986,"alloc::vec"],[987,"core::slice::iter"],[988,"polars_error"],[989,"std::path"],[990,"std::io::error"],[991,"std::fs"],[992,"core::ops::arith"],[993,"num_traits::cast"],[994,"num_traits::identities"],[995,"pyo3::marker"],[996,"pyo3::types::dict"],[997,"pyo3::instance"],[998,"core::iter::traits::exact_size"],[999,"core::iter::traits::double_ended"],[1000,"memmap2"],[1001,"memmap2::advice"],[1002,"polars_utils::mmap::private"],[1003,"bytes::bytes"],[1004,"std::io"],[1005,"hashbrown::map"],[1006,"hashbrown::raw_entry"],[1007,"std::ffi::os_str"],[1008,"core::convert"],[1009,"alloc::string"],[1010,"compact_str"],[1011,"alloc::boxed"],[1012,"alloc::borrow"],[1013,"polars_utils::python_function::serde_wrap"],[1014,"core::mem::maybe_uninit"],[1015,"rayon_core::thread_pool"]],"i":"```````````````````````````````````````````````d`00```ACj```````0AjAlAClACn43210``B`Bd10110101010001010101011000010111111001011111011101110101011011011`Dn``0``EjEd10000010101011000010010100100101010`F`00000000000000000000`Fd0000000000000000000`Fh000000000000000000000000`````````Fl0000000000000000000000`Fn00000`G```````GfGh101010101010Gj2212222`212`121212211221222212121221````H``0`Gn1HdHf23102231023102310223102102310023101222222310231023102310``Hj000000000000000000000000000000000000000000`````Ij````IfIh10`101010101010111010110221101010In122021J`2Jb44343434343````Jl0`000000`Jn00000000000000000000000000``````Ld00000Ll````Lf0Lj12012Ln123013030303223301230123011`230123330013033003302301230122201103000203303023012301230122301Il0`00```Nd000000000000000000Nl0`00000000000000000000000000000000000000000000000000000000`A@b0000000000000000000000`````A@fA@d10000101010`100000100101010`0A@h12121012121````A@nAAb`AAd0AAf0```AAl00000000000000000000000000``AAn000000000000ABl````0`ABb0``00000000000000000000000101AAhABd11ABf022133333```AC```00ACb`ACdACf1ACh","f":"`````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}{{AbAb}Ab}0{cAb{{Af{}{{Ad{Ab}}}}}}````````22222{Ahc{}}{Ah{{Aj{ce}}}{}{}}{Ah{{Al{c}}}{}}22``{{{Bb{An{B`{c}}}}c}Bd{}}{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{An{B`{c}}}}}Bf{}}{{{Bb{Bd}}}Bd}{{{Bb{{B`{c}}}}}{{B`{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{{Bb{Bd}}{Bb{Bd}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Bd}{{}{{B`{c}}}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{Bd}}}Bn}{c{{Bl{{B`{e}}}}}BnC`}{AhBf}0{{{Bb{An{B`{c}}}}Bd}BdBh}{{{Bb{Bd}}{Bb{Bd}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Bd}}{Bb{AnCd}}}Cf}{{{Bb{{B`{c}}}}{Bb{AnCd}}}Cfl}{cc{}}0{{{Bb{{B`{c}}}}Bd}{{Bb{c}}}{}}{{{Bb{An{B`{c}}}}{Ch{Bd}}}{{Ch{{Bb{Anc}}}}}{}}{{{Bb{An{B`{c}}}}Bd}{{Bb{Anc}}}{}}{{{Bb{{B`{c}}}}{Bb{c}}}{{Cj{Bd}}}{}}3{{{Bb{Bd}}{Bb{Anc}}}BfCl}{{}Ah}0{{}c{}}0{{{Bb{{B`{c}}}}}Cb{}}{{{Bb{An{B`{c}}}}}{{Cj{Bd}}}{}}{{{Bb{{B`{c}}}}}Ah{}}{{}{{B`{c}}}{}}{{{Bb{Bd}}{Bb{Bd}}}{{Cj{Bj}}}}{{{Bb{An{B`{c}}}}}{{Cj{c}}}{}}{{{Bb{An{B`{c}}}}Bdc}c{}}{{{Bb{An{B`{c}}}}Bde}BfCn{{Db{c}{{D`{c}}}}}}{{{Bb{Bd}}c}BlDd}{{{Bb{{B`{c}}}}e}BlDfDd}{{{Bb{An{B`{c}}}}BdBd}Bf{}}{{{Bb{An{B`{c}}}}Bd}cCn}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{An{B`{c}}}}Bde}{{Bl{Bf`}}}Cn{{Dh{c}{{D`{{Bl{c`}}}}}}}}{BbDj}0{{{Bb{{B`{c}}}}}Dl{}}{{}c{}}0{Ah{{B`{c}}}{}}`{{{Bb{Dn}}e}{{Bl{AhAh}}}{}{{Dh{{Bb{c}}}{{D`{Bj}}}}}}{{{Bb{{E`{c}}}}c}AhEb}0{{{Bb{Dn}}e}Ah{}{{Dh{{Bb{c}}}{{D`{Cb}}}}}}``{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{Ed{ce}}}}}{{Ed{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Ed{ce}}}{EfEh}{}}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{An{Ej{ceg}}}}cCb}e{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{cc{}}0{{{Bb{{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{g}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}}{{Cj{{Bb{Ang}}}}}{EfEhEl}{{En{c}}EfEh}{}}{{{Bb{An{Ed{eg}}}}{Bb{c}}i}{{Bb{Ang}}}{}{{En{c}}EfEh}{}{{Db{{Bb{e}}}{{D`{g}}}}}}{{}Ah}0{{{Bb{An{Ed{ce}}}}ce}{{Bb{Ane}}}{EfEh}{}}{{}c{}}0{{gAh}{{Ej{ceg}}}{EfEhBh}j{{Dh{c}{{D`{e}}}}}}{Ah{{Ed{ce}}}{EfEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}0{{{Bb{An{Ed{eg}}}}{Bb{c}}k}{{Bl{{Bb{Ang}}i}}}{}{{En{c}}EfEh}{}{}{{Db{{Bb{e}}}{{D`{{Bl{gi}}}}}}}}{{}{{Bl{c}}}{}}0{BbDj}077`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{F`}}}F`}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{AnF`}}{Bb{F`}}}Bf}{{}F`}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{F`}}}Ah}{cc{}}{{}Ah}{{{Bb{AnF`}}Fb}Bf}{{}c{}}8{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}4`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{}{{Fd{c}}}Cn}>=<{Ffc{}}{c{{Fd{c}}}{}}<{{{Bb{{Fd{c}}}}}{}El}{{{Bb{An{Fd{c}}}}}{{Bb{Anc}}}El}=;{{{Fd{c}}}c{}}3{{}};:9=`{{{Bb{{Fh{c}}}}}{{Bb{{E`{c}}}}}{}}98{{{Bb{{Fh{c}}}}}Ah{}}{{{Bb{{Fh{c}}}}}{{Fh{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Fh{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}Ah}{{}c{}}0{{{Bb{{E`{c}}}}Ah}{{Fh{c}}}{}}{{{Bb{An{Fh{c}}}}}{{Cj{e}}}{}{}}0{{{Bb{{Fh{c}}}}}{{Fj{Ah{Cj{Ah}}}}}{}}{{{Bb{An{Fh{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}8{{FbFb}Fb}0{FbFb}000{{}Cb}0`{{{Bb{{Fl{c}}}}}{{Fj{{Bb{{E`{c}}}}{Bb{{E`{c}}}}}}}{}}{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Fl{c}}}}}Ah{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{An{Fl{c}}}}}Bf{}}{AhBf}{{{Bb{An{Fl{c}}}}cAh}Ahj}{cc{}}{{}Ah}{{}c{}}{{{Bb{{Fl{c}}}}}Cb{}}09{Ah{{Fl{c}}}{}}{{{Bb{An{Fl{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Fl{c}}}}c}{{Cj{Bf}}}{}}<{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}7`{{}Cb}0{{{Bb{Fn}}}Cb}10{{}Fn}`{{G`G`}{{Fj{G`G`}}}}{{{Gb{c}}e}{{Gb{c}}}Bh{{Dh{c}{{D`{c}}}}}}{{AhAh{Gd{Ah}}}{{Gd{Ah}}}}{{{Gb{c}}g}{{Bl{{Gb{c}}e}}}Bh{}{{Dh{c}{{D`{{Bl{ce}}}}}}}}```{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{Gf}}}Gf}{{{Bb{Gh}}}Gh}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{{{Bb{Gj}}}Fb}{{{Bb{Gf}}}Fb}{AhBf}0{{{Bb{Gf}}{Bb{Gf}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Gf}}{Bb{AnCd}}}Cf}{{FbFb}Fb}{cc{}}0{{{Bb{Gf}}{Bb{Anc}}}BfCl}{{FbAh}Ah}{{{Bb{Gh}}Fb}Ah}{{}Ah}0{{}c{}}0{{{Bb{Gf}}}Cb}{{{Cj{{Bb{{E`{Gl}}}}}}Fb}Gf}{{AhFb}Gh}{{{Bb{Gh}}}Ah}{ce{}{}}{Bbc{}}0{{{Bb{Gf}}}c{}}{{{Bb{Gf}}{Bb{Gf}}}Cb}<{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0{Gfc{}}<<````````{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{}{{Gn{c}}}{}}{Ah{{Bb{c}}}{}}000{Ah{{Bb{Anc}}}{}}000{AhBf}000{{{Bb{An{Gn{c}}}}Fb{Bb{{E`{Gl}}}}}{{H`{c}}}{}}{cc{}}000{{{Bb{{Gn{c}}}}Hb}{{Fj{Fb{Bb{{E`{Gl}}}}{Bb{c}}}}}{}}{{{Bb{{Hd{c}}}}}Hb{}}{{{Bb{{Hf{c}}}}}Hb{}}{{}Ah}000{{{Hf{c}}c}{{Bb{Anc}}}{}}{{}c{}}000{{{Hd{c}}}{{Bb{Anc}}}{}}{{{Bb{{Gn{c}}}}}Cb{}}{{{Bb{{Gn{c}}}}}{{`{{Hh{}{{Ad{{Fj{Fb{Bb{{E`{Gl}}}}}}}}}}}}}{}}{{{Bb{{Gn{c}}}}}Hb{}}?{{{Bb{An{Gn{c}}}}Ah}Bf{}}{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}0008888``{{{Bb{An{Hj{c}}}}}{{Bb{An{E`{c}}}}}{}}0{{{Bb{{Hj{c}}}}}{{Bb{{E`{c}}}}}{}}0{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Hj{c}}}}}Ah{}}{{{Bb{An{Hj{c}}}}}Bf{}}{{{Bb{{Hj{c}}}}}{{Hj{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{}{{Hj{c}}}{}}{Ah{{Bb{c}}}{}}{{{Bb{{Hj{c}}}}}{{Bb{e}}}{}{}}{Ah{{Bb{Anc}}}{}}{AhBf}8{{{Bb{{Hj{c}}}}{Bb{{Hj{c}}}}}CbHl}{{Bb{Bb{c}}}Cb{}}0{{{Bb{An{Hj{c}}}}e}Bf{}{{Af{}{{Ad{c}}}}}}{{{Bb{{Hj{c}}}}{Bb{AnCd}}}Cfl}{{{Bb{{E`{c}}}}}{{Hj{c}}}Bh}{{{Hn{c}}}{{Hj{c}}}{}}{cc{}}{e{{Hj{c}}}{}{{Af{}{{Ad{c}}}}}}{{}Ah}{{}c{}}{{{Bb{{Hj{c}}}}}Cb{}}{{{Bb{{Hj{c}}}}}{{I`{c}}}{}}{{{Bb{An{Hj{c}}}}}{{Ib{c}}}{}}{{{Bb{{Hj{c}}}}}Ah{}}{{}{{Hj{c}}}{}}{{{Bb{An{Hj{c}}}}}{{Cj{c}}}{}}{{{Bb{An{Hj{c}}}}c}Bf{}}0{{{Bb{An{Hj{c}}}}Ah}Bf{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}<{Ah{{Hj{c}}}{}}``````````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{{E`{Hb}}}}Hb}{{Id{Bf}}}}{{{Bb{If}}}If}{{{Bb{Ih}}}Ih}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{AhBf}0{{{Bb{If}}{Bb{If}}}Cb}{{Bb{Bb{c}}}Cb{}}0{Ih{{Fj{HbHb}}}}{{{Bb{If}}{Bb{AnCd}}}Cf}{{{Bb{Ih}}{Bb{AnCd}}}Cf}{cc{}}{HbIf}1{{{Bb{{Ij{}{{Ad{c}}}}}}Ah}cIl}0{{{Bb{If}}}Hb}{{}Ah}0`{{{Bb{AnIh}}}{{Bb{AnFb}}}}{{}c{}}0{{{Bb{In}}}Cb}{{{Bb{Ih}}}Cb}{{{Bb{If}}}Cb}{{{Bb{c}}}Cb{}}{{{Bb{In}}}Ah}{{}If}{{}Ih}{{{Bb{J`}}}Ah}{{HbHb}Ih}{{JbFb}Hb}{{{Bb{If}}}{{Cj{Hb}}}}{Bbc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{BbDj}0??{{{Bb{Jd}}Jf}Jh}{{{Bb{Jd}}}{{Id{Jj}}}}0`{JlCb}{Jl{{Hn{c}}}{}}`{Jl{{Jn{JlHb}}}}{Jl{{Jn{JlDl}}}}{{Jlcg}CbAf{}{{Dh{e}{{D`{Cb}}}}}}{{Jlcg}{{Cj{Bj}}}Af{}{{Dh{e}{{D`{{Cj{Bj}}}}}}}}{Jl{{Bl{ce}}}{}{}}{Jl{{Bl{{Hn{c}}e}}}{}{}}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{Jn{ce}}}}}{{Jn{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Jn{ce}}}AhHh{{K`{}{{D`{}}}}KbKdKfj}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{Jn{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}0{Kh{{Kl{Kj}}}}{{{Bb{{Jn{ce}}}}}AhKn{{K`{}{{D`{}}}}KbKdKfj}}{c{{Jn{ce}}}{}L`}{{{Bb{An{Jn{ce}}}}}{{Cj{g}}}Hh{{K`{}{{D`{}}}}KbKdKfj}{}}{{{Bb{An{Jn{ce}}}}}{{Cj{{Fj{e}}}}}{KnLb}{{K`{}{{D`{}}}}KbKdKfj}}{{{Bb{An{Jn{ce}}}}Ah}{{Cj{g}}}Hh{{K`{}{{D`{}}}}KbKdKfj}{}}{{{Bb{An{Jn{ce}}}}Ah}{{Cj{{Fj{e}}}}}{KnLb}{{K`{}{{D`{}}}}KbKdKfj}}{{{Bb{{Jn{ce}}}}}{{Fj{Ah{Cj{Ah}}}}}Hh{{K`{}{{D`{}}}}KbKdKfj}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}<{{{Bb{{E`{Gl}}}}}Bf}000{{{Bb{{E`{c}}}}}{{Bb{An{E`{c}}}}}j}`{{LdLd}Ld}000{{{Bb{Ld}}{Bb{Ld}}}Cb}0`````{{{Bb{Lf}}Lh}{{Bl{BfJf}}}}{{{Bb{Lf}}LhAhAh}{{Bl{BfJf}}}}{{{Bb{Lj}}}Gl}{{{Bb{Lf}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Ll}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Lj}}}{{Bb{{E`{Gl}}}}}}{Bb{{Bb{c}}}{}}000{{{Bb{An}}}{{Bb{Anc}}}{}}000{{{Bb{Ll}}}Ll}{{{Bb{Ln}}}Ln}{{Bb{Bb{Anc}}}Bf{}}0{BbBf}0{{}Ll}{Ah{{Bb{c}}}{}}:0{{{Bb{Ll}}}{{Bb{c}}}{}}11{Ah{{Bb{Anc}}}{}}000{AhBf}000{{{Bb{AnLj}}}Bf}{{{Bb{Jj}}}{{Id{Bf}}}}{{{Bb{Lf}}{Bb{AnCd}}}{{Bl{BfM`}}}}{{{Bb{Ll}}{Bb{AnCd}}}Cf}{{{Bb{Ln}}{Bb{AnCd}}}Cf}{{{Bb{Lj}}{Bb{AnCd}}}Cf}{cc{}}{{{Hn{Gl}}}Ll}{MbLl}22{LlLn}31{MbLn}{{{Bb{Jj}}}{{Id{Ll}}}}{{{Gb{Lj}}}Ll}{c{{Md{Ln}}}Mf}{{{Bb{{E`{Gl}}}}}Ln}{{{Bb{{E`{Gl}}}}}Ll}8{{{Hn{Gl}}}Ln}{{}Ah}000{{}c{}}000{{{Bb{Lf}}}{{Bl{BfJf}}}}{Lf{{Bl{MhJf}}}}{c{{Bl{LfJf}}}Mj}<{{{Bb{Jj}}}{{Id{Lj}}}}{{{Bb{Jj}}Ml}{{Id{Lj}}}}{{{Bb{Ln}}}Ah}{{{Bb{Ll}}}Bf}{{{Bb{AnLn}}{Bb{An{E`{Gl}}}}}{{Md{Ah}}}}{{{Bb{AnLn}}Ah}Ll}3{{{Bb{AnLf}}AhMn}{{Bl{BfJf}}}}{{{Bb{AnLn}}N`}{{Md{Fb}}}}{{{Bb{Ll}}{Gd{Ah}}}Ll}{Bbc{}}0{Ll{{Hn{Gl}}}}8{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{BbDj}000{{{Bb{Lf}}}{{Bl{BfJf}}}}{{}c{}}000```{{{Bb{{Il{}{{Nb{c}}}}}}}Cb{}}{{{Il{}{{Nb{c}}}}}c{}}{{{Bb{c}}{Bb{c}}}Bj{hFn}}0`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{cc{}}{{}Ah}{{{Bb{{Nd{ceg}}}}}{{Bb{{E`{{Nf{ceg}}}}}}}{}{}{}}{{{Bb{An{Nd{ceg}}}}}{{Bb{An{Hn{{Nf{ceg}}}}}}}{}{}{}}<{{{Hn{{Nf{ceg}}}}}{{Nd{ceg}}}{}{}{}}{{{Bb{{Nd{ceg}}}}Fb}{{Nh{ceg}}}{}{}{}}{{{Bb{{Nd{ceg}}}}Fb}{{Fj{{Nh{ceg}}Ah}}}{}{}{}}{{{Bb{An{Nd{ceg}}}}Fb}{{Fj{{Nj{ceg}}Ah}}}{}{}{}}{{{Bb{An{Nd{ceg}}}}Fb}{{Nj{ceg}}}{}{}{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{}c{}}```{{{Bb{Nl}}}{{Bb{{E`{Gl}}}}}}{{{Bb{Nl}}}{{Bb{Nn}}}}{{{Bb{Nl}}}{{Bb{Jd}}}}{{{Bb{Nl}}}{{Bb{O`}}}}00{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{Nl}}}Nl}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{Nl}}{Bb{Nl}}}Bj}{{Bb{Bb{c}}}Bj{}}{{}Nl}{Ah{{Bb{c}}}{}}{{{Bb{Nl}}}{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{c{{Bl{Nl}}}Bn}{AhBf}{{{Bb{Nl}}{Bb{c}}}Cb{{Ob{O`}}El}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{Nl}}{Bb{AnCd}}}Cf}0{{{Bb{Od}}}Nl}{{{Bb{O`}}}Nl}{OfNl}{OdNl}{cc{}}{cNl{{Af{}{{Ad{{Bb{Oh}}}}}}}}{cNl{{Af{}{{Ad{Od}}}}}}{cNl{{Af{}{{Ad{{Oj{O`}}}}}}}}{cNl{{Af{}{{Ad{{Ol{O`}}}}}}}}{cNl{{Af{}{{Ad{Oh}}}}}}{cNl{{Af{}{{Ad{{Bb{O`}}}}}}}}{cNl{{Af{}{{Ad{Nl}}}}}}{cNl{{Af{}{{Ad{{Bb{Nl}}}}}}}};;9{{{Bb{Nl}}{Bb{Anc}}}BfCl}{{}Ah}{{}c{}}{NlOd}{{{Bb{Nl}}{Bb{Nl}}}{{Cj{Bj}}}}{{{Bb{Nl}}c}BlDd}{Bbc{}}{BbOd}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{Bb{{Bl{OfOn}}}}{BbDj}9{{{Bb{AnNl}}Oh}Cf}{{{Bb{AnNl}}A@`}Cf}{{{Bb{AnNl}}{Bb{O`}}}Cf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{A@b{ce}}}}}{{A@b{ce}}}BhBh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{A@b{ce}}}}{Bb{{A@b{ce}}}}}Bj{EbEh}{}}{{Bb{Bb{c}}}Bj{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{{A@b{ce}}}}{Bb{{A@b{ce}}}}}CbEh{}}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{A@b{ce}}}}{Bb{AnCd}}}Cfll}{cc{}}{{}Ah}{{}c{}}{{{Bb{{A@b{ce}}}}{Bb{{A@b{ce}}}}}{{Cj{Bj}}}{EbEh}{}}{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}5`````{Bb{{Bb{c}}}{}}0{{{Bb{An}}}{{Bb{Anc}}}{}}0{{{Bb{A@d}}}A@d}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}0{Ah{{Bb{Anc}}}{}}0{c{{Bl{{A@f{e}}}}}BnA@h}{c{{Bl{A@d}}}Bn}{{{Bb{{E`{Gl}}}}}{{Id{c}}}{{A@l{A@j}}}}{AhBf}0{{{Bb{A@d}}{Bb{A@d}}}Cb}{{Bb{Bb{c}}}Cb{}}0{{{Bb{A@d}}{Bb{AnCd}}}Cf}{cc{}}0{A@jA@d}{{}Ah}0{{}c{}}0{{{Bb{{A@f{{Bb{c}}}}}}e}BlA@hDd}{{{Bb{A@d}}c}BlDd}{{{Bb{A@j}}}{{Id{{Hn{Gl}}}}}}{Bbc{}}{{{Bb{{E`{Gl}}}}}{{Id{A@h}}}}{{{Bb{{E`{Gl}}}}}{{Id{A@d}}}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{{{Bb{A@h}}}{{Id{{Hn{Gl}}}}}}{{{Bb{A@d}}}{{Id{{Hn{Gl}}}}}}{BbDj}0;;````{{{Bb{A@n}}}{{Bb{{E`{{AA`{c}}}}}}}{}}{{{Bb{AAb}}}Cb}{{{Bb{{E`{Gl}}}}}Fb}{{{Bb{AAd}}}{{Cj{{Bb{c}}}}}{}}0{{{Bb{AAf}}{Gd{Ah}}}AAf}0{{e{Bb{An{Hn{Gl}}}}Ah}{{Bb{An{E`{g}}}}}{AAhj}{{Af{}{{Ad{c}}}}}{Kbj}}{{{Bb{AAj}}{Bb{{E`{{Fj{HbHb}}}}}}{Bb{An{Hn{Hb}}}}}Bf}`{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{{{Bb{{AAl{c}}}}}{{AAl{c}}}{}}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{{{Bb{{AAl{c}}}}}{{Bb{c}}}{}}{AhBf}{{{Bb{{AAl{c}}}}{Bb{{AAl{c}}}}}CbHl}{{Bb{Bb{c}}}Cb{}}0{{{Bb{{AAl{c}}}}{Bb{AnCd}}}Cfl}{cc{}}{{}{{AAl{c}}}{}}0{{{Bb{{AAl{c}}}}}{}{}}{{}Ah}{{}c{}}{{{Bb{{AAl{c}}}}}Cb{}}44{Bbc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}5``{Bb{{Bb{c}}}{}}{{{Bb{An}}}{{Bb{Anc}}}{}}{Ah{{Bb{c}}}{}}{Ah{{Bb{Anc}}}{}}{AhBf}{{{Bb{AAn}}}Fb}?<;876;```````54{AB`AB`}{AbAb}{{{Bb{{ABb{c}}}}}{{ABb{c}}}Bh}{{Bb{Bb{Anc}}}Bf{}}{BbBf}{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}BjAAh}{{Bb{Bb{c}}}Bj{}}:9{{{Bb{{ABb{c}}}}}FbGj}9{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}CbABd}{{Bb{Bb{c}}}Cb{}}0{cc{}}{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}CbAAh}0{{{Bb{{ABb{c}}}}{Bb{Ane}}}BfABfCl}{{}Ah}{{}c{}}{{{Bb{{ABb{c}}}}}CbIl}447{{{Bb{{ABb{c}}}}{Bb{{ABb{c}}}}}{{Cj{Bj}}}AAh}{ce{}{}}{Bbc{}}{{{Bb{{ABl{}{{ABh{c}}{ABj{e}}}}}}}c{EfEh}{}}{{{Bb{AAh}}{Bb{AAh}}}Bj}{{{Bb{ABd}}{Bb{ABd}}}Cb}{{{Bb{AAh}}{Bb{AAh}}}Cb}0{{{Bb{ABf}}{Bb{Anc}}}BfCl}{{{Bb{{E`{ABf}}}}{Bb{Anc}}}BfCl}223{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{BbDj}{{{ABb{c}}}eIl{}}>``````{{{Bb{{AC`{}{{ABn{c}}}}}}g}{{Hn{e}}}{}{}{{Dh{{Bb{c}}}{{D`{e}}}}}}{{{AC`{}{{ABn{c}}}}g}{{Hn{e}}}{}{}{{Dh{c}{{D`{e}}}}}}{{{Bb{AnACb}}Ahc}Bfj}{{{Bb{An{Hn{c}}}}{Bb{An{Hn{e}}}}g}Bf{}{}{{Dh{ce}{{D`{{Cj{{Fj{ce}}}}}}}}}}{ACd{{Fj{AhAh}}}}{{{Bb{AnACf}}c}Bf{}}{{{Bb{ACd}}}{{Fj{AhAh}}}}{{AhAb}ACh}","D":"ABb","p":[[17,"Abs"],[10,"AbsDiff",47],[10,"Num",968],[10,"PartialOrd",969],[10,"Copy",970],[10,"Debug",971],[10,"Send",970],[10,"Sync",970],[1,"f64"],[17,"Item"],[10,"IntoIterator",972],[1,"usize"],[8,"PlHashMap",54],[8,"PlHashSet",54],[0,"mut"],[5,"Arena",72],[1,"reference"],[5,"Node",72],[1,"unit"],[10,"Clone",973],[6,"Ordering",969],[6,"Result",974],[10,"Deserializer",975],[10,"Deserialize",975],[1,"bool"],[5,"Formatter",971],[8,"Result",971],[1,"array"],[6,"Option",976],[10,"Hasher",977],[10,"Default",978],[17,"Output"],[10,"FnOnce",979],[10,"Serializer",980],[10,"Serialize",980],[10,"FnMut",979],[5,"TypeId",981],[1,"u32"],[10,"ExponentialSearch",141],[1,"slice"],[10,"Ord",969],[5,"FastFixedCache",146],[10,"Hash",977],[10,"Eq",969],[5,"FastCachedFunc",146],[10,"Sized",970],[10,"Borrow",982],[5,"CardinalitySketch",185],[1,"u64"],[5,"SyncUnsafeCell",207],[1,"never"],[5,"Chunks",228],[1,"tuple"],[5,"FixedRingBuffer",262],[10,"IsFloat",286],[10,"FloorDivMod",293],[5,"Arc",983],[5,"Range",984],[5,"BytesHash",298],[5,"HashPartitioner",298],[10,"DirtyHash",298],[1,"u8"],[5,"BytesIndexMap",354],[6,"Entry",354],[8,"IdxSize",465],[5,"OccupiedEntry",354],[5,"VacantEntry",354],[10,"Iterator",985],[5,"UnitVec",420],[10,"PartialEq",969],[5,"Vec",986],[5,"Iter",987],[5,"IterMut",987],[8,"PolarsResult",988],[5,"NullableIdxSize",465],[5,"ChunkId",465],[10,"Indexable",465],[10,"IsNull",689],[10,"Bounded",465],[10,"NullCount",465],[10,"ToIdx",465],[5,"Path",989],[5,"Error",990],[6,"PolarsError",988],[5,"File",991],[10,"Itertools",534],[5,"EnumerateIdx",544],[10,"Add",992],[10,"FromPrimitive",993],[10,"AddAssign",992],[10,"One",994],[5,"Python",995],[5,"PyDict",996],[5,"Bound",997],[10,"ExactSizeIterator",998],[10,"Zero",994],[10,"DoubleEndedIterator",999],[10,"MinMax",577],[5,"Mmap",584,1000],[6,"Advice",1001],[5,"MMapSemaphore",584],[5,"MemSlice",584,1002],[5,"MemReader",584],[5,"Error",971],[5,"Bytes",1003],[8,"Result",990],[10,"Read",1004],[5,"MmapMut",1000],[10,"MmapAsRawDesc",1000],[5,"MmapOptions",1000],[5,"RemapOptions",1000],[6,"SeekFrom",1004],[17,"Inner"],[5,"PartitionedHashMap",696],[5,"HashMap",1005],[5,"RawEntryBuilder",1006],[5,"RawEntryBuilderMut",1006],[5,"PlSmallStr",716],[5,"OsStr",1007],[1,"str"],[10,"AsRef",1008],[5,"String",1009],[5,"CompactString",1010],[1,"char"],[5,"Box",1011],[6,"Cow",1012],[6,"ToCompactStringError",1010],[5,"Arguments",971],[5,"Priority",775],[5,"PythonFunction",799],[5,"PySerializeWrap",799,1013],[10,"TrySerializeToBytes",799,1013],[8,"PyObject",997],[10,"From",1008],[10,"Slice2Uninit",847],[20,"MaybeUninit",1014],[10,"SortedSlice",847],[10,"Extrema",847],[10,"SliceAble",847],[10,"TotalOrd",903],[5,"ThreadPool",1015],[5,"SyncPtr",860],[5,"MemInfo",888],[1,"f32"],[5,"TotalOrdWrap",903],[10,"TotalEq",903],[10,"TotalHash",903],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",903],[17,"ItemIn"],[10,"ConvertVec",954],[10,"ResizeFaster",954],[10,"IntoRawParts",954],[10,"PushUnchecked",954],[10,"CapacityByFactor",954],[10,"InitHashMaps",54],[8,"PlIndexMap",54],[8,"PlIndexSet",54]],"r":[[0,465],[1,465],[352,354],[587,1002],[588,1000],[799,1013],[801,1013],[803,1013]],"b":[[444,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[445,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[631,"impl-From%3CVec%3Cu8%3E%3E-for-MemSlice"],[632,"impl-From%3CBytes%3E-for-MemSlice"],[719,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[720,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[721,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[722,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[741,"impl-Display-for-PlSmallStr"],[742,"impl-Debug-for-PlSmallStr"],[743,"impl-From%3C%26String%3E-for-PlSmallStr"],[744,"impl-From%3C%26str%3E-for-PlSmallStr"],[745,"impl-From%3CCompactString%3E-for-PlSmallStr"],[746,"impl-From%3CString%3E-for-PlSmallStr"],[748,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[749,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[750,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[751,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[752,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[753,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[754,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[755,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcDWgAAAAkACwBdAGsAAABtAAEAcAACAHUAGgCSAAAAlAAPAKYABQCuAAsAuwAKAMcAAADKAAUA0QABANQAAwDcAAAA4QADAOYACgDyAAAA9AASAAkBBgASAQAAFAEDABoBBAAgAQoALAEYAEcBAQBKAQEATgEBAFEBEQBkARoAhAEGAI8BAQCSARMApwEXAMABAQDDAQYAywEnAPQBAAD2AQAA+AEEAP8BFwAYAgAAGgIEACICCQAtAgAALwIDADQCCABCAggAUAImAHgCAQB8AgAAgAICAIcCAwCSAgMAlwICAJsCAACdAgEAoAIMAK4CCAC5AgUAwAICAMQCCgDQAhsA7QIMAPsCDAAJAw0AGAMAABoDBQAhAwAAIwMAACUDEwA7AwIAQAMZAFsDAABeAwYAZgMEAGwDAwBxAwAAcwMGAHsDBACCAwAAhAMEAI0DAwCTAwsAoAMDAKUDGgDBAwIAxQMAAMcDAQA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[427085,214104,56426,84382,9595,3387,8680,30076]}